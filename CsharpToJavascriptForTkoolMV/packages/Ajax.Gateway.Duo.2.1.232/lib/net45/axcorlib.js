/*!
* axcorlib, Version=2.1.232.0, Culture=neutral, PublicKeyToken=null
*
* Generated by DuoCode Compiler 2.2.1617.0 [Professional]
*/
(function axcorlib() {
"use strict";
var $asm = {
    fullName: "axcorlib",
    anonymousTypes: [],
    types: [],
    getAttrs: function() { return [new System.Reflection.AssemblyTitleAttribute.ctor("Ajax.Gateway.Duo"), new System.Reflection.AssemblyDescriptionAttribute.ctor("AjaxGateway.Net - Web Application Toolkit - Duo Runtime - 2.1.232"), new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor("Mackey Kinard"), new System.Reflection.AssemblyProductAttribute.ctor("Ajax.Gateway.Duo"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9 Mackey Kinard 2016"), new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), new System.Reflection.AssemblyVersionAttribute.ctor("2.1.232"), new System.Reflection.AssemblyFileVersionAttribute.ctor("2.1.232"), new DuoCode.Runtime.CompilerAttribute.ctor("2.2.1617.0")]; },
    resources: {
        "axcorlib.templates.min.js": ""
    }
};
var $g = (typeof(global) !== "undefined" ? global : (typeof(window) !== "undefined" ? window : self));
var System = $g.System = $g.System || {};
System.Gateway = System.Gateway || {};
System.Xml = System.Xml || {};
System.ComponentModel = System.ComponentModel || {};
System.Collections = System.Collections || {};
System.Collections.Generic = System.Collections.Generic || {};
System.Collections.Specialized = System.Collections.Specialized || {};
System.Windows = System.Windows || {};
System.Windows.Input = System.Windows.Input || {};
var DuoCode = $g.DuoCode = $g.DuoCode || {};
DuoCode.Dom = DuoCode.Dom || {};
System.Data = System.Data || {};
var Newtonsoft = $g.Newtonsoft = $g.Newtonsoft || {};
Newtonsoft.Json = Newtonsoft.Json || {};
Newtonsoft.Json.Linq = Newtonsoft.Json.Linq || {};
System.Gateway.Events = System.Gateway.Events || {};
System.Gateway.Ioc = System.Gateway.Ioc || {};
System.Collections.ObjectModel = System.Collections.ObjectModel || {};
System.Gateway.Mvvm = System.Gateway.Mvvm || {};
DuoCode.Runtime = DuoCode.Runtime || {};
var $d = DuoCode.Runtime;
$d.$assemblies["axcorlib"] = $asm;
System.Gateway.NativeAjaxService = $d.declare("System.Gateway.NativeAjaxService", 0, $asm);
System.Gateway.NativeRemoteService = $d.declare("System.Gateway.NativeRemoteService", 0, $asm);
System.Gateway.HttpClientManager = $d.declare("System.Gateway.HttpClientManager", 0, $asm);
System.Gateway.RemoteRequest = $d.declare("System.Gateway.RemoteRequest", 0, $asm);
System.BlobData = $d.declare("System.BlobData", 0, $asm);
System.ApplicationAttribute = $d.declare("System.ApplicationAttribute", 0, $asm);
System.ReadyAttribute = $d.declare("System.ReadyAttribute", 0, $asm);
System.DataStorage = $d.declare("System.DataStorage", 0, $asm);
System.Null = $d.declare("System.Null", 0, $asm);
System.Errors = $d.declare("System.Errors", 0, $asm);
System.Ajax = $d.declare("System.Ajax", 0, $asm);
System.AjaxResponse = $d.declare("System.AjaxResponse", 0, $asm);
System.Trace = $d.declare("System.Trace", 0, $asm);
System.MemberInfoExtensions = $d.declare("System.MemberInfoExtensions", 0, $asm);
System.EventArgs$1 = $d.declare("System.EventArgs`1", 256, $asm);
System.EventArgs$2 = $d.declare("System.EventArgs`2", 768, $asm);
System.Gateway.AjaxRuntime = $d.declare("System.Gateway.AjaxRuntime", 0, $asm);
System.Gateway.Runtime = $d.declare("System.Gateway.Runtime", 0, $asm);
System.Gateway.TextContent = $d.declare("System.Gateway.TextContent", 0, $asm);
System.Gateway.RemoteService = $d.declare("System.Gateway.RemoteService", 0, $asm);
System.Gateway.RemoteMethodAttribute = $d.declare("System.Gateway.RemoteMethodAttribute", 0, $asm);
System.Gateway.LocalGateway = $d.declare("System.Gateway.LocalGateway", 0, $asm);
System.Gateway.LocalService = $d.declare("System.Gateway.LocalService", 0, $asm);
System.Gateway.Features = $d.declare("System.Gateway.Features", 0, $asm);
System.Xml.XmlDocument = $d.declare("System.Xml.XmlDocument", 0, $asm);
System.ComponentModel.PropertyChangedEventArgs = $d.declare("System.ComponentModel.PropertyChangedEventArgs", 
    0, $asm);
System.Collections.Generic.DictionaryList$2 = $d.declare("System.Collections.Generic.DictionaryList`2", 
    768, $asm);
System.Collections.Specialized.NotifyCollectionChangedEventArgs = $d.declare("System.Collections.Specialized.NotifyCollectionChangedEventArgs", 
    0, $asm);
DuoCode.Dom.HtmlEventListener = $d.declare("DuoCode.Dom.HtmlEventListener", 0, $asm);
DuoCode.Dom.HtmlDuoExtensions = $d.declare("DuoCode.Dom.HtmlDuoExtensions", 0, $asm);
DuoCode.Dom.WindowExtensions = $d.declare("DuoCode.Dom.WindowExtensions", 0, $asm);
System.Data.DataSet = $d.declare("System.Data.DataSet", 0, $asm);
System.Data.DataTable = $d.declare("System.Data.DataTable", 0, $asm);
Newtonsoft.Json.Linq.JObject = $d.declare("Newtonsoft.Json.Linq.JObject", 0, $asm);
Newtonsoft.Json.JsonObjectAttribute = $d.declare("Newtonsoft.Json.JsonObjectAttribute", 0, $asm);
Newtonsoft.Json.JsonIgnoreAttribute = $d.declare("Newtonsoft.Json.JsonIgnoreAttribute", 0, $asm);
System.Gateway.Events.EventBus = $d.declare("System.Gateway.Events.EventBus", 0, $asm);
System.Gateway.Ioc.MicroIoc = $d.declare("System.Gateway.Ioc.MicroIoc", 0, $asm);
System.Gateway.Ioc.ServiceLocator = $d.declare("System.Gateway.Ioc.ServiceLocator", 0, $asm);
System.Gateway.Ioc.ActivationException = $d.declare("System.Gateway.Ioc.ActivationException", 0, $asm);
System.Gateway.Ioc.ServiceLocatorImplBase = $d.declare("System.Gateway.Ioc.ServiceLocatorImplBase", 0, 
    $asm);
System.PreferredConstructorAttribute = $d.declare("System.PreferredConstructorAttribute", 0, $asm);
System.Collections.ObjectModel.Collection$1 = $d.declare("System.Collections.ObjectModel.Collection`1", 
    256, $asm);
System.Collections.ObjectModel.ObservableObject = $d.declare("System.Collections.ObjectModel.ObservableObject", 
    0, $asm);
System.Collections.ObjectModel.ObservableArray$1 = $d.declare("System.Collections.ObjectModel.ObservableArray`1", 
    768, $asm);
System.Collections.ObjectModel.ObservableCollection$1 = $d.declare("System.Collections.ObjectModel.ObservableCollection`1", 
    768, $asm);
System.Collections.ObjectModel.ObservableCollection$1.SimpleMonitor = $d.declare("SimpleMonitor", 256, 
    System.Collections.ObjectModel.ObservableCollection$1);
System.Gateway.Mvvm.Model = $d.declare("System.Gateway.Mvvm.Model", 0, $asm);
System.Gateway.Mvvm.ViewModel = $d.declare("System.Gateway.Mvvm.ViewModel", 0, $asm);
System.Gateway.Mvvm.RelayCommand = $d.declare("System.Gateway.Mvvm.RelayCommand", 0, $asm);
System.Gateway.Mvvm.RelayCommand$1 = $d.declare("System.Gateway.Mvvm.RelayCommand`1", 256, $asm);
System.App = $d.declare("System.App", 0, $asm);
System.Gateway.NativeConsoleService = $d.declare("System.Gateway.NativeConsoleService", 0, $asm);
System.Root = $d.declare("System.Root", 0, $asm);
System.Root.browser = $d.declare("browser", 0, System.Root);
System.PlatformTools = $d.declare("System.PlatformTools", 0, $asm);
System.AsyncWaiter = $d.declare("System.AsyncWaiter", 0, $asm);
System.Template = $d.declare("System.Template", 0, $asm);
System.Template.tools = $d.declare("tools", 0, System.Template);
System.MarkupTemplate = $d.declare("System.MarkupTemplate", 0, $asm);
System.ViewController$1 = $d.declare("System.ViewController`1", 256, $asm);
System.ViewController = $d.declare("System.ViewController", 0, $asm);
System.PageDialog = $d.declare("System.PageDialog", 0, $asm);
System.ModalDialogOptions = $d.declare("System.ModalDialogOptions", 0, $asm);
System.OpenDialogOptions = $d.declare("System.OpenDialogOptions", 0, $asm);
System.ContentLoader = $d.declare("System.ContentLoader", 0, $asm);
System.ScriptInfo = $d.declare("System.ScriptInfo", 0, $asm);
System.LinkInfo = $d.declare("System.LinkInfo", 0, $asm);
System.DocumentInfo = $d.declare("System.DocumentInfo", 0, $asm);
System.XmlContent = $d.declare("System.XmlContent", 0, $asm);
System.DocumentContent = $d.declare("System.DocumentContent", 0, $asm);
System.UIManagerExtensions = $d.declare("System.UIManagerExtensions", 0, $asm);
System.LoaderEvent = $d.declare("System.LoaderEvent", 0, $asm);
System.DirectiveEvent = $d.declare("System.DirectiveEvent", 0, $asm);
System.RouteEvent = $d.declare("System.RouteEvent", 0, $asm);
System.RoutePath = $d.declare("System.RoutePath", 0, $asm);
System.UIManager = $d.declare("System.UIManager", 0, $asm);
System.ComponentModel.ChangeListener = $d.declare("System.ComponentModel.ChangeListener", 0, $asm);
System.ComponentModel.ChildChangeListener = $d.declare("System.ComponentModel.ChildChangeListener", 0, 
    $asm);
System.ComponentModel.CollectionChangeListener = $d.declare("System.ComponentModel.CollectionChangeListener", 
    0, $asm);
System.PageAnimationSet = $d.declare("System.PageAnimationSet", 0, $asm);
System.ModalAnimationSet = $d.declare("System.ModalAnimationSet", 0, $asm);
System.PageView = $d.declare("System.PageView", 0, $asm);
DuoCode.Runtime.DateTimeExtensions = $d.declare("DuoCode.Runtime.DateTimeExtensions", 0, $asm);
DuoCode.Runtime.JsArrayExtensions = $d.declare("DuoCode.Runtime.JsArrayExtensions", 0, $asm);
System.StringExtensions = $d.declare("System.StringExtensions", 0, $asm);
System.TypeHelperExtension = $d.declare("System.TypeHelperExtension", 0, $asm);
System.IAjaxService = $d.type("System.IAjaxService", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161, null, [["Get", null, 6, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1], ["failure", System.Action$1(System.Exception, 1439), 2], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3]]], ["GetAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2]]], ["Post", null, 6, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["success", System.Action$1(System.AjaxResponse, 44583), 3], ["failure", System.Action$1(System.Exception, 1439), 4], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5]]], ["PostAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["exception", System.Action$1(System.Exception, 1439), 3], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4]]], ["PostJson", null, 6, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2], ["failure", System.Action$1(System.Exception, 1439), 3], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4]]], ["PostJsonAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3]]], ["Put", null, 6, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["success", System.Action$1(System.AjaxResponse, 44583), 3], ["failure", System.Action$1(System.Exception, 1439), 4], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5]]], ["PutAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["exception", System.Action$1(System.Exception, 1439), 3], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4]]], ["PutJson", null, 6, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2], ["failure", System.Action$1(System.Exception, 1439), 3], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4]]], ["PutJsonAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3]]], ["Delete", null, 6, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1], ["failure", System.Action$1(System.Exception, 1439), 2], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3]]], ["DeleteAsync", null, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2]]]]]; };
});
$d.define(System.Gateway.NativeAjaxService, null, function($t, $p) {
    $t.$intfs = [System.IAjaxService];
    $t.$typeInfo = function(t, p) { return [1, null, [["Get", p.Get, 6, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["GetAsync", p.GetAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2, 4096, null]]], ["Post", p.Post, 6, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2, 4096, "text/plain"], ["success", System.Action$1(System.AjaxResponse, 44583), 3, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]]], ["PostAsync", p.PostAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2, 4096, "text/plain"], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PostJson", p.PostJson, 6, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PostJsonAsync", p.PostJsonAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["Put", p.Put, 6, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2, 4096, "text/plain"], ["success", System.Action$1(System.AjaxResponse, 44583), 3, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]]], ["PutAsync", p.PutAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2, 4096, "text/plain"], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PutJson", p.PutJson, 6, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PutJsonAsync", p.PutJsonAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["Delete", p.Delete, 6, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["DeleteAsync", p.DeleteAsync, 6, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2, 4096, null]]]], [["ctor", t.ctor, 6]]]; };
    $t.ctor = function NativeAjaxService() {
        $t.$baseType.ctor.call(this);
    };
    $p.Get = function NativeAjaxService_Get(url, success, failure, headers) {
        System.Gateway.HttpClientManager.SendRequest(url, "GET", null, null, success, failure, headers);
    };
    $p.GetAsync = function NativeAjaxService_GetAsync(url, exception, headers) {
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "GET", null, null, exception, headers);
    };
    $p.Post = function NativeAjaxService_Post(url, data, type, success, failure, headers) {
        System.Gateway.HttpClientManager.SendRequest(url, "POST", data, type, success, failure, headers);
    };
    $p.PostAsync = function NativeAjaxService_PostAsync(url, data, type, exception, headers) {
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "POST", data, type, exception, 
            headers);
    };
    $p.PostJson = function NativeAjaxService_PostJson(url, data, success, failure, headers) {
        var json = String.Empty;
        if (data != null) {
            json = System.Ajax.JsonString(data);
        }
        System.Gateway.HttpClientManager.SendRequest(url, "POST", json, System.Gateway.TextContent().JsonMimeType, 
            success, failure, headers);
    };
    $p.PostJsonAsync = function NativeAjaxService_PostJsonAsync(url, data, exception, headers) {
        var json = String.Empty;
        if (data != null) {
            json = System.Ajax.JsonString(data);
        }
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "POST", json, System.Gateway.TextContent().JsonMimeType, 
            exception, headers);
    };
    $p.Put = function NativeAjaxService_Put(url, data, type, success, failure, headers) {
        System.Gateway.HttpClientManager.SendRequest(url, "PUT", data, type, success, failure, headers);
    };
    $p.PutAsync = function NativeAjaxService_PutAsync(url, data, type, exception, headers) {
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "PUT", data, type, exception, headers);
    };
    $p.PutJson = function NativeAjaxService_PutJson(url, data, success, failure, headers) {
        var json = String.Empty;
        if (data != null) {
            json = System.Ajax.JsonString(data);
        }
        System.Gateway.HttpClientManager.SendRequest(url, "PUT", json, System.Gateway.TextContent().JsonMimeType, 
            success, failure, headers);
    };
    $p.PutJsonAsync = function NativeAjaxService_PutJsonAsync(url, data, exception, headers) {
        var json = String.Empty;
        if (data != null) {
            json = System.Ajax.JsonString(data);
        }
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "PUT", json, System.Gateway.TextContent().JsonMimeType, 
            exception, headers);
    };
    $p.Delete = function NativeAjaxService_Delete(url, success, failure, headers) {
        System.Gateway.HttpClientManager.SendRequest(url, "DELETE", null, null, success, failure, headers);
    };
    $p.DeleteAsync = function NativeAjaxService_DeleteAsync(url, exception, headers) {
        return System.Gateway.HttpClientManager.SendRequestAsync(url, "DELETE", null, null, exception, 
            headers);
    };
    $p.System$IAjaxService$Get = $p.Get;
    $p.System$IAjaxService$GetAsync = $p.GetAsync;
    $p.System$IAjaxService$Post = $p.Post;
    $p.System$IAjaxService$PostAsync = $p.PostAsync;
    $p.System$IAjaxService$PostJson = $p.PostJson;
    $p.System$IAjaxService$PostJsonAsync = $p.PostJsonAsync;
    $p.System$IAjaxService$Put = $p.Put;
    $p.System$IAjaxService$PutAsync = $p.PutAsync;
    $p.System$IAjaxService$PutJson = $p.PutJson;
    $p.System$IAjaxService$PutJsonAsync = $p.PutJsonAsync;
    $p.System$IAjaxService$Delete = $p.Delete;
    $p.System$IAjaxService$DeleteAsync = $p.DeleteAsync;
});
System.IService = $d.type("System.IService", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161]; };
});
System.Gateway.IRemoteService = $d.type("System.Gateway.IRemoteService", 66, $asm, function($t, $p) {
    $t.$intfs = [System.IService];
    $t.$typeInfo = function(t, p) { return [161, null, [(function(T) { return ["CallMethod", null, 6, 38, [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3], ["success", System.Action$1(T), 4], ["failure", System.Action$1(System.Exception, 1439), 5], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 6]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["CallMethodAsync", null, 6, System.Threading.Tasks.Task$1(T), [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3], ["exception", System.Action$1(System.Exception, 1439), 4], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5]], null, [T]]; }).call(this, $d.typeParam("T"))]]; };
});
$d.define(System.Gateway.NativeRemoteService, null, function($t, $p) {
    $t.$intfs = [System.Gateway.IRemoteService, System.IService];
    $t.$typeInfo = function(t, p) { return [1, null, [(function(T) { return ["CallMethod", p.CallMethod, 6, 38, [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3, 4096, null], ["success", System.Action$1(T), 4, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 5, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 6, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["CallMethodAsync", p.CallMethodAsync, 6, System.Threading.Tasks.Task$1(T), [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T"))], [["ctor", t.ctor, 6]]]; };
    $t.ctor = function NativeRemoteService() {
        $t.$baseType.ctor.call(this);
    };
    $p.CallMethod = function NativeRemoteService_CallMethod(T, url, service, method, parameters, success, failure, headers) {
        System.Gateway.HttpClientManager.CallMethod(T, url, service, method, parameters, success, failure, 
            headers);
    };
    $p.CallMethodAsync = function NativeRemoteService_CallMethodAsync(T, url, service, method, parameters, exception, headers) {
        return System.Gateway.HttpClientManager.CallMethodAsync(T, url, service, method, parameters, 
            exception, headers);
    };
    $p.System$Gateway$IRemoteService$CallMethod = $p.CallMethod;
    $p.System$Gateway$IRemoteService$CallMethodAsync = $p.CallMethodAsync;
});
$d.define(System.Gateway.HttpClientManager, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["RpcFormContentType", 20, 86, "application/x-www-form-urlencoded"], ["RpcFlashContentType", 20, 86, "application/x-shockwave-flash"], ["RpcBinaryContentType", 20, 86, "application/octet-stream"], ["RpcScriptContentType", 20, 86, "application/javascript"], ["RpcPostContentType", 20, 86, "application/x-ajax-request"], ["RpcNativeContentType", 20, 86, "application/x-ajax-native"], ["RpcJsonContentType", 20, 86, "application/json"], ["RpcXmlContentType", 20, 86, "application/xml"], ["RpcHtmlContentType", 20, 86, "text/html"], ["RpcTextContentType", 20, 86, "text/plain"], ["RpcPostRequestType", 20, 86, "POST"], ["RpcGetRequestType", 20, 86, "GET"], ["RpcOptionsRequestType", 20, 86, "OPTIONS"], ["RpcNullType", 20, 86, "{null}"], ["RpcVoidType", 20, 86, "{void}"], ["RpcXmlResponseType", 20, 86, "application/x-ajax-xml"], ["RpcJsonResponseType", 20, 86, "application/x-ajax-json"], ["RpcNullResponseType", 20, 86, "application/x-ajax-null"], ["RpcVoidResponseType", 20, 86, "application/x-ajax-void"], ["RpcStringResponseType", 20, 86, "application/x-ajax-string"], ["RpcBooleanResponseType", 20, 86, "application/x-ajax-boolean"], ["RpcDecimalResponseType", 20, 86, "application/x-ajax-decimal"], ["RpcDoubleResponseType", 20, 86, "application/x-ajax-double"], ["RpcSingleResponseType", 20, 86, "application/x-ajax-single"], ["RpcInt16ResponseType", 20, 86, "application/x-ajax-int16"], ["RpcInt32ResponseType", 20, 86, "application/x-ajax-int32"], ["RpcInt64ResponseType", 20, 86, "application/x-ajax-int64"], ["RpcIntPtrResponseType", 20, 86, "application/x-ajax-intptr"], ["RpcUInt16ResponseType", 20, 86, "application/x-ajax-uint16"], ["RpcUInt32ResponseType", 20, 86, "application/x-ajax-uint32"], ["RpcUInt64ResponseType", 20, 86, "application/x-ajax-uint64"], ["RpcUIntPtrResponseType", 20, 86, "application/x-ajax-uintptr"], ["RpcBase64ResponseType", 20, 86, "application/x-ajax-base64"], ["RpcCharResponseType", 20, 86, "application/x-ajax-char"], ["RpcByteResponseType", 20, 86, "application/x-ajax-byte"], ["RpcSByteResponseType", 20, 86, "application/x-ajax-sbyte"], ["RpcDateTimeResponseType", 20, 86, "application/x-ajax-datetime"], ["RpcInteropResponseType", 20, 86, "application/x-ajax-interop"], ["RpcDataSetResponseType", 20, 86, "application/x-ajax-dataset"], ["RpcDataTableResponseType", 20, 86, "application/x-ajax-datatable"], ["RpcBinaryResponseType", 20, 86, "application/octet-stream"], ["RequestFactory", System.Func$1(XMLHttpRequest, 15904), 22]], [["FormatRequest", t.FormatRequest, 19, 20, [["methodName", 20, 0], ["paramValues", 129, 1]]], (function(T) { return ["CallMethod", t.CallMethod, 19, 38, [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3, 4096, null], ["success", System.Action$1(T), 4, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 5, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 6, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["CallMethodAsync", t.CallMethodAsync, 19, System.Threading.Tasks.Task$1(T), [["url", 20, 0], ["service", 20, 1], ["method", 20, 2], ["parameters", 129, 3, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["SendRequest", t.SendRequest, 19, 38, [["url", 20, 0], ["method", 20, 1], ["data", 1, 2], ["type", 20, 3, 4096, "text/plain"], ["success", System.Action$1(System.AjaxResponse, 44583), 4, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 5, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 6, 4096, null]]], ["SendRequestAsync", t.SendRequestAsync, 19, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["method", 20, 1], ["data", 1, 2], ["type", 20, 3, 4096, "text/plain"], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]]], [".cctor", t.cctor, 17]]]; };
    $t.cctor = function() {
        $t.RpcFormContentType = "application/x-www-form-urlencoded";
        $t.RpcFlashContentType = "application/x-shockwave-flash";
        $t.RpcBinaryContentType = "application/octet-stream";
        $t.RpcScriptContentType = "application/javascript";
        $t.RpcPostContentType = "application/x-ajax-request";
        $t.RpcNativeContentType = "application/x-ajax-native";
        $t.RpcJsonContentType = "application/json";
        $t.RpcXmlContentType = "application/xml";
        $t.RpcHtmlContentType = "text/html";
        $t.RpcTextContentType = "text/plain";
        $t.RpcPostRequestType = "POST";
        $t.RpcGetRequestType = "GET";
        $t.RpcOptionsRequestType = "OPTIONS";
        $t.RpcNullType = "{null}";
        $t.RpcVoidType = "{void}";
        $t.RpcXmlResponseType = "application/x-ajax-xml";
        $t.RpcJsonResponseType = "application/x-ajax-json";
        $t.RpcNullResponseType = "application/x-ajax-null";
        $t.RpcVoidResponseType = "application/x-ajax-void";
        $t.RpcStringResponseType = "application/x-ajax-string";
        $t.RpcBooleanResponseType = "application/x-ajax-boolean";
        $t.RpcDecimalResponseType = "application/x-ajax-decimal";
        $t.RpcDoubleResponseType = "application/x-ajax-double";
        $t.RpcSingleResponseType = "application/x-ajax-single";
        $t.RpcInt16ResponseType = "application/x-ajax-int16";
        $t.RpcInt32ResponseType = "application/x-ajax-int32";
        $t.RpcInt64ResponseType = "application/x-ajax-int64";
        $t.RpcIntPtrResponseType = "application/x-ajax-intptr";
        $t.RpcUInt16ResponseType = "application/x-ajax-uint16";
        $t.RpcUInt32ResponseType = "application/x-ajax-uint32";
        $t.RpcUInt64ResponseType = "application/x-ajax-uint64";
        $t.RpcUIntPtrResponseType = "application/x-ajax-uintptr";
        $t.RpcBase64ResponseType = "application/x-ajax-base64";
        $t.RpcCharResponseType = "application/x-ajax-char";
        $t.RpcByteResponseType = "application/x-ajax-byte";
        $t.RpcSByteResponseType = "application/x-ajax-sbyte";
        $t.RpcDateTimeResponseType = "application/x-ajax-datetime";
        $t.RpcInteropResponseType = "application/x-ajax-interop";
        $t.RpcDataSetResponseType = "application/x-ajax-dataset";
        $t.RpcDataTableResponseType = "application/x-ajax-datatable";
        $t.RpcBinaryResponseType = "application/octet-stream";
        $t.RequestFactory = null;
    };
    $t.FormatRequest = function HttpClientManager_FormatRequest(methodName, paramValues) {
        var rpcRequest = (function() {
            var $obj = new System.Gateway.RemoteRequest.ctor();
            $obj.ajaxrpc = "1.0";
            $obj.method = methodName;
            $obj.parameters = paramValues;
            $obj.id = "0";
            return $obj;
        }).call(this);
        return JSON.stringify(rpcRequest);
    };
    $t.CallMethod = function HttpClientManager_CallMethod(T, url, service, method, parameters, success, failure, headers) {
        var data = $t.FormatRequest(method, parameters);
        var xhr = null;
        if (System.Gateway.HttpClientManager().RequestFactory != null) {
            xhr = System.Gateway.HttpClientManager().RequestFactory();
            if (xhr == null) {
                throw new System.Exception.ctor$1("Null XMLHttpRequest returned from http request factory.");
            }
        }
        else {
            xhr = new XMLHttpRequest();
        }
        var returns = $d.typeOf(T);
        var blob = System.TypeHelperExtension.IsBlobType(returns);
        xhr.timeout = System.Gateway.RemoteService().DefaultTimeout;
        xhr.open("POST", url, true);
        xhr.responseType = blob ? "blob" : "text";
        xhr.setRequestHeader("Service-Class", service);
        xhr.setRequestHeader("Content-Type", $t().RpcPostContentType);
        if (!String.IsNullOrEmpty(System.Gateway.RemoteService().get_DefaultTicket())) {
            xhr.setRequestHeader("Authentication-Slide", "true");
            xhr.setRequestHeader("Authentication-Ticket", System.Gateway.RemoteService().get_DefaultTicket());
        }
        if (System.Gateway.RemoteService().get_DefaultHeaders() != null && System.Gateway.RemoteService().get_DefaultHeaders().get_Count() > 0) {
            var $iter = System.Gateway.RemoteService().get_DefaultHeaders();
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var default_header = $enumerator.System$Collections$IEnumerator$get_Current();
                xhr.setRequestHeader(default_header.get_Key(), default_header.get_Value());
            }
        }
        if (headers != null && headers.get_Count() > 0) {
            var $iter1 = headers;
            var $enumerator1 = $iter1.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator1.System$Collections$IEnumerator$MoveNext()) {
                var request_header = $enumerator1.System$Collections$IEnumerator$get_Current();
                xhr.setRequestHeader(request_header.get_Key(), request_header.get_Value());
            }
        }
        xhr.onreadystatechange = $d.delegate(function(evt) {
            var xhr_target = evt.target;
            if (xhr.readyState == 4) {
                if (xhr.status == 200) {
                    try {
                        var nil = null;
                        var httpResponse = nil;
                        var returnType = xhr.getResponseHeader("Content-Type");
                        var ticket = xhr.getResponseHeader("Authentication-Ticket");
                        if (!String.IsNullOrEmpty(ticket)) {
                            System.Gateway.RemoteService.SetDefaultTicket(ticket);
                        }
                        if (xhr.responseType == "blob") {
                            httpResponse = xhr.response;
                        }
                        else {
                            var response_data = xhr.responseText;
                            if (returnType == $t().RpcVoidResponseType || returnType == $t().RpcNullResponseType) {
                                httpResponse = nil;
                            }
                            else if (returnType == $t().RpcStringResponseType || returnType == $t().RpcBase64ResponseType) {
                                httpResponse = response_data;
                            }
                            else if (returnType == $t().RpcJsonResponseType || returnType == $t().RpcInteropResponseType || returnType == $t().RpcDataSetResponseType || returnType == $t().RpcDataTableResponseType) {
                                httpResponse = JSON.parse(response_data);
                            }
                            else if (returnType == $t().RpcXmlResponseType) {
                                var parser = new DOMParser();
                                var doc = parser.parseFromString(response_data, System.Gateway.TextContent().XmlMimeType);
                                httpResponse = new System.Xml.XmlDocument.ctor(doc);
                            }
                            else if (returnType == $t().RpcBooleanResponseType) {
                                httpResponse = (response_data.toLowerCase() == "true");
                            }
                            else if (returnType == $t().RpcInt16ResponseType || returnType == $t().RpcInt32ResponseType || returnType == $t().RpcInt64ResponseType || returnType == $t().RpcIntPtrResponseType) {
                                httpResponse = parseInt(response_data);
                            }
                            else if (returnType == $t().RpcUInt16ResponseType || returnType == $t().RpcUInt32ResponseType || returnType == $t().RpcUInt64ResponseType || returnType == $t().RpcUIntPtrResponseType) {
                                httpResponse = parseInt(response_data);
                            }
                            else if (returnType == $t().RpcDoubleResponseType || returnType == $t().RpcDecimalResponseType || returnType == $t().RpcSingleResponseType) {
                                httpResponse = parseFloat(response_data);
                            }
                            else if (returnType == $t().RpcByteResponseType || returnType == $t().RpcSByteResponseType) {
                                httpResponse = parseInt(response_data);
                            }
                            else if (returnType == $t().RpcCharResponseType) {
                                httpResponse = System.Char.Parse(response_data);
                            }
                            else if (returnType == $t().RpcDateTimeResponseType) {
                                var jsd = new Date(response_data);
                                httpResponse = new System.DateTime.ctor$2(jsd.getFullYear(), jsd.getMonth(), 
                                    jsd.getDay());
                            }
                            else if (returnType == $t().RpcNativeContentType) {
                                throw new System.Exception.ctor$1("Native response content types not supported");
                            }
                            else {
                                throw new System.Exception.ctor$1("Invalid response content type encountered: " + returnType);
                            }
                        }
                        if (success != null) {
                            success(httpResponse);
                        }
                    }
                    catch ($e) {
                        $e = System.Exception.Wrap($e);
                        if (failure != null) {
                            failure(new System.Exception.ctor$1("500 - " + $e.get_Message()));
                        }
                    }
                }
                else {
                    if (failure != null) {
                        var status = String.Format("{0}", $d.array(System.Object, [xhr.status])), status_text = xhr.statusText;
                        if (status == "0" && String.IsNullOrEmpty(status_text)) {
                            status_text = "Failed To Connect";
                        }
                        failure(new System.Exception.ctor$1(status + " - " + status_text));
                    }
                }
            }
            return true;
        }, this);
        xhr.send(data);
    };
    $t.CallMethodAsync = function HttpClientManager_CallMethodAsync(T, url, service, method, parameters, exception, headers) {
        var wnd = window;
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(T).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else if (System.Errors().DefaultException != null) {
                    System.Errors().DefaultException(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        wnd.console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    wnd.console.error(error.get_Message());
                }
            }
        }, this);
        $t.CallMethod(T, url, service, method, parameters, success, failure, headers);
        return tasker.get_Task();
    };
    $t.SendRequest = function HttpClientManager_SendRequest(url, method, data, type, success, failure, headers) {
        if (String.IsNullOrEmpty(url)) {
            throw new System.Exception.ctor$1("Null gateway url specified.");
        }
        if (String.IsNullOrEmpty(method)) {
            throw new System.Exception.ctor$1("Null http method name specified.");
        }
        if (String.IsNullOrEmpty(type)) {
            type = "text/plain";
        }
        var xhr = null;
        if (System.Gateway.HttpClientManager().RequestFactory != null) {
            xhr = System.Gateway.HttpClientManager().RequestFactory();
            if (xhr == null) {
                throw new System.Exception.ctor$1("Null XMLHttpRequest returned from http request factory.");
            }
        }
        else {
            xhr = new XMLHttpRequest();
        }
        xhr.open(method, url, true);
        xhr.responseType = "text";
        if (!String.IsNullOrEmpty(type)) {
            xhr.setRequestHeader("Content-Type", type);
        }
        if (!String.IsNullOrEmpty(System.Gateway.RemoteService().get_DefaultTicket())) {
            xhr.setRequestHeader("Authentication-Slide", "true");
            xhr.setRequestHeader("Authentication-Ticket", System.Gateway.RemoteService().get_DefaultTicket());
        }
        if (System.Gateway.RemoteService().get_DefaultHeaders() != null) {
            var $iter = System.Gateway.RemoteService().get_DefaultHeaders();
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var default_header = $enumerator.System$Collections$IEnumerator$get_Current();
                xhr.setRequestHeader(default_header.get_Key(), default_header.get_Value());
            }
        }
        if (headers != null) {
            var $iter1 = headers;
            var $enumerator1 = $iter1.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator1.System$Collections$IEnumerator$MoveNext()) {
                var header = $enumerator1.System$Collections$IEnumerator$get_Current();
                xhr.setRequestHeader(header.get_Key(), header.get_Value());
            }
        }
        xhr.onreadystatechange = $d.delegate(function(evt) {
            var xhr_target = evt.target;
            if (xhr.readyState == 4) {
                if (xhr.status == 200) {
                    try {
                        var response_code = xhr.status;
                        var response_status = xhr.statusText;
                        var response_content = String.Empty;
                        if (!String.IsNullOrEmpty(xhr.responseText)) {
                            response_content = xhr.responseText;
                        }
                        var ticket = xhr.getResponseHeader("Authentication-Ticket");
                        if (!String.IsNullOrEmpty(ticket)) {
                            System.Gateway.RemoteService.SetDefaultTicket(ticket);
                        }
                        var response_type = "Refused";
                        var response_encoding = "Refused";
                        var response_headers = new (System.Collections.Generic.Dictionary$2(String, String, 
                            21144).ctor)();
                        var all_headers = xhr.getAllResponseHeaders();
                        if (!String.IsNullOrEmpty(all_headers)) {
                            var header_pairs = all_headers.Split($d.array(System.Char, [13 /*'\r'*/, 
                                10 /*'\n'*/]));
                            if (header_pairs != null) {
                                for (var $i = 0, $length = header_pairs.length; $i < $length; $i++) {
                                    var header_pair = header_pairs[$i];
                                    var index_marker = header_pair.indexOf(": ");
                                    if (index_marker >= 0) {
                                        var header_key = header_pair.Substring$1(0, index_marker);
                                        var header_val = header_pair.Substring(index_marker + 2);
                                        if (header_key.Equals$2("Content-Type", 5)) {
                                            response_type = header_val;
                                        }
                                        else if (header_key.Equals$2("Content-Encoding", 5)) {
                                            response_encoding = header_val;
                                        }
                                        response_headers.Add$1(header_key, header_val);
                                    }
                                }
                            }
                        }
                        if (success != null) {
                            success(new System.AjaxResponse.ctor(response_type, response_code, response_status, 
                                response_content, response_encoding, response_headers));
                        }
                    }
                    catch ($e) {
                        $e = System.Exception.Wrap($e);
                        if (failure != null) {
                            failure(new System.Exception.ctor$1("500 - " + $e.get_Message()));
                        }
                    }
                }
                else {
                    if (failure != null) {
                        var status = String.Format("{0}", $d.array(System.Object, [xhr.status])), status_text = xhr.statusText;
                        if (status == "0" && String.IsNullOrEmpty(status_text)) {
                            status_text = "Failed To Connect";
                        }
                        failure(new System.Exception.ctor$1(status + " - " + status_text));
                    }
                }
            }
            return true;
        }, this);
        xhr.send(data);
    };
    $t.SendRequestAsync = function HttpClientManager_SendRequestAsync(url, method, data, type, exception, headers) {
        var wnd = window;
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(System.AjaxResponse, 44583).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else if (System.Errors().DefaultException != null) {
                    System.Errors().DefaultException(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        wnd.console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    wnd.console.error(error.get_Message());
                }
            }
        }, this);
        $t.SendRequest(url, method, data, type, success, failure, headers);
        return tasker.get_Task();
    };
});
$d.define(System.Gateway.RemoteRequest, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [0, [["ajaxrpc", 20, 6], ["method", 20, 6], ["parameters", 129, 6], ["id", 20, 6]], null, [["ctor", t.ctor, 6]]]; };
    $t.$ator = function() {
        this.ajaxrpc = null;
        this.method = null;
        this.parameters = null;
        this.id = null;
    };
    $t.ctor = function RemoteRequest() {
        $t.$baseType.ctor.call(this);
    };
});
System.LogLevel = $d.typeEnum("System.LogLevel", 45, $asm, 257, ["Info", "Error", "Debug"], [0, 1, 2]);
$d.define(System.BlobData, Blob, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, null, [["ctor", t.ctor, 6, [["blobParts", 23, 0], ["options", Object, 1, 4096, null]]]]]; };
    $t.ctor = function BlobData(blobParts, options) {
        $t.$baseType.call(this, blobParts, options);
    };
});
$d.define(System.ApplicationAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6]], null, null, [(function() { var $obj = new System.AttributeUsageAttribute.ctor(4);$obj.set_Inherited(true);$obj.set_AllowMultiple(false);return $obj; }).call(this)]]; };
    $t.ctor = function ApplicationAttribute() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(System.ReadyAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6]], null, null, [(function() { var $obj = new System.AttributeUsageAttribute.ctor(64);$obj.set_Inherited(true);$obj.set_AllowMultiple(false);return $obj; }).call(this)]]; };
    $t.ctor = function ReadyAttribute() {
        $t.$baseType.ctor.call(this);
    };
});
System.Func$10 = $d.type("System.Func`10", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "TResult"]);
System.Func$11 = $d.type("System.Func`11", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "TResult"]);
System.Func$12 = $d.type("System.Func`12", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "TResult"]);
System.Func$13 = $d.type("System.Func`13", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "TResult"]);
System.Func$14 = $d.type("System.Func`14", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "TResult"]);
System.Func$15 = $d.type("System.Func`15", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14", "TResult"]);
System.Func$16 = $d.type("System.Func`16", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13], ["arg15", T15, 14]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14", "T15", "TResult"]);
System.Func$17 = $d.type("System.Func`17", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, TResult, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13], ["arg15", T15, 14], ["arg16", T16, 15]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14", "T15", "T16", 
    "TResult"]);
System.Action$9 = $d.type("System.Action`9", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9"]);
System.Action$10 = $d.type("System.Action`10", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10"]);
System.Action$11 = $d.type("System.Action`11", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11"]);
System.Action$12 = $d.type("System.Action`12", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12"]);
System.Action$13 = $d.type("System.Action`13", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13"]);
System.Action$14 = $d.type("System.Action`14", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14"]);
System.Action$15 = $d.type("System.Action`15", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13], ["arg15", T15, 14]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14", "T15"]);
System.Action$16 = $d.type("System.Action`16", 321, $asm, function($t, $p, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["arg1", T1, 0], ["arg2", T2, 1], ["arg3", T3, 2], ["arg4", T4, 3], ["arg5", T5, 4], ["arg6", T6, 5], ["arg7", T7, 6], ["arg8", T8, 7], ["arg9", T9, 8], ["arg10", T10, 9], ["arg11", T11, 10], ["arg12", T12, 11], ["arg13", T13, 12], ["arg14", T14, 13], ["arg15", T15, 14], ["arg16", T16, 15]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
}, ["T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "T10", "T11", "T12", "T13", "T14", "T15", "T16"]);
$d.define(System.DataStorage, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["DatabaseName", 20, 1], ["DatabaseVersion", 48, 1], ["DefaultStoreOptions", 1, 1], ["DefaultStoreName", 20, 86, "Data Storage"]], [["get_DatabaseName", p.get_DatabaseName, 6, 20], ["set_DatabaseName", p.set_DatabaseName, 4, 38, [["value", 20, 0]]], ["get_DatabaseVersion", p.get_DatabaseVersion, 6, 48], ["set_DatabaseVersion", p.set_DatabaseVersion, 4, 38, [["value", 48, 0]]], ["get_DefaultStoreOptions", p.get_DefaultStoreOptions, 6, 1], ["set_DefaultStoreOptions", p.set_DefaultStoreOptions, 6, 38, [["value", 1, 0]]], ["OpenDatabase", p.OpenDatabase, 6, 38, [["success", System.Action, 0, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 1, 4096, null]]], ["OnCreateObjectStores", p.OnCreateObjectStores, 6, 38, [["db", IDBDatabase, 0], ["scheme", IDBVersionChangeEvent, 1]]], ["GetObjectStore", p.GetObjectStore, 6, IDBObjectStore, [["name", 20, 0, 4096, "Data Storage"], ["mode", 20, 1, 4096, "readwrite"], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null]]], ["GetTransaction", p.GetTransaction, 6, IDBTransaction, [["name", 20, 0], ["mode", 20, 1, 4096, "readwrite"]]], ["GetTransaction", p.GetTransaction$1, 6, IDBTransaction, [["names", 148, 0], ["mode", 20, 1, 4096, "readwrite"]]], ["GetDatabase", p.GetDatabase, 6, IDBDatabase]], [["ctor", t.ctor, 6, [["name", 20, 0], ["version", 48, 1, 4096, 1]]]], [["DatabaseName", 20, 0, 1], ["DatabaseVersion", 48, 2, 3], ["DefaultStoreOptions", 1, 4, 5]]]; };
    $t.cctor = function() {
        $t.DefaultStoreName = "Data Storage";
    };
    $t.$ator = function() {
        this.Database = null;
        this.DatabaseName = null;
        this.DatabaseVersion = 0;
        this.DefaultStoreOptions = null;
    };
    $p.get_DatabaseName = function DataStorage_get_DatabaseName() { return this.DatabaseName; };
    $p.set_DatabaseName = function DataStorage_set_DatabaseName(value) { this.DatabaseName = value;return value; };
    $p.get_DatabaseVersion = function DataStorage_get_DatabaseVersion() { return this.DatabaseVersion; };
    $p.set_DatabaseVersion = function DataStorage_set_DatabaseVersion(value) { this.DatabaseVersion = value;return value; };
    $p.get_DefaultStoreOptions = function DataStorage_get_DefaultStoreOptions() { return this.DefaultStoreOptions; };
    $p.set_DefaultStoreOptions = function DataStorage_set_DefaultStoreOptions(value) { this.DefaultStoreOptions = value;return value; };
    $t.ctor = function DataStorage(name, version) {
        $t.$baseType.ctor.call(this);
        if (String.IsNullOrEmpty(name))
            throw new System.Exception.ctor$1("Database name required.");
        this.Database = null;
        this.set_DatabaseName(name);
        this.set_DatabaseVersion(version);
        this.set_DefaultStoreOptions(null);
    };
    $p.OpenDatabase = function DataStorage_OpenDatabase(success, failure) {
        if (this.Database == null) {
            var indexed_db = System.Root.getIndexedDB();
            if (indexed_db != null) {
                var open = indexed_db.open(this.get_DatabaseName(), this.get_DatabaseVersion());
                open.onupgradeneeded = $d.delegate(function(scheme) {
                    var db = scheme.target.result;
                    this.OnCreateObjectStores(db, scheme);
                    return null;
                }, this);
                open.onsuccess = $d.delegate(function(res) {
                    this.Database = res.target.result;
                    if (this.Database != null) {
                        if (success != null)
                            success();
                    }
                    return null;
                }, this);
                open.onerror = $d.delegate(function(err) {
                    if (failure != null) {
                        var error = err.target.error;
                        failure(new System.Exception.ctor$1(error.message));
                    }
                    return null;
                }, this);
                open.onblocked = $d.delegate(function(blk) {
                    if (failure != null) {
                        failure(new System.Exception.ctor$1("Database request blocked."));
                    }
                    return null;
                }, this);
            }
            else {
                if (failure != null) {
                    failure(new System.Exception.ctor$1("Databases not supported."));
                }
            }
        }
        else {
            if (failure != null) {
                failure(new System.Exception.ctor$1("Database already open."));
            }
        }
    };
    $p.OnCreateObjectStores = function DataStorage_OnCreateObjectStores(db, scheme) {
        db.createObjectStore(System.DataStorage().DefaultStoreName, this.get_DefaultStoreOptions());
    };
    $p.GetObjectStore = function DataStorage_GetObjectStore(name, mode, failure) {
        var transaction = this.GetTransaction(name, mode);
        transaction.onerror = $d.delegate(function(err) {
            if (failure != null) {
                var error = err.target.error;
                failure(new System.Exception.ctor$1(error.message));
            }
            return null;
        }, this);
        return transaction.objectStore(name);
    };
    $p.GetTransaction = function DataStorage_GetTransaction(name, mode) {
        return this.GetTransaction$1($d.array(String, [name]), mode);
    };
    $p.GetTransaction$1 = function DataStorage_GetTransaction(names, mode) {
        if (this.Database == null)
            throw new System.Exception.ctor$1("Database not open.");
        return this.Database.transaction(names, mode);
    };
    $p.GetDatabase = function DataStorage_GetDatabase() {
        return this.Database;
    };
});
$d.define(System.Null, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["Value", 1, 22]], [[".cctor", t.cctor, 17]]]; };
    $t.cctor = function() {
        $t.Value = null;
    };
});
System.Nothing = $d.type("System.Nothing", 62, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6]]]; };
    $t.ctor = function Nothing() {};
});
$d.define(System.Errors, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["DefaultException", System.Action$1(System.Exception, 1439), 22]], [[".cctor", t.cctor, 17]]]; };
    $t.cctor = function() {
        $t.DefaultException = null;
    };
});
$d.define(System.Ajax, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_ajaxLock", 1, 49], ["_ajax", System.IAjaxService, 17]], [["Get", t.Get, 22, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["GetAsync", t.GetAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2, 4096, null]]], ["Post", t.Post, 22, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["success", System.Action$1(System.AjaxResponse, 44583), 3, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]]], ["PostAsync", t.PostAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PostJson", t.PostJson, 22, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PostJsonAsync", t.PostJsonAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["Put", t.Put, 22, 38, [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["success", System.Action$1(System.AjaxResponse, 44583), 3, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 4, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5, 4096, null]]], ["PutAsync", t.PutAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["type", 20, 2], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PutJson", t.PutJson, 22, 38, [["url", 20, 0], ["data", 1, 1], ["success", System.Action$1(System.AjaxResponse, 44583), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 4, 4096, null]]], ["PutJsonAsync", t.PutJsonAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["data", 1, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["Delete", t.Delete, 22, 38, [["url", 20, 0], ["success", System.Action$1(System.AjaxResponse, 44583), 1, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 3, 4096, null]]], ["DeleteAsync", t.DeleteAsync, 22, System.Threading.Tasks.Task$1(System.AjaxResponse, 44583), [["url", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 2, 4096, null]]], (function(T) { return ["ParseJson", t.ParseJson, 22, T, [["json", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T")), ["JsonString", t.JsonString, 22, 20, [["obj", 1, 0]]], ["get_Service", t.get_Service, 17, System.IAjaxService], [".cctor", t.cctor, 17]], null, [["Service", System.IAjaxService, 14]]]; };
    $t.cctor = function() {
        $t._ajaxLock = new System.Object.ctor();
        $t._ajax = null;
    };
    $t.Get = function Ajax_Get(url, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$Get(url, success, failure, headers);
    };
    $t.GetAsync = function Ajax_GetAsync(url, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$GetAsync(url, exception, headers);
    };
    $t.Post = function Ajax_Post(url, data, type, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$Post(url, data, type, success, failure, headers);
    };
    $t.PostAsync = function Ajax_PostAsync(url, data, type, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$PostAsync(url, data, type, exception, 
            headers);
    };
    $t.PostJson = function Ajax_PostJson(url, data, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$PostJson(url, data, success, failure, headers);
    };
    $t.PostJsonAsync = function Ajax_PostJsonAsync(url, data, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$PostJsonAsync(url, data, exception, headers);
    };
    $t.Put = function Ajax_Put(url, data, type, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$Put(url, data, type, success, failure, headers);
    };
    $t.PutAsync = function Ajax_PutAsync(url, data, type, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$PutAsync(url, data, type, exception, headers);
    };
    $t.PutJson = function Ajax_PutJson(url, data, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$PutJson(url, data, success, failure, headers);
    };
    $t.PutJsonAsync = function Ajax_PutJsonAsync(url, data, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$PutJsonAsync(url, data, exception, headers);
    };
    $t.Delete = function Ajax_Delete(url, success, failure, headers) {
        System.Ajax().get_Service().System$IAjaxService$Delete(url, success, failure, headers);
    };
    $t.DeleteAsync = function Ajax_DeleteAsync(url, exception, headers) {
        return System.Ajax().get_Service().System$IAjaxService$DeleteAsync(url, exception, headers);
    };
    $t.ParseJson = function Ajax_ParseJson(T, json) {
        var result = $d.defaultOf(T);
        if (!String.IsNullOrEmpty(json)) {
            result = JSON.parse(json);
        }
        return result;
    };
    $t.JsonString = function Ajax_JsonString(obj) {
        return JSON.stringify(obj);
    };
    $t.get_Service = function Ajax_get_Service() {
        if ($t()._ajax == null) {
            if (System.Gateway.Runtime().get_Ioc().IsRegistered(System.IAjaxService)) {
                if ($t()._ajax == null) {
                    $t()._ajax = System.Gateway.Runtime().get_Ioc().GetInstance$2(System.IAjaxService);
                }
            }
            else {
                throw new System.Exception.ctor$1("Ajax service interface not registered. You must call System.App.Bootstrap() in your main app to initialize the ajax.");
            }
        }
        return $t()._ajax;
    };
});
$d.define(System.AjaxResponse, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["Type", 20, 1], ["Code", 45, 1], ["Status", 20, 1], ["Content", 20, 1], ["Encoding", 20, 1], ["Headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 1]], [["get_Type", p.get_Type, 6, 20], ["set_Type", p.set_Type, 4, 38, [["value", 20, 0]]], ["get_Code", p.get_Code, 6, 45], ["set_Code", p.set_Code, 4, 38, [["value", 45, 0]]], ["get_Status", p.get_Status, 6, 20], ["set_Status", p.set_Status, 4, 38, [["value", 20, 0]]], ["get_Content", p.get_Content, 6, 20], ["set_Content", p.set_Content, 4, 38, [["value", 20, 0]]], ["get_Encoding", p.get_Encoding, 6, 20], ["set_Encoding", p.set_Encoding, 4, 38, [["value", 20, 0]]], ["get_Headers", p.get_Headers, 6, System.Collections.Generic.Dictionary$2(String, String, 21144)], ["set_Headers", p.set_Headers, 4, 38, [["value", System.Collections.Generic.Dictionary$2(String, String, 21144), 0]]]], [["ctor", t.ctor, 6, [["type", 20, 0], ["code", 45, 1], ["status", 20, 2], ["content", 20, 3], ["encoding", 20, 4], ["headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 5]]]], [["Type", 20, 0, 1], ["Code", 45, 2, 3], ["Status", 20, 4, 5], ["Content", 20, 6, 7], ["Encoding", 20, 8, 9], ["Headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 10, 11]]]; };
    $t.$ator = function() {
        this.Type = null;
        this.Code = 0;
        this.Status = null;
        this.Content = null;
        this.Encoding = null;
        this.Headers = null;
    };
    $p.get_Type = function AjaxResponse_get_Type() { return this.Type; };
    $p.set_Type = function AjaxResponse_set_Type(value) { this.Type = value;return value; };
    $p.get_Code = function AjaxResponse_get_Code() { return this.Code; };
    $p.set_Code = function AjaxResponse_set_Code(value) { this.Code = value;return value; };
    $p.get_Status = function AjaxResponse_get_Status() { return this.Status; };
    $p.set_Status = function AjaxResponse_set_Status(value) { this.Status = value;return value; };
    $p.get_Content = function AjaxResponse_get_Content() { return this.Content; };
    $p.set_Content = function AjaxResponse_set_Content(value) { this.Content = value;return value; };
    $p.get_Encoding = function AjaxResponse_get_Encoding() { return this.Encoding; };
    $p.set_Encoding = function AjaxResponse_set_Encoding(value) { this.Encoding = value;return value; };
    $p.get_Headers = function AjaxResponse_get_Headers() { return this.Headers; };
    $p.set_Headers = function AjaxResponse_set_Headers(value) { this.Headers = value;return value; };
    $t.ctor = function AjaxResponse(type, code, status, content, encoding, headers) {
        $t.$baseType.ctor.call(this);
        this.set_Type(type);
        this.set_Code(code);
        this.set_Status(status);
        this.set_Content(content);
        this.set_Headers(headers);
        this.set_Encoding((!String.IsNullOrEmpty(encoding)) ? encoding : "none");
    };
});
$d.define(System.Trace, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["EnableDebug", 39, 17], ["OnLogMessage", System.Action$2(System.LogLevel, String, 5411), 17], ["_consoleLock", 1, 49], ["_console", System.IConsoleService, 17]], [["get_EnableDebug", t.get_EnableDebug, 22, 39], ["set_EnableDebug", t.set_EnableDebug, 22, 38, [["value", 39, 0]]], ["Debug", t.Debug, 22, 38, [["message", 20, 0]]], ["Debug", t.Debug$1, 22, 38, [["format", 20, 0], ["arg0", 1, 1]]], ["Debug", t.Debug$3, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2]]], ["Debug", t.Debug$4, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3]]], ["Debug", t.Debug$5, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3], ["arg3", 1, 4]]], ["Debug", t.Debug$2, 22, 38, [["format", 20, 0], ["args", 129, 1]]], ["Info", t.Info, 22, 38, [["message", 20, 0]]], ["Info", t.Info$1, 22, 38, [["format", 20, 0], ["arg0", 1, 1]]], ["Info", t.Info$3, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2]]], ["Info", t.Info$4, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3]]], ["Info", t.Info$5, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3], ["arg3", 1, 4]]], ["Info", t.Info$2, 22, 38, [["format", 20, 0], ["args", 129, 1]]], ["Error", t.Error, 22, 38, [["message", 20, 0]]], ["Error", t.Error$1, 22, 38, [["format", 20, 0], ["arg0", 1, 1]]], ["Error", t.Error$4, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2]]], ["Error", t.Error$5, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3]]], ["Error", t.Error$6, 22, 38, [["format", 20, 0], ["arg0", 1, 1], ["arg1", 1, 2], ["arg2", 1, 3], ["arg3", 1, 4]]], ["Error", t.Error$2, 22, 38, [["format", 20, 0], ["args", 129, 1]]], ["Error", t.Error$3, 22, 38, [["exception", 28, 0], ["stack", 39, 1, 4096, false], ["flatten", 39, 2, 4096, true]]], ["Flatten", t.Flatten, 22, 156, [["exception", 28, 0]]], ["get_OnLogMessage", t.get_OnLogMessage, 22, System.Action$2(System.LogLevel, String, 5411)], ["set_OnLogMessage", t.set_OnLogMessage, 22, 38, [["value", System.Action$2(System.LogLevel, String, 5411), 0]]], ["LogMessage", t.LogMessage, 17, 38, [["level", System.LogLevel, 0], ["message", 20, 1]]], ["get_Console", t.get_Console, 17, System.IConsoleService], [".cctor", t.cctor, 17]], null, [["EnableDebug", 39, 0, 1], ["OnLogMessage", System.Action$2(System.LogLevel, String, 5411), 22, 23], ["Console", System.IConsoleService, 25]]]; };
    $t.cctor = function() {
        $t._consoleLock = new System.Object.ctor();
        $t._console = null;
        $t.EnableDebug = false;
        $t.OnLogMessage = null;
    };
    $t.get_EnableDebug = function Trace_get_EnableDebug() { return $t().EnableDebug; };
    $t.set_EnableDebug = function Trace_set_EnableDebug(value) { $t().EnableDebug = value;return value; };
    $t.Debug = function Trace_Debug(message) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, message);
    };
    $t.Debug$1 = function Trace_Debug(format, arg0) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, String.Format(format, $d.array(System.Object, [arg0])));
    };
    $t.Debug$3 = function Trace_Debug(format, arg0, arg1) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, String.Format(format, $d.array(System.Object, [arg0, arg1])));
    };
    $t.Debug$4 = function Trace_Debug(format, arg0, arg1, arg2) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2])));
    };
    $t.Debug$5 = function Trace_Debug(format, arg0, arg1, arg2, arg3) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2, arg3])));
    };
    $t.Debug$2 = function Trace_Debug(format, args) {
        if (System.Trace().get_EnableDebug() == false)
            return;
        $t.LogMessage(2, String.Format(format, args));
    };
    $t.Info = function Trace_Info(message) {
        $t.LogMessage(0, message);
    };
    $t.Info$1 = function Trace_Info(format, arg0) {
        $t.LogMessage(0, String.Format(format, $d.array(System.Object, [arg0])));
    };
    $t.Info$3 = function Trace_Info(format, arg0, arg1) {
        $t.LogMessage(0, String.Format(format, $d.array(System.Object, [arg0, arg1])));
    };
    $t.Info$4 = function Trace_Info(format, arg0, arg1, arg2) {
        $t.LogMessage(0, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2])));
    };
    $t.Info$5 = function Trace_Info(format, arg0, arg1, arg2, arg3) {
        $t.LogMessage(0, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2, arg3])));
    };
    $t.Info$2 = function Trace_Info(format, args) {
        $t.LogMessage(0, String.Format(format, args));
    };
    $t.Error = function Trace_Error(message) {
        $t.LogMessage(1, message);
    };
    $t.Error$1 = function Trace_Error(format, arg0) {
        $t.LogMessage(1, String.Format(format, $d.array(System.Object, [arg0])));
    };
    $t.Error$4 = function Trace_Error(format, arg0, arg1) {
        $t.LogMessage(1, String.Format(format, $d.array(System.Object, [arg0, arg1])));
    };
    $t.Error$5 = function Trace_Error(format, arg0, arg1, arg2) {
        $t.LogMessage(1, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2])));
    };
    $t.Error$6 = function Trace_Error(format, arg0, arg1, arg2, arg3) {
        $t.LogMessage(1, String.Format(format, $d.array(System.Object, [arg0, arg1, arg2, arg3])));
    };
    $t.Error$2 = function Trace_Error(format, args) {
        $t.LogMessage(1, String.Format(format, args));
    };
    $t.Error$3 = function Trace_Error(exception, stack, flatten) {
        var message = stack ? (exception.get_Message() + " " + exception.get_StackTrace().trim()) : exception.get_Message();
        if (flatten) {
            var exceptions = $t.Flatten(exception);
            if (exceptions != null && exceptions.length > 0) {
                var sb = new System.Text.StringBuilder.ctor();
                for (var $i = 0, $length = exceptions.length; $i < $length; $i++) {
                    var ex = exceptions[$i];
                    var msg = null;
                    if (stack) {
                        msg = (ex.get_Message() + " " + ex.get_StackTrace().trim());
                    }
                    else {
                        msg = ex.get_Message();
                    }
                    if (!String.IsNullOrEmpty(msg)) {
                        sb.AppendLine$1(msg);
                    }
                }
                if (sb.get_Length() > 0) {
                    var messages = sb.toString();
                    if (!String.IsNullOrEmpty(messages)) {
                        message = messages;
                    }
                }
            }
        }
        $t.LogMessage(1, message);
    };
    $t.Flatten = function Trace_Flatten(exception) {
        var exceptions = null;
        if ($d.is(exception, System.AggregateException)) {
            var ae = $d.cast(exception, System.AggregateException);
            exceptions = ae.Flatten().get_InnerExceptions().ToArray();
        }
        else if (exception.get_InnerException() != null) {
            if (exception.get_InnerException().get_InnerException() != null) {
                if (exception.get_InnerException().get_InnerException().get_InnerException() != null) {
                    exceptions = $d.array(System.Exception, [exception, exception.get_InnerException(), 
                        exception.get_InnerException().get_InnerException(), exception.get_InnerException().get_InnerException().get_InnerException()]);
                }
                else {
                    exceptions = $d.array(System.Exception, [exception, exception.get_InnerException(), 
                        exception.get_InnerException().get_InnerException()]);
                }
            }
            else {
                exceptions = $d.array(System.Exception, [exception, exception.get_InnerException()]);
            }
        }
        return exceptions;
    };
    $t.get_OnLogMessage = function Trace_get_OnLogMessage() { return $t().OnLogMessage; };
    $t.set_OnLogMessage = function Trace_set_OnLogMessage(value) { $t().OnLogMessage = value;return value; };
    $t.LogMessage = function Trace_LogMessage(level, message) {
        System.Trace().get_Console().System$IConsoleService$WriteLine(String.Format("{0}: {1}", $d.array(System.Object, 
            [$d.boxEnum(System.LogLevel, level).toString(), message])));
        if (System.Trace().get_OnLogMessage() != null) {
            System.Trace().get_OnLogMessage()(level, message);
        }
    };
    $t.get_Console = function Trace_get_Console() {
        if ($t()._console == null) {
            if (System.Gateway.Runtime().get_Ioc().IsRegistered(System.IConsoleService)) {
                if ($t()._console == null) {
                    $t()._console = System.Gateway.Runtime().get_Ioc().GetInstance$2(System.IConsoleService);
                }
            }
            else {
                throw new System.Exception.ctor$1("Console service interface not registered. You must call System.App.Bootstrap() in your main app to initialize the console.");
            }
        }
        return $t()._console;
    };
});
System.IConsoleService = $d.type("System.IConsoleService", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161, null, [["WriteLine", null, 6, 38, [["value", 20, 0]]]]]; };
});
$d.define(System.MemberInfoExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [(function(T) { return ["GetCustomAttribute", t.GetCustomAttribute, 22, T, [["memberInfo", System.Reflection.MemberInfo, 0], ["inherit", 39, 1, 4096, false]], null, [T]]; }).call(this, $d.typeParam("T", System.Attribute)), (function(T) { return ["GetCustomAttributes", t.GetCustomAttributes, 22, System.Collections.Generic.IEnumerable$1(T), [["memberInfo", System.Reflection.MemberInfo, 0], ["inherit", 39, 1, 4096, false]], null, [T]]; }).call(this, $d.typeParam("T", System.Attribute))]]; };
    $t.GetCustomAttribute = function MemberInfoExtensions_GetCustomAttribute(T, memberInfo, inherit) {
        var attributes = System.MemberInfoExtensions.GetCustomAttributes(T, memberInfo, inherit);
        if (attributes == null)
            return null;
        return System.Linq.Enumerable.FirstOrDefault(T, attributes);
    };
    $t.GetCustomAttributes = function MemberInfoExtensions_GetCustomAttributes(T, memberInfo, inherit) {
        if (memberInfo == null) {
            throw new System.ArgumentNullException.ctor$1("memberInfo");
        }
        var customAttributes = memberInfo.GetCustomAttributes$1($d.typeOf(T), inherit);
        return customAttributes != null ? System.Linq.Enumerable.OfType(T, customAttributes) : null;
    };
});
$d.define(System.EventArgs$1, System.EventArgs, function($t, $p, T) {
    $t.$typeInfo = function(t, p) { return [1, [["_data", T, 33]], [["get_Data", p.get_Data, 6, T]], [["ctor", t.ctor, 6, [["data", T, 0]]]], [["Data", T, 0]]]; };
    $t.$ator = function() {
        this._data = $d.defaultOf(T);
    };
    $p.get_Data = function EventArgs$1_get_Data() {
        return this._data;
    };
    $t.ctor = function EventArgs$1(data) {
        $t.$baseType.ctor.call(this);
        this._data = data;
    };
}, ["T"]);
$d.define(System.EventArgs$2, System.EventArgs$1, function($t, $p, T, U) {
    $t.$typeInfo = function(t, p) { return [1, [["_aux", U, 33]], [["get_Aux", p.get_Aux, 6, U]], [["ctor", t.ctor, 6, [["data", T, 0], ["aux", U, 1]]]], [["Aux", U, 0]]]; };
    $t.$ator = function() {
        this._aux = $d.defaultOf(U);
    };
    $p.get_Aux = function EventArgs$2_get_Aux() {
        return this._aux;
    };
    $t.ctor = function EventArgs$2(data, aux) {
        $t.$baseType.ctor.call(this, data);
        this._aux = aux;
    };
}, ["T", "U"], [0]);
$d.define(System.Gateway.AjaxRuntime, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["Started", 39, 17]], [["get_Started", t.get_Started, 22, 39], ["set_Started", t.set_Started, 17, 38, [["value", 39, 0]]], [".cctor", t.cctor, 17]], null, [["Started", 39, 0, 1]]]; };
    $t.cctor = function() {
        $t.Started = false;
        if ($t.get_Started())
            return;
        $t.set_Started(true);
        try {
            System.App.Bootstrap();
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            System.Console.WriteLine$10(String.Format("===> Bootstrap Error: {0}", $d.array(System.Object, 
                [$e.get_Message()])));
        }
    };
    $t.get_Started = function AjaxRuntime_get_Started() { return $t().Started; };
    $t.set_Started = function AjaxRuntime_set_Started(value) { $t().Started = value;return value; };
});
$d.define(System.Gateway.Runtime, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["LOCAL_SERVICE", 20, 86, "{{LocalService}}"], ["RpcNativeContentType", 20, 86, "application/x-ajax-native"], ["RpcNullType", 20, 86, "{null}"], ["RpcVoidType", 20, 86, "{void}"], ["RpcXmlResponseType", 20, 86, "application/x-ajax-xml"], ["RpcJsonResponseType", 20, 86, "application/x-ajax-json"], ["RpcNullResponseType", 20, 86, "application/x-ajax-null"], ["RpcVoidResponseType", 20, 86, "application/x-ajax-void"], ["RpcErrorResponseType", 20, 86, "application/x-ajax-error"], ["RpcStringResponseType", 20, 86, "application/x-ajax-string"], ["RpcBooleanResponseType", 20, 86, "application/x-ajax-boolean"], ["RpcDecimalResponseType", 20, 86, "application/x-ajax-decimal"], ["RpcDoubleResponseType", 20, 86, "application/x-ajax-double"], ["RpcSingleResponseType", 20, 86, "application/x-ajax-single"], ["RpcInt16ResponseType", 20, 86, "application/x-ajax-int16"], ["RpcInt32ResponseType", 20, 86, "application/x-ajax-int32"], ["RpcInt64ResponseType", 20, 86, "application/x-ajax-int64"], ["RpcIntPtrResponseType", 20, 86, "application/x-ajax-intptr"], ["RpcUInt16ResponseType", 20, 86, "application/x-ajax-uint16"], ["RpcUInt32ResponseType", 20, 86, "application/x-ajax-uint32"], ["RpcUInt64ResponseType", 20, 86, "application/x-ajax-uint64"], ["RpcUIntPtrResponseType", 20, 86, "application/x-ajax-uintptr"], ["RpcBase64ResponseType", 20, 86, "application/x-ajax-base64"], ["RpcCharResponseType", 20, 86, "application/x-ajax-char"], ["RpcByteResponseType", 20, 86, "application/x-ajax-byte"], ["RpcSByteResponseType", 20, 86, "application/x-ajax-sbyte"], ["RpcDateTimeResponseType", 20, 86, "application/x-ajax-datetime"], ["RpcInteropResponseType", 20, 86, "application/x-ajax-interop"], ["RpcDataSetResponseType", 20, 86, "application/x-ajax-dataset"], ["RpcDataTableResponseType", 20, 86, "application/x-ajax-datatable"], ["RpcDefaultResponseType", 20, 86, "application/x-ajax-default"], ["RpcBinaryResponseType", 20, 86, "application/octet-stream"], ["_iocLock", 1, 49], ["_ioc", System.Gateway.Ioc.MicroIoc, 17]], [["get_Ioc", t.get_Ioc, 22, System.Gateway.Ioc.MicroIoc], [".cctor", t.cctor, 17]], null, [["Ioc", System.Gateway.Ioc.MicroIoc, 0]]]; };
    $t.cctor = function() {
        $t.LOCAL_SERVICE = "{{LocalService}}";
        $t.RpcNativeContentType = "application/x-ajax-native";
        $t.RpcNullType = "{null}";
        $t.RpcVoidType = "{void}";
        $t.RpcXmlResponseType = "application/x-ajax-xml";
        $t.RpcJsonResponseType = "application/x-ajax-json";
        $t.RpcNullResponseType = "application/x-ajax-null";
        $t.RpcVoidResponseType = "application/x-ajax-void";
        $t.RpcErrorResponseType = "application/x-ajax-error";
        $t.RpcStringResponseType = "application/x-ajax-string";
        $t.RpcBooleanResponseType = "application/x-ajax-boolean";
        $t.RpcDecimalResponseType = "application/x-ajax-decimal";
        $t.RpcDoubleResponseType = "application/x-ajax-double";
        $t.RpcSingleResponseType = "application/x-ajax-single";
        $t.RpcInt16ResponseType = "application/x-ajax-int16";
        $t.RpcInt32ResponseType = "application/x-ajax-int32";
        $t.RpcInt64ResponseType = "application/x-ajax-int64";
        $t.RpcIntPtrResponseType = "application/x-ajax-intptr";
        $t.RpcUInt16ResponseType = "application/x-ajax-uint16";
        $t.RpcUInt32ResponseType = "application/x-ajax-uint32";
        $t.RpcUInt64ResponseType = "application/x-ajax-uint64";
        $t.RpcUIntPtrResponseType = "application/x-ajax-uintptr";
        $t.RpcBase64ResponseType = "application/x-ajax-base64";
        $t.RpcCharResponseType = "application/x-ajax-char";
        $t.RpcByteResponseType = "application/x-ajax-byte";
        $t.RpcSByteResponseType = "application/x-ajax-sbyte";
        $t.RpcDateTimeResponseType = "application/x-ajax-datetime";
        $t.RpcInteropResponseType = "application/x-ajax-interop";
        $t.RpcDataSetResponseType = "application/x-ajax-dataset";
        $t.RpcDataTableResponseType = "application/x-ajax-datatable";
        $t.RpcDefaultResponseType = "application/x-ajax-default";
        $t.RpcBinaryResponseType = "application/octet-stream";
        $t._iocLock = new System.Object.ctor();
        $t._ioc = null;
    };
    $t.get_Ioc = function Runtime_get_Ioc() {
        if ($t()._ioc == null) {
            if ($t()._ioc == null) {
                $t()._ioc = new System.Gateway.Ioc.MicroIoc.ctor();
            }
        }
        return $t()._ioc;
    };
});
$d.define(System.Gateway.TextContent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["Content", 20, 1], ["ScriptMimeType", 20, 86, "text/javascript"], ["TextMimeType", 20, 86, "text/plain"], ["HtmlMimeType", 20, 86, "text/html"], ["CssMimeType", 20, 86, "text/css"], ["XmlMimeType", 20, 86, "text/xml"], ["JsonMimeType", 20, 86, "application/json"], ["RelStyleSheet", 20, 86, "stylesheet"], ["RelImport", 20, 86, "import"]], [["get_Content", p.get_Content, 6, 20], ["set_Content", p.set_Content, 6, 38, [["value", 20, 0]]]], [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["content", 20, 0]]]], [["Content", 20, 0, 1]]]; };
    $t.cctor = function() {
        $t.ScriptMimeType = "text/javascript";
        $t.TextMimeType = "text/plain";
        $t.HtmlMimeType = "text/html";
        $t.CssMimeType = "text/css";
        $t.XmlMimeType = "text/xml";
        $t.JsonMimeType = "application/json";
        $t.RelStyleSheet = "stylesheet";
        $t.RelImport = "import";
    };
    $t.$ator = function() {
        this.Content = null;
    };
    $p.get_Content = function TextContent_get_Content() { return this.Content; };
    $p.set_Content = function TextContent_set_Content(value) { this.Content = value;return value; };
    $t.ctor = function TextContent() {
        $t.$baseType.ctor.call(this);
        this.set_Content(String.Empty);
    };
    $t.ctor$1 = function TextContent(content) {
        $t.$baseType.ctor.call(this);
        this.set_Content(content);
    };
});
$d.define(System.Gateway.RemoteService, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["AuthenticationHeader", 20, 86, "Authentication-Ticket"], ["DefaultTicket", 20, 17], ["DefaultGateway", 20, 22], ["DefaultTimeout", 45, 22], ["_headerLock", 1, 49], ["_defaultHeaders", System.Collections.Generic.Dictionary$2(String, String, 21144), 17], ["Url", 20, 1], ["Service", 20, 1], ["Proxy", System.Gateway.IRemoteService, 1], ["Headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 1], ["Exceptions", System.Action$1(System.Exception, 1439), 1]], [["AuthenticateUser", t.AuthenticateUser, 22, 38, [["username", 20, 0], ["password", 20, 1], ["auxiliary", 20, 2], ["gateway", 20, 3, 4096, null], ["success", System.Action$1(Boolean, 51240), 4, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 5, 4096, null]]], ["AuthenticateUserAsync", t.AuthenticateUserAsync, 22, System.Threading.Tasks.Task$1(Boolean, 51240), [["username", 20, 0], ["password", 20, 1], ["auxiliary", 20, 2], ["gateway", 20, 3, 4096, null], ["error", System.Action$1(System.Exception, 1439), 4, 4096, null]]], ["ClearCredentials", t.ClearCredentials, 22], ["SetDefaultTicket", t.SetDefaultTicket, 22, 38, [["ticket", 20, 0]]], ["get_DefaultTicket", t.get_DefaultTicket, 22, 20], ["set_DefaultTicket", t.set_DefaultTicket, 20, 38, [["value", 20, 0]]], ["get_DefaultHeaders", t.get_DefaultHeaders, 22, System.Collections.Generic.Dictionary$2(String, String, 21144)], (function(T) { return ["Create", t.Create, 22, T, [["gatewayurl", 20, 0, 4096, null], ["defaultExceptions", System.Action$1(System.Exception, 1439), 1, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T, R) { return ["Create", t.Create$1, 22, T, [["gatewayurl", 20, 0, 4096, null], ["defaultExceptions", System.Action$1(System.Exception, 1439), 1, 4096, null]], null, [T, R]]; }).call(this, $d.typeParam("T"), $d.typeParam("R", System.Gateway.RemoteService)), ["get_Url", p.get_Url, 6, 20], ["set_Url", p.set_Url, 4, 38, [["value", 20, 0]]], ["get_Service", p.get_Service, 6, 20], ["set_Service", p.set_Service, 4, 38, [["value", 20, 0]]], ["get_Proxy", p.get_Proxy, 6, System.Gateway.IRemoteService], ["set_Proxy", p.set_Proxy, 4, 38, [["value", System.Gateway.IRemoteService, 0]]], ["get_Headers", p.get_Headers, 6, System.Collections.Generic.Dictionary$2(String, String, 21144)], ["set_Headers", p.set_Headers, 4, 38, [["value", System.Collections.Generic.Dictionary$2(String, String, 21144), 0]]], ["get_Exceptions", p.get_Exceptions, 6, System.Action$1(System.Exception, 1439)], ["set_Exceptions", p.set_Exceptions, 4, 38, [["value", System.Action$1(System.Exception, 1439), 0]]], (function(T) { return ["CallMethod", p.CallMethod, 6, 38, [["method", 20, 0], ["parameters", 129, 1, 4096, null], ["success", System.Action$1(T), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["CallMethodAsync", p.CallMethodAsync, 6, System.Threading.Tasks.Task$1(T), [["method", 20, 0], ["parameters", 129, 1, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6, [["gatewayUrl", 20, 0, 4096, null], ["defaultExceptions", System.Action$1(System.Exception, 1439), 1, 4096, null]]]], [["DefaultTicket", 20, 4, 5], ["DefaultHeaders", System.Collections.Generic.Dictionary$2(String, String, 21144), 6], ["Url", 20, 9, 10], ["Service", 20, 11, 12], ["Proxy", System.Gateway.IRemoteService, 13, 14], ["Headers", System.Collections.Generic.Dictionary$2(String, String, 21144), 15, 16], ["Exceptions", System.Action$1(System.Exception, 1439), 17, 18]]]; };
    $t.cctor = function() {
        $t.AuthenticationHeader = "Authentication-Ticket";
        $t.DefaultGateway = "gateway";
        $t.DefaultTimeout = 0;
        $t._headerLock = new System.Object.ctor();
        $t._defaultHeaders = null;
        $t.DefaultTicket = null;
    };
    $t.$ator = function() {
        this.Url = null;
        this.Service = null;
        this.Proxy = null;
        this.Headers = null;
        this.Exceptions = null;
    };
    $t.AuthenticateUser = function RemoteService_AuthenticateUser(username, password, auxiliary, gateway, success, failure) {
        $t.ClearCredentials();
        var login = new System.Gateway.RemoteService.ctor(gateway, null);
        login.CallMethod(Boolean, "system.gateway.authenticateuser", $d.array(System.Object, [username, 
            password, auxiliary]), success, failure);
    };
    $t.AuthenticateUserAsync = function RemoteService_AuthenticateUserAsync(username, password, auxiliary, gateway, error) {
        $t.ClearCredentials();
        var login = new System.Gateway.RemoteService.ctor(gateway, null);
        return login.CallMethodAsync(Boolean, "system.gateway.authenticateuser", $d.array(System.Object, 
            [username, password, auxiliary]), error);
    };
    $t.ClearCredentials = function RemoteService_ClearCredentials() {
        System.Gateway.RemoteService().set_DefaultTicket(String.Empty);
    };
    $t.SetDefaultTicket = function RemoteService_SetDefaultTicket(ticket) {
        if (!String.IsNullOrEmpty(ticket)) {
            System.Gateway.RemoteService().set_DefaultTicket(ticket);
        }
    };
    $t.get_DefaultTicket = function RemoteService_get_DefaultTicket() { return $t().DefaultTicket; };
    $t.set_DefaultTicket = function RemoteService_set_DefaultTicket(value) { $t().DefaultTicket = value;return value; };
    $t.get_DefaultHeaders = function RemoteService_get_DefaultHeaders() {
        if ($t()._defaultHeaders == null) {
            if ($t()._defaultHeaders == null) {
                $t()._defaultHeaders = new (System.Collections.Generic.Dictionary$2(String, String, 21144).ctor)();
            }
        }
        return $t()._defaultHeaders;
    };
    $t.Create = function RemoteService_Create(T, gatewayurl, defaultExceptions) {
        return $t.Create$1(T, System.Gateway.RemoteService, gatewayurl, defaultExceptions);
    };
    $t.Create$1 = function RemoteService_Create(T, R, gatewayurl, defaultExceptions) {
        var type = $d.typeOf(T);
        var service = System.Activator.CreateInstance$2($d.typeOf(R), $d.array(System.Object, [gatewayurl, 
            defaultExceptions]));
        var methods = type.GetMethods();
        if (methods != null) {
            var dynamic_service = service;
            for (var $i = 0, $length = methods.length; $i < $length; $i++)
                (function() {
                    var method = methods[$i];
                    var attributes = method.GetCustomAttributes$1($d.typeOf(System.Gateway.RemoteMethodAttribute), 
                        false);
                    if (attributes != null && attributes.length > 0) {
                        var att = attributes[0];
                        if (att != null && !String.IsNullOrEmpty(att.get_Name())) {
                            var functionParams = 0;
                            var functionBlob = false;
                            var functionType = $d.typeOf(System.Object);
                            var functionAsync = $d.typeOf(System.Threading.Tasks.Task).IsAssignableFrom(method.get_ReturnType());
                            var functionName = String.Format("{0}${1}", $d.array(System.Object, [type.get_FullName().Replace$1(".", 
                                "$"), method.get_Name()]));
                            var functionAttrib = att.get_Name();
                            var paramItems = method.GetParameters();
                            if (paramItems != null)
                                functionParams = paramItems.get_Count();
                            if (functionParams >= 1) {
                                var error = paramItems[functionParams - 1];
                                if (!$d.typeOf(System.Delegate).IsAssignableFrom(error.get_ParameterType())) {
                                    throw new System.Exception.ctor$1("Invalid remoting IService error argument delegate for method: " + functionName);
                                }
                            }
                            else {
                                throw new System.Exception.ctor$1("Invalid remoting IService argument list encounter for method: " + functionName);
                            }
                            if (!functionAsync) {
                                if (functionParams >= 2) {
                                    var success = paramItems[functionParams - 2];
                                    if (!$d.typeOf(System.Delegate).IsAssignableFrom(success.get_ParameterType())) {
                                        throw new System.Exception.ctor$1("Invalid remoting IService success argument delegate for method: " + functionName);
                                    }
                                    if (success.get_ParameterType().get_GenericTypeArguments() != null && success.get_ParameterType().get_GenericTypeArguments().length == 1) {
                                        functionType = success.get_ParameterType().get_GenericTypeArguments()[0];
                                        functionBlob = System.TypeHelperExtension.IsBlobType(functionType);
                                    }
                                }
                                else {
                                    throw new System.Exception.ctor$1("Invalid remoting IService argument list encounter for method: " + functionName);
                                }
                            }
                            var functionDelegate = $d.delegate(function() {
                                var result = null;
                                var args = null;
                                var len = arguments.length;
                                if (functionAsync) {
                                    if (len >= 1) {
                                        var count = len - 1;
                                        var error = arguments[len - 1];
                                        if (count > 0) {
                                            args = $d.array(System.Object, count);
                                            for (var xx = 0; xx < count; xx++) {
                                                args[xx] = arguments[xx];
                                            }
                                        }
                                        if (functionBlob) {
                                            result = service.CallMethodAsync(System.BlobData, functionAttrib, 
                                                args, error);
                                        }
                                        else {
                                            result = service.CallMethodAsync(System.Object, functionAttrib, 
                                                args, error);
                                        }
                                    }
                                    else {
                                        throw new System.Exception.ctor$1("Invalid remoting IService argument list encounter for method: " + functionName);
                                    }
                                }
                                else {
                                    if (len >= 2) {
                                        var count = len - 2;
                                        var error = arguments[len - 1];
                                        var success = arguments[len - 2];
                                        if (count > 0) {
                                            args = $d.array(System.Object, count);
                                            for (var xx = 0; xx < count; xx++) {
                                                args[xx] = arguments[xx];
                                            }
                                        }
                                        if (functionBlob) {
                                            service.CallMethod(System.BlobData, functionAttrib, args, 
                                                success, error);
                                        }
                                        else {
                                            service.CallMethod(System.Object, functionAttrib, args, success, 
                                                error);
                                        }
                                    }
                                    else {
                                        throw new System.Exception.ctor$1("Invalid remoting IService argument list encounter for method: " + functionName);
                                    }
                                }
                                return result;
                            }, this);
                            if (functionDelegate != null) {
                                dynamic_service[functionName] = functionDelegate;
                            }
                        }
                    }
                }).call(this);
        }
        return service;
    };
    $p.get_Url = function RemoteService_get_Url() { return this.Url; };
    $p.set_Url = function RemoteService_set_Url(value) { this.Url = value;return value; };
    $p.get_Service = function RemoteService_get_Service() { return this.Service; };
    $p.set_Service = function RemoteService_set_Service(value) { this.Service = value;return value; };
    $p.get_Proxy = function RemoteService_get_Proxy() { return this.Proxy; };
    $p.set_Proxy = function RemoteService_set_Proxy(value) { this.Proxy = value;return value; };
    $p.get_Headers = function RemoteService_get_Headers() { return this.Headers; };
    $p.set_Headers = function RemoteService_set_Headers(value) { this.Headers = value;return value; };
    $p.get_Exceptions = function RemoteService_get_Exceptions() { return this.Exceptions; };
    $p.set_Exceptions = function RemoteService_set_Exceptions(value) { this.Exceptions = value;return value; };
    $t.ctor = function RemoteService(gatewayUrl, defaultExceptions) {
        $t.$baseType.ctor.call(this);
        this.set_Url(gatewayUrl || System.Gateway.RemoteService().DefaultGateway);
        this.set_Headers(new (System.Collections.Generic.Dictionary$2(String, String, 21144).ctor)());
        this.set_Service($d.getTypeFromInst(this).get_FullName());
        this.set_Exceptions(defaultExceptions);
        this.set_Proxy(null);
        try {
            if (System.Gateway.Runtime().get_Ioc().IsRegistered(System.Gateway.IRemoteService)) {
                this.set_Proxy(System.Gateway.Runtime().get_Ioc().GetInstance$2(System.Gateway.IRemoteService));
            }
            else {
                throw new System.Exception.ctor$1("Remote service proxy interface not registered. You must call System.App.Bootstrap() in your main app to initialize remoting.");
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            throw new System.Exception.ctor$1($e.get_Message().TrimEnd($d.array(System.Char, [46 /*'.'*/])) + ". You must call System.App.Bootstrap() in your main app to initialize remoting.");
        }
    };
    $p.CallMethod = function RemoteService_CallMethod(T, method, parameters, success, failure) {
        if (this.get_Proxy() == null) {
            throw new System.Exception.ctor$1("Null remote service proxy interface. You must call System.App.Bootstrap() in your main app to initialize remoting.");
        }
        this.get_Proxy().System$Gateway$IRemoteService$CallMethod(T, this.get_Url(), this.get_Service(), 
            method, parameters, success, (failure || this.get_Exceptions()), this.get_Headers());
    };
    $p.CallMethodAsync = function RemoteService_CallMethodAsync(T, method, parameters, exception) {
        if (this.get_Proxy() == null) {
            throw new System.Exception.ctor$1("Null remote service proxy interface. You must call System.App.Bootstrap() in your main app to initialize remoting.");
        }
        return this.get_Proxy().System$Gateway$IRemoteService$CallMethodAsync(T, this.get_Url(), this.get_Service(), 
            method, parameters, (exception || this.get_Exceptions()), this.get_Headers());
    };
});
$d.define(System.Gateway.RemoteMethodAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, [["Name", 20, 1]], [["get_Name", p.get_Name, 6, 20], ["set_Name", p.set_Name, 6, 38, [["value", 20, 0]]]], [["ctor", t.ctor, 6]], [["Name", 20, 0, 1]], null, [(function() { var $obj = new System.AttributeUsageAttribute.ctor(64);$obj.set_Inherited(true);$obj.set_AllowMultiple(false);return $obj; }).call(this)]]; };
    $t.$ator = function() {
        this.Name = null;
    };
    $t.ctor = function RemoteMethodAttribute() {
        $t.$baseType.ctor.call(this);
        this.set_Name(String.Empty);
    };
    $p.get_Name = function RemoteMethodAttribute_get_Name() { return this.Name; };
    $p.set_Name = function RemoteMethodAttribute_set_Name(value) { this.Name = value;return value; };
});
System.Gateway.LocalBridge = $d.typeEnum("System.Gateway.LocalBridge", 45, $asm, 257, ["Enabled", "Disabled", "Unknown"], [0, 1, 2]);
System.Gateway.LocalPlatform = $d.typeEnum("System.Gateway.LocalPlatform", 45, $asm, 257, ["Browser", "Macintosh", "Windows", "Android", "Ios", "Unknown"], [0, 1, 2, 3, 4, 5]);
$d.define(System.Gateway.LocalGateway, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["local_bus", System.Gateway.Events.EventBus, 17], ["local_bus_lock", 1, 49], ["local_bridge", System.Gateway.LocalBridge, 17], ["local_platform", System.Gateway.LocalPlatform, 17]], [["get_Bus", t.get_Bus, 19, System.Gateway.Events.EventBus], ["get_Bridge", t.get_Bridge, 22, System.Gateway.LocalBridge], ["get_Platform", t.get_Platform, 22, System.Gateway.LocalPlatform], ["RegisterHandler", t.RegisterHandler, 22, 38, [["message", 20, 0], ["handler", System.Action, 1]]], (function(T) { return ["RegisterHandler", t.RegisterHandler$1, 22, 38, [["message", 20, 0], ["handler", System.Action$1(T), 1]], null, [T]]; }).call(this, $d.typeParam("T")), ["UnregisterHandler", t.UnregisterHandler, 22, 38, [["message", 20, 0]]], ["OnPostClientMessage", t.OnPostClientMessage, 19, 38, [["message", 20, 0], ["base64", 20, 1]]], [".cctor", t.cctor, 17]], null, [["Bus", System.Gateway.Events.EventBus, 0], ["Bridge", System.Gateway.LocalBridge, 1], ["Platform", System.Gateway.LocalPlatform, 2]]]; };
    $t.cctor = function() {
        $t.local_bus = null;
        $t.local_bus_lock = new System.Object.ctor();
        $t.local_bridge = 2;
        $t.local_platform = 5;
    };
    $t.get_Bus = function LocalGateway_get_Bus() {
        if ($t().local_bus == null) {
            if ($t().local_bus == null) {
                $t().local_bus = new System.Gateway.Events.EventBus.ctor();
            }
        }
        return $t().local_bus;
    };
    $t.get_Bridge = function LocalGateway_get_Bridge() {
        if (System.Gateway.LocalGateway().local_bridge == 2) {
            if (System.Gateway.Features.supportsBridge()) {
                System.Gateway.LocalGateway().local_bridge = 0;
            }
            else {
                System.Gateway.LocalGateway().local_bridge = 1;
            }
        }
        return System.Gateway.LocalGateway().local_bridge;
    };
    $t.get_Platform = function LocalGateway_get_Platform() {
        if (System.Gateway.LocalGateway().local_platform == 5) {
            if (System.Gateway.Features.supportsMacintosh()) {
                System.Gateway.LocalGateway().local_platform = 1;
            }
            else if (System.Gateway.Features.supportsWindows()) {
                System.Gateway.LocalGateway().local_platform = 2;
            }
            else if (System.Gateway.Features.supportsAndroid()) {
                System.Gateway.LocalGateway().local_platform = 3;
            }
            else if (System.Gateway.Features.supportsIos()) {
                System.Gateway.LocalGateway().local_platform = 4;
            }
            else {
                System.Gateway.LocalGateway().local_platform = 0;
            }
        }
        return System.Gateway.LocalGateway().local_platform;
    };
    $t.RegisterHandler = function LocalGateway_RegisterHandler(message, handler) {
        System.Gateway.LocalGateway().get_Bus().Register(message, handler);
    };
    $t.RegisterHandler$1 = function LocalGateway_RegisterHandler(T, message, handler) {
        System.Gateway.LocalGateway().get_Bus().Register$1(T, message, handler);
    };
    $t.UnregisterHandler = function LocalGateway_UnregisterHandler(message) {
        System.Gateway.LocalGateway().get_Bus().Unregister(message);
    };
    $t.OnPostClientMessage = function LocalGateway_OnPostClientMessage(message, base64) {
        var data = null;
        if (!String.IsNullOrEmpty(base64)) {
            var json = DuoCode.Dom.WindowExtensions.atob(window, base64);
            if (!String.IsNullOrEmpty(json)) {
                data = System.Ajax.ParseJson(System.Object, json);
            }
        }
        if (data != null) {
            System.Gateway.LocalGateway().get_Bus().Notify$1(message, data);
        }
        else {
            System.Gateway.LocalGateway().get_Bus().Notify(message);
        }
    };
});
$d.define(System.Gateway.LocalService, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [129, null, [["ExecuteMethod", p.ExecuteMethod, 4, 38, [["method", 20, 0], ["parameters", 129, 1, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]]], (function(T) { return ["ExecuteMethod", p.ExecuteMethod$1, 4, T, [["method", 20, 0], ["parameters", 129, 1, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["ProcessResponse", p.ProcessResponse, 1, System.Object, [["response", 20, 0]]]], [["ctor", t.ctor, 4]]]; };
    $t.ctor = function LocalService() {
        $t.$baseType.ctor.call(this);
    };
    $p.ExecuteMethod = function LocalService_ExecuteMethod(method, parameters, exception) {
        this.ExecuteMethod$1(System.Nothing, method, parameters, exception);
    };
    $p.ExecuteMethod$1 = function LocalService_ExecuteMethod(T, method, parameters, exception) {
        var result = $d.defaultOf(T);
        try {
            if (System.Gateway.LocalGateway().get_Bridge() != 0) {
                throw new System.Exception.ctor$1("Local service bridge not supported in current browser.");
            }
            var json = System.Gateway.HttpClientManager.FormatRequest(method, parameters);
            if (System.Gateway.LocalGateway().get_Platform() == 4) {
                var ios_response = window.prompt(System.Gateway.Runtime().LOCAL_SERVICE, json);
                result = this.ProcessResponse(ios_response);
            }
            else {
                var wnd = window;
                if (wnd.gateway == null) {
                    throw new System.Exception.ctor$1("Null local gateway window interface.");
                }
                var call_response = wnd.gateway.call(System.Gateway.Runtime().LOCAL_SERVICE, json);
                result = this.ProcessResponse(call_response);
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (exception != null) {
                exception($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
        return result;
    };
    $p.ProcessResponse = function LocalService_ProcessResponse(response) {
        var response_data = String.Empty;
        var returnType = String.Empty;
        if (!String.IsNullOrEmpty(response)) {
            var pipe_marker = response.indexOf("|");
            if (pipe_marker >= 0) {
                returnType = response.Substring$1(0, pipe_marker);
                response_data = response.Substring(pipe_marker + 1);
            }
        }
        var nil = null;
        var httpResponse = nil;
        if (returnType == System.Gateway.Runtime().RpcVoidResponseType || returnType == System.Gateway.Runtime().RpcNullResponseType) {
            httpResponse = nil;
        }
        else if (returnType == System.Gateway.Runtime().RpcStringResponseType || returnType == System.Gateway.Runtime().RpcBase64ResponseType) {
            httpResponse = response_data;
        }
        else if (returnType == System.Gateway.Runtime().RpcJsonResponseType || returnType == System.Gateway.Runtime().RpcInteropResponseType || returnType == System.Gateway.Runtime().RpcDataSetResponseType || returnType == System.Gateway.Runtime().RpcDataTableResponseType) {
            httpResponse = JSON.parse(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcXmlResponseType) {
            var parser = new DOMParser();
            var doc = parser.parseFromString(response_data, System.Gateway.TextContent().XmlMimeType);
            httpResponse = new System.Xml.XmlDocument.ctor(doc);
        }
        else if (returnType == System.Gateway.Runtime().RpcBooleanResponseType) {
            httpResponse = (response_data.toLowerCase() == "true");
        }
        else if (returnType == System.Gateway.Runtime().RpcInt16ResponseType || returnType == System.Gateway.Runtime().RpcInt32ResponseType || returnType == System.Gateway.Runtime().RpcInt64ResponseType || returnType == System.Gateway.Runtime().RpcIntPtrResponseType) {
            httpResponse = parseInt(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcUInt16ResponseType || returnType == System.Gateway.Runtime().RpcUInt32ResponseType || returnType == System.Gateway.Runtime().RpcUInt64ResponseType || returnType == System.Gateway.Runtime().RpcUIntPtrResponseType) {
            httpResponse = parseInt(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcDoubleResponseType || returnType == System.Gateway.Runtime().RpcDecimalResponseType || returnType == System.Gateway.Runtime().RpcSingleResponseType) {
            httpResponse = parseFloat(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcByteResponseType || returnType == System.Gateway.Runtime().RpcSByteResponseType) {
            httpResponse = parseInt(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcCharResponseType) {
            httpResponse = System.Char.Parse(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcDateTimeResponseType) {
            var jsd = new Date(response_data);
            httpResponse = new System.DateTime.ctor$2(jsd.getFullYear(), jsd.getMonth(), jsd.getDay());
        }
        else if (returnType == System.Gateway.Runtime().RpcErrorResponseType) {
            throw new System.Exception.ctor$1(response_data);
        }
        else if (returnType == System.Gateway.Runtime().RpcNativeContentType) {
            throw new System.Exception.ctor$1("Native response content types not supported");
        }
        else {
            throw new System.Exception.ctor$1("Invalid response content type encountered: " + returnType);
        }
        return httpResponse;
    };
});
$d.define(System.Gateway.Features, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["supportsAjax", t.supportsAjax, 22, 39], ["supportsImport", t.supportsImport, 22, 39], ["supportsTemplate", t.supportsTemplate, 22, 39], ["supportsRouting", t.supportsRouting, 22, 39], ["supportsDocuments", t.supportsDocuments, 22, 39], ["supportsBridge", t.supportsBridge, 22, 39], ["supportsMacintosh", t.supportsMacintosh, 22, 39], ["supportsWindows", t.supportsWindows, 22, 39], ["supportsAndroid", t.supportsAndroid, 22, 39], ["supportsIos", t.supportsIos, 22, 39]]]; };
    $t.supportsAjax = function Features_supportsAjax() {
        var result = false;
        var ajax_request = new XMLHttpRequest();
        if (ajax_request != null) {
            result = ("send" in ajax_request);
        }
        return result;
    };
    $t.supportsImport = function Features_supportsImport() {
        var result = false;
        var link_element = document.createElement("link");
        if (link_element != null) {
            link_element.rel = System.Gateway.TextContent().RelImport;
            link_element.type = System.Gateway.TextContent().HtmlMimeType;
            result = ("import" in link_element);
        }
        if (result == false) {
            var wnd = window;
            if (wnd.HTMLImports != null) {
                result = true;
            }
        }
        return result;
    };
    $t.supportsTemplate = function Features_supportsTemplate() {
        var result = false;
        var template_element = document.createElement("template");
        if (template_element != null) {
            result = ("content" in template_element);
        }
        return result;
    };
    $t.supportsRouting = function Features_supportsRouting() {
        return ("onhashchange" in window);
    };
    $t.supportsDocuments = function Features_supportsDocuments() {
        return ("implementation" in window.document) && ("createHTMLDocument" in window.document.implementation);
    };
    $t.supportsBridge = function Features_supportsBridge() {
        return (navigator.userAgent.indexOf("LocalBridge") >= 0);
    };
    $t.supportsMacintosh = function Features_supportsMacintosh() {
        return (navigator.userAgent.indexOf("LocalBridge.Mac") >= 0);
    };
    $t.supportsWindows = function Features_supportsWindows() {
        return (navigator.userAgent.indexOf("LocalBridge.Win") >= 0);
    };
    $t.supportsAndroid = function Features_supportsAndroid() {
        return (navigator.userAgent.indexOf("LocalBridge.And") >= 0);
    };
    $t.supportsIos = function Features_supportsIos() {
        return (navigator.userAgent.indexOf("LocalBridge.Ios") >= 0);
    };
});
$d.define(System.Xml.XmlDocument, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["get_document", p.get_document, 6, Document], ["set_document", p.set_document, 4, 38, [["value", Document, 0]]]], [["ctor", t.ctor, 6, [["doc", Document, 0]]]], [["document", Document, 0, 1]]]; };
    $t.$ator = function() {
        this.document = null;
    };
    $p.get_document = function XmlDocument_get_document() { return this.document; };
    $p.set_document = function XmlDocument_set_document(value) { this.document = value;return value; };
    $t.ctor = function XmlDocument(doc) {
        $t.$baseType.ctor.call(this);
        this.set_document(doc);
    };
});
System.ComponentModel.INotifyPropertyChanged = $d.type("System.ComponentModel.INotifyPropertyChanged", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161, null, null, null, null, [["PropertyChanged", System.ComponentModel.PropertyChangedEventHandler]]]; };
});
$d.define(System.ComponentModel.PropertyChangedEventArgs, System.EventArgs, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["propertyName", 20, 33]], [["get_PropertyName", p.get_PropertyName, 6, 20]], [["ctor", t.ctor, 6, [["propertyName", 20, 0]]]], [["PropertyName", 20, 0]]]; };
    $t.$ator = function() {
        this.propertyName = null;
    };
    $t.ctor = function PropertyChangedEventArgs(propertyName) {
        $t.$baseType.ctor.call(this);
        this.propertyName = propertyName;
    };
    $p.get_PropertyName = function PropertyChangedEventArgs_get_PropertyName() {
        return this.propertyName;
    };
});
System.ComponentModel.PropertyChangedEventHandler = $d.type("System.ComponentModel.PropertyChangedEventHandler", 65, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["sender", 1, 0], ["e", System.ComponentModel.PropertyChangedEventArgs, 1]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
});
$d.define(System.Collections.Generic.DictionaryList$2, System.Collections.Generic.Dictionary$2, function($t, $p, TKey, TValue) {
    $t.$intfs = function() { return [System.Collections.Generic.IDictionary$2(TKey, System.Collections.Generic.List$1(TValue)), System.Collections.Generic.ICollection$1(System.Collections.Generic.KeyValuePair$2(TKey, System.Collections.Generic.List$1(TValue)), 56964), System.Collections.IDictionary, System.Collections.ICollection, System.Collections.Generic.IReadOnlyDictionary$2(TKey, System.Collections.Generic.List$1(TValue)), System.Collections.Generic.IReadOnlyCollection$1(System.Collections.Generic.KeyValuePair$2(TKey, System.Collections.Generic.List$1(TValue)), 56964), System.Collections.Generic.IEnumerable$1(System.Collections.Generic.KeyValuePair$2(TKey, System.Collections.Generic.List$1(TValue)), 56964), System.Collections.IEnumerable]; };
    $t.$typeInfo = function(t, p) { return [1, null, [["Add", p.Add$2, 6, 38, [["key", TKey, 0], ["value", TValue, 1]]]], [["ctor", t.ctor, 6]]]; };
    $t.ctor = function DictionaryList$2() {
        $t.$baseType.ctor.call(this);
    };
    $p.Add$2 = function DictionaryList$2_Add(key, value) {
        if (!$t.$baseType.prototype.ContainsKey.call(this, key))
            $t.$baseType.prototype.Add$1.call(this, key, new (System.Collections.Generic.List$1(TValue).ctor)());
        $t.$baseType.prototype.get_Item.call(this, key).Add(value);
    };
}, ["TKey", "TValue"], [0, System.Collections.Generic.List$1]);
System.Collections.Specialized.INotifyCollectionChanged = $d.type("System.Collections.Specialized.INotifyCollectionChanged", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161, null, null, null, null, [["CollectionChanged", System.Collections.Specialized.NotifyCollectionChangedEventHandler]]]; };
});
System.Collections.Specialized.NotifyCollectionChangedAction = $d.typeEnum("System.Collections.Specialized.NotifyCollectionChangedAction", 45, $asm, 257, ["Add", "Remove", "Replace", "Move", "Reset"], [0, 1, 2, 3, 4]);
$d.define(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.EventArgs, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_NewItems", System.Collections.Generic.List$1(System.Object, 58578), 1], ["_OldItems", System.Collections.Generic.List$1(System.Object, 58578), 1], ["Action", System.Collections.Specialized.NotifyCollectionChangedAction, 1], ["NewStartingIndex", 45, 1], ["OldStartingIndex", 45, 1]], [["get_Action", p.get_Action, 6, System.Collections.Specialized.NotifyCollectionChangedAction], ["set_Action", p.set_Action, 1, 38, [["value", System.Collections.Specialized.NotifyCollectionChangedAction, 0]]], ["get_NewItems", p.get_NewItems, 6, System.Collections.Generic.IList$1(System.Object, 58578)], ["get_OldItems", p.get_OldItems, 6, System.Collections.Generic.IList$1(System.Object, 58578)], ["get_NewStartingIndex", p.get_NewStartingIndex, 6, 45], ["set_NewStartingIndex", p.set_NewStartingIndex, 1, 38, [["value", 45, 0]]], ["get_OldStartingIndex", p.get_OldStartingIndex, 6, 45], ["set_OldStartingIndex", p.set_OldStartingIndex, 1, 38, [["value", 45, 0]]]], [["ctor", t.ctor, 6, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0]]], ["ctor$1", t.ctor$1, 6, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0], ["changedItem", 1, 1], ["index", 45, 2]]], ["ctor$2", t.ctor$2, 6, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0], ["newItem", 1, 1], ["oldItem", 1, 2], ["index", 45, 3]]]], [["Action", System.Collections.Specialized.NotifyCollectionChangedAction, 0, 1], ["NewItems", System.Collections.Generic.IList$1(System.Object, 58578), 2], ["OldItems", System.Collections.Generic.IList$1(System.Object, 58578), 3], ["NewStartingIndex", 45, 4, 5], ["OldStartingIndex", 45, 6, 7]]]; };
    $t.$ator = function() {
        this._NewItems = null;
        this._OldItems = null;
        this.Action = 0;
        this.NewStartingIndex = 0;
        this.OldStartingIndex = 0;
    };
    $p.get_Action = function NotifyCollectionChangedEventArgs_get_Action() { return this.Action; };
    $p.set_Action = function NotifyCollectionChangedEventArgs_set_Action(value) { this.Action = value;return value; };
    $p.get_NewItems = function NotifyCollectionChangedEventArgs_get_NewItems() {
        return this._NewItems;
    };
    $p.get_OldItems = function NotifyCollectionChangedEventArgs_get_OldItems() {
        return this._OldItems;
    };
    $p.get_NewStartingIndex = function NotifyCollectionChangedEventArgs_get_NewStartingIndex() { return this.NewStartingIndex; };
    $p.set_NewStartingIndex = function NotifyCollectionChangedEventArgs_set_NewStartingIndex(value) { this.NewStartingIndex = value;return value; };
    $p.get_OldStartingIndex = function NotifyCollectionChangedEventArgs_get_OldStartingIndex() { return this.OldStartingIndex; };
    $p.set_OldStartingIndex = function NotifyCollectionChangedEventArgs_set_OldStartingIndex(value) { this.OldStartingIndex = value;return value; };
    $t.ctor = function NotifyCollectionChangedEventArgs(action) {
        $t.$baseType.ctor.call(this);
        if (action != 4)
            throw new System.NotSupportedException.ctor();
        this.set_Action(action);
        this.set_NewStartingIndex(-1);
        this.set_OldStartingIndex(-1);
    };
    $t.ctor$1 = function NotifyCollectionChangedEventArgs(action, changedItem, index) {
        $t.$baseType.ctor.call(this);
        switch (action) {
            case 0:
                this._NewItems = new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
                this._NewItems.Add(changedItem);
                this.set_NewStartingIndex(index);
                this.set_OldStartingIndex(-1);
                break;
            case 1:
                this._OldItems = new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
                this._OldItems.Add(changedItem);
                this.set_OldStartingIndex(index);
                this.set_NewStartingIndex(-1);
                break;
            default:
                throw new System.NotSupportedException.ctor();
        }
        this.set_Action(action);
    };
    $t.ctor$2 = function NotifyCollectionChangedEventArgs(action, newItem, oldItem, index) {
        $t.$baseType.ctor.call(this);
        if (action != 2)
            throw new System.NotSupportedException.ctor();
        this.set_Action(action);
        this._NewItems = new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
        this._NewItems.Add(newItem);
        this._OldItems = new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
        this._OldItems.Add(oldItem);
        this.set_NewStartingIndex(index);
        this.set_OldStartingIndex(-1);
    };
});
System.Collections.Specialized.NotifyCollectionChangedEventHandler = $d.type("System.Collections.Specialized.NotifyCollectionChangedEventHandler", 65, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, 38, [["sender", 1, 0], ["e", System.Collections.Specialized.NotifyCollectionChangedEventArgs, 1]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
});
System.Windows.Input.ICommand = $d.type("System.Windows.Input.ICommand", 66, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [161, null, [["CanExecute", null, 6, 39, [["parameter", 1, 0]]], ["Execute", null, 6, 38, [["parameter", 1, 0]]]], null, null, [["CanExecuteChanged", System.EventHandler]]]; };
});
$d.define(DuoCode.Dom.HtmlEventListener, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["handler", System.Action$1(Event, 61580), 1]], [["get_handler", p.get_handler, 6, System.Action$1(Event, 61580)], ["set_handler", p.set_handler, 6, 38, [["value", System.Action$1(Event, 61580), 0]]], ["handleEvent", p.handleEvent, 6, 38, [["event", Event, 0]]]], [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["handler", System.Action$1(Event, 61580), 0]]]], [["handler", System.Action$1(Event, 61580), 0, 1]]]; };
    $t.$ator = function() {
        this.handler = null;
    };
    $p.get_handler = function HtmlEventListener_get_handler() { return this.handler; };
    $p.set_handler = function HtmlEventListener_set_handler(value) { this.handler = value;return value; };
    $t.ctor = function HtmlEventListener() {
        $t.$baseType.ctor.call(this);
        this.set_handler(null);
    };
    $t.ctor$1 = function HtmlEventListener(handler) {
        $t.$baseType.ctor.call(this);
        this.set_handler(handler);
    };
    $p.handleEvent = function HtmlEventListener_handleEvent(event) {
        if (this.get_handler() != null) {
            this.get_handler()(event);
        }
    };
});
$d.define(DuoCode.Dom.HtmlDuoExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["insertAfter", t.insertAfter, 22, 38, [["source", HTMLElement, 0], ["newElement", HTMLElement, 1], ["targetElement", HTMLElement, 2]]], ["iterateNodes", t.iterateNodes, 22, 38, [["el", HTMLElement, 0], ["elementVisitor", System.Action$1(Node, 43667), 1]]], ["doIterateNode", t.doIterateNode, 17, 38, [["node", Node, 0], ["elementVisitor", System.Action$1(Node, 43667), 1]]]]]; };
    $t.insertAfter = function HtmlDuoExtensions_insertAfter(source, newElement, targetElement) {
        var parent = targetElement.parentNode;
        var dynamic_parent = parent;
        if (dynamic_parent.lastchild == targetElement) {
            parent.appendChild(newElement);
        }
        else {
            parent.insertBefore(newElement, targetElement.nextSibling);
        }
    };
    $t.iterateNodes = function HtmlDuoExtensions_iterateNodes(el, elementVisitor) {
        if (el != null && elementVisitor != null) {
            if (el.hasChildNodes()) {
                var children = el.childNodes;
                if (children != null) {
                    var count = children.length;
                    if (count > 0) {
                        for (var xx = 0; xx < count; xx++) {
                            $t.doIterateNode(children[xx], elementVisitor);
                        }
                    }
                }
            }
        }
    };
    $t.doIterateNode = function HtmlDuoExtensions_doIterateNode(node, elementVisitor) {
        if (node != null) {
            elementVisitor(node);
            if (node.hasChildNodes()) {
                var children = node.childNodes;
                if (children != null) {
                    var count = children.length;
                    if (count > 0) {
                        for (var xx = 0; xx < count; xx++) {
                            $t.doIterateNode(children[xx], elementVisitor);
                        }
                    }
                }
            }
        }
    };
});
$d.define(DuoCode.Dom.WindowExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["eval", t.eval, 22, System.Object, [["window", Window, 0], ["code", 20, 1]]], ["btoa", t.btoa, 22, 20, [["window", Window, 0], ["str", 20, 1]]], ["atob", t.atob, 22, 20, [["window", Window, 0], ["str", 20, 1]]]]]; };
    $t.eval = function WindowExtensions_eval(window, code) {
        if (String.IsNullOrEmpty(code))
            throw new System.ArgumentNullException.ctor$1("code");
        var dynamic_window = window;
        return dynamic_window.eval(code);
    };
    $t.btoa = function WindowExtensions_btoa(window, str) {
        if (String.IsNullOrEmpty(str))
            throw new System.ArgumentNullException.ctor$1("str");
        var dynamic_window = window;
        return dynamic_window.btoa(str);
    };
    $t.atob = function WindowExtensions_atob(window, str) {
        if (String.IsNullOrEmpty(str))
            throw new System.ArgumentNullException.ctor$1("str");
        var dynamic_window = window;
        return dynamic_window.atob(str);
    };
});
$d.define(System.Data.DataSet, Object, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, null, [["ctor", t.ctor, 6]]]; };
    $t.ctor = function DataSet() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(System.Data.DataTable, Object, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, null, [["ctor", t.ctor, 6]]]; };
    $t.ctor = function DataTable() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(Newtonsoft.Json.Linq.JObject, Object, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, null, [["ctor", t.ctor, 6]]]; };
    $t.ctor = function JObject() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(Newtonsoft.Json.JsonObjectAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["serviceName", 20, 0]]]], null, null, [(function() { var $obj = new System.AttributeUsageAttribute.ctor(4);$obj.set_Inherited(true);$obj.set_AllowMultiple(false);return $obj; }).call(this)]]; };
    $t.ctor = function JsonObjectAttribute() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor$1 = function JsonObjectAttribute(serviceName) {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(Newtonsoft.Json.JsonIgnoreAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["serviceName", 20, 0]]]], null, null, [(function() { var $obj = new System.AttributeUsageAttribute.ctor(128);$obj.set_Inherited(true);$obj.set_AllowMultiple(false);return $obj; }).call(this)]]; };
    $t.ctor = function JsonIgnoreAttribute() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor$1 = function JsonIgnoreAttribute(serviceName) {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(System.Gateway.Events.EventBus, null, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["Recipient", 1, 1], ["Subscribers", System.Collections.Generic.DictionaryList$2(String, System.Collections.Generic.KeyValuePair$2(System.Object, System.Delegate, 58614), 65278), 1], ["SubscriberLock", 1, 33], ["CreationLock", 1, 49], ["DefaultInstance", System.Gateway.Events.EventBus, 17]], [["Notify", p.Notify, 6, 45, [["message", 20, 0]]], ["Notify", p.Notify$1, 6, 45, [["message", 20, 0], ["data", 1, 1]]], (function(T) { return ["Notify", p.Notify$2, 6, 45, [["message", 20, 0], ["data", T, 1]], null, [T]]; }).call(this, $d.typeParam("T")), ["Register", p.Register, 6, 38, [["message", 20, 0], ["action", System.Action, 1]]], (function(T) { return ["Register", p.Register$1, 6, 38, [["message", 20, 0], ["action", System.Action$1(T), 1]], null, [T]]; }).call(this, $d.typeParam("T")), ["Unregister", p.Unregister, 6, 45, [["message", 20, 0]]], ["Clear", p.Clear, 6], ["get_Default", t.get_Default, 22, System.Gateway.Events.EventBus], ["Dispose", p.Dispose, 6], ["OnDispose", p.OnDispose, 4], [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6]], [["Default", System.Gateway.Events.EventBus, 7]]]; };
    $t.cctor = function() {
        $t.CreationLock = new System.Object.ctor();
        $t.DefaultInstance = null;
    };
    $t.$ator = function() {
        this.Recipient = new System.Object.ctor();
        this.Subscribers = new (System.Collections.Generic.DictionaryList$2(String, System.Collections.Generic.KeyValuePair$2(System.Object, 
            System.Delegate, 58614), 65278).ctor)();
        this.SubscriberLock = new System.Object.ctor();
    };
    $t.ctor = function EventBus() {
        $t.$baseType.ctor.call(this);
    };
    $p.Notify = function EventBus_Notify(message) {
        var notificationCount = 0;
        if (this.Subscribers.ContainsKey(message)) {
            var $iter = this.Subscribers.get_Item(message);
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var subcriber = $enumerator.System$Collections$IEnumerator$get_Current();
                if (subcriber.get_Value() != null) {
                    subcriber.get_Value().DynamicInvoke(null);
                }
            }
            notificationCount = this.Subscribers.get_Item(message).get_Count();
        }
        return notificationCount;
    };
    $p.Notify$1 = function EventBus_Notify(message, data) {
        return this.Notify$2(System.Object, message, data);
    };
    $p.Notify$2 = function EventBus_Notify(T, message, data) {
        var notificationCount = 0;
        if (this.Subscribers.ContainsKey(message)) {
            var $iter = this.Subscribers.get_Item(message);
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var subcriber = $enumerator.System$Collections$IEnumerator$get_Current();
                if (subcriber.get_Value() != null) {
                    subcriber.get_Value().DynamicInvoke($d.array(System.Object, [data]));
                }
            }
            notificationCount = this.Subscribers.get_Item(message).get_Count();
        }
        return notificationCount;
    };
    $p.Register = function EventBus_Register(message, action) {
        this.Subscribers.Add$2(message, new (System.Collections.Generic.KeyValuePair$2(System.Object, 
            System.Delegate, 58614).ctor$1)(this.Recipient, action));
    };
    $p.Register$1 = function EventBus_Register(T, message, action) {
        this.Subscribers.Add$2(message, new (System.Collections.Generic.KeyValuePair$2(System.Object, 
            System.Delegate, 58614).ctor$1)(this.Recipient, action));
    };
    $p.Unregister = function EventBus_Unregister(message) {
        var removed = 0;
        if (this.Subscribers.ContainsKey(message)) {
            var subscribers = this.Subscribers.get_Item(message);
            removed = subscribers.RemoveAll($d.delegate(function(kvp) {
                return kvp.get_Key() == this.Recipient;
            }, this));
        }
        return removed;
    };
    $p.Clear = function EventBus_Clear() {
        this.Subscribers.Clear();
    };
    $t.get_Default = function EventBus_get_Default() {
        if ($t().DefaultInstance == null) {
            if ($t().DefaultInstance == null) {
                $t().DefaultInstance = new System.Gateway.Events.EventBus.ctor();
            }
        }
        return $t().DefaultInstance;
    };
    $p.Dispose = function EventBus_Dispose() {
        this.Clear();
        this.OnDispose();
        this.Subscribers = null;
    };
    $p.OnDispose = function EventBus_OnDispose() {};
    $p.System$IDisposable$Dispose = $p.Dispose;
});
System.Gateway.Ioc.IServiceLocator = $d.type("System.Gateway.Ioc.IServiceLocator", 66, $asm, function($t, $p) {
    $t.$intfs = [System.IServiceProvider];
    $t.$typeInfo = function(t, p) { return [161, null, [["NewInstance", null, 6, 1, [["serviceType", 27, 0]]], ["NewInstance", null, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["NewInstance", null, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["NewInstance", null, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetInstance", null, 6, 1, [["serviceType", 27, 0]]], ["GetInstance", null, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["GetInstance", null, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["GetInstance", null, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetAllInstances", null, 6, System.Collections.Generic.IEnumerable$1(System.Object, 58578), [["serviceType", 27, 0]]], (function(TService) { return ["GetAllInstances", null, 6, System.Collections.Generic.IEnumerable$1(TService), null, null, [TService]]; }).call(this, $d.typeParam("TService"))]]; };
});
System.Gateway.Ioc.IMicroIoc = $d.type("System.Gateway.Ioc.IMicroIoc", 66, $asm, function($t, $p) {
    $t.$intfs = [System.Gateway.Ioc.IServiceLocator, System.IServiceProvider];
    $t.$typeInfo = function(t, p) { return [161, null, [(function(TClass) { return ["ContainsCreated", null, 6, 39, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["ContainsCreated", null, 6, 39, [["key", 20, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(T) { return ["IsRegistered", null, 6, 39, null, null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["IsRegistered", null, 6, 39, [["key", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T")), (function(TInterface, TClass) { return ["Register", null, 6, 38, null, null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", null, 6, 38, [["createInstanceImmediately", 39, 0]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0], ["createInstanceImmediately", 39, 1]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, [["createInstanceImmediately", 39, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0], ["createInstanceImmediately", 39, 1]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0], ["key", 20, 1]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", null, 6, 38, [["factory", System.Func$1(TClass), 0], ["key", 20, 1], ["createInstanceImmediately", 39, 2]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), ["Reset", null, 6], (function(TClass) { return ["Unregister", null, 6, 38, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Unregister", null, 6, 38, [["instance", TClass, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Unregister", null, 6, 38, [["key", 20, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass"))]]; };
});
$d.define(System.Gateway.Ioc.MicroIoc, null, function($t, $p) {
    $t.$intfs = [System.Gateway.Ioc.IMicroIoc, System.Gateway.Ioc.IServiceLocator, System.IServiceProvider];
    $t.$typeInfo = function(t, p) { return [1, [["_constructorInfos", System.Collections.Generic.Dictionary$2(System.Type, System.Reflection.ConstructorInfo, 64434), 33], ["_defaultKey", 20, 33], ["_factories", System.Collections.Generic.Dictionary$2(System.Type, System.Collections.Generic.Dictionary$2(String, System.Delegate, 54132), 39889), 33], ["_instancesRegistry", System.Collections.Generic.Dictionary$2(System.Type, System.Collections.Generic.Dictionary$2(String, System.Object, 54410), 25071), 33], ["_interfaceToClassMap", System.Collections.Generic.Dictionary$2(System.Type, System.Type, 53397), 33], ["_syncLock", 1, 33], ["CreationLock", 1, 49], ["DefaultInstance", System.Gateway.Ioc.MicroIoc, 17], ["EmptyArguments", 129, 54]], [["get_Default", t.get_Default, 22, System.Gateway.Ioc.MicroIoc], (function(TClass) { return ["ContainsCreated", p.ContainsCreated, 6, 39, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["ContainsCreated", p.ContainsCreated$1, 6, 39, [["key", 20, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(T) { return ["IsRegistered", p.IsRegistered, 6, 39, null, null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["IsRegistered", p.IsRegistered$1, 6, 39, [["key", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T")), (function(TInterface, TClass) { return ["Register", p.Register$6, 6, 38, null, null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", p.Register$8, 6, 38, [["createInstanceImmediately", 39, 0]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", p.Register$7, 6, 38, [["factory", System.Func$1(TClass), 0]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TInterface, TClass) { return ["Register", p.Register$9, 6, 38, [["factory", System.Func$1(TClass), 0], ["createInstanceImmediately", 39, 1]], null, [TInterface, TClass]]; }).call(this, $d.typeParam("TInterface"), $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register, 6, 38, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register$2, 6, 38, [["createInstanceImmediately", 39, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register$1, 6, 38, [["factory", System.Func$1(TClass), 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register$3, 6, 38, [["factory", System.Func$1(TClass), 0], ["createInstanceImmediately", 39, 1]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register$4, 6, 38, [["factory", System.Func$1(TClass), 0], ["key", 20, 1]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Register", p.Register$5, 6, 38, [["factory", System.Func$1(TClass), 0], ["key", 20, 1], ["createInstanceImmediately", 39, 2]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), ["Reset", p.Reset, 6], (function(TClass) { return ["Unregister", p.Unregister, 6, 38, null, null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Unregister", p.Unregister$1, 6, 38, [["instance", TClass, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), (function(TClass) { return ["Unregister", p.Unregister$2, 6, 38, [["key", 20, 0]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), ["DoGetService", p.DoGetService, 1, 1, [["serviceType", 27, 0], ["key", 20, 1]]], ["DoNewService", p.DoNewService, 1, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TClass) { return ["DoRegister", p.DoRegister, 1, 38, [["classType", 27, 0], ["factory", System.Func$1(TClass), 1], ["key", 20, 2]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), ["GetConstructorInfo", p.GetConstructorInfo, 1, System.Reflection.ConstructorInfo, [["serviceType", 27, 0]]], ["GetPreferredConstructorInfo", p.GetPreferredConstructorInfo, 1, System.Reflection.ConstructorInfo, [["constructorInfos", System.Collections.Generic.IEnumerable$1(System.Reflection.ConstructorInfo, 2909), 0], ["resolveTo", 27, 1]]], ["GetAllCreatedInstances", p.GetAllCreatedInstances, 6, System.Collections.Generic.IEnumerable$1(System.Object, 58578), [["serviceType", 27, 0]]], (function(TService) { return ["GetAllCreatedInstances", p.GetAllCreatedInstances$1, 6, System.Collections.Generic.IEnumerable$1(TService), null, null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetService", p.GetService, 6, 1, [["serviceType", 27, 0]]], ["NewInstance", p.NewInstance, 6, 1, [["serviceType", 27, 0]]], ["NewInstance", p.NewInstance$1, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["NewInstance", p.NewInstance$2, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["NewInstance", p.NewInstance$3, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetInstance", p.GetInstance, 6, 1, [["serviceType", 27, 0]]], ["GetInstance", p.GetInstance$1, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["GetInstance", p.GetInstance$2, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["GetInstance", p.GetInstance$3, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetAllInstances", p.GetAllInstances, 6, System.Collections.Generic.IEnumerable$1(System.Object, 58578), [["serviceType", 27, 0]]], (function(TService) { return ["GetAllInstances", p.GetAllInstances$1, 6, System.Collections.Generic.IEnumerable$1(TService), null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TClass) { return ["ActivateInstance", t.ActivateInstance, 22, TClass, [["constructor", System.Reflection.ConstructorInfo, 0], ["get_service", System.Func$2(System.Type, System.Object, 59291), 1]], null, [TClass]]; }).call(this, $d.typeParam("TClass")), [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6]], [["Default", System.Gateway.Ioc.MicroIoc, 0]]]; };
    $t.cctor = function() {
        $t.CreationLock = new System.Object.ctor();
        $t.DefaultInstance = null;
        $t.EmptyArguments = $d.array(System.Object, 0);
    };
    $t.$ator = function() {
        this._constructorInfos = new (System.Collections.Generic.Dictionary$2(System.Type, System.Reflection.ConstructorInfo, 
            64434).ctor)();
        this._defaultKey = System.Guid.NewGuid().toString();
        this._factories = new (System.Collections.Generic.Dictionary$2(System.Type, System.Collections.Generic.Dictionary$2(String, 
            System.Delegate, 54132), 39889).ctor)();
        this._instancesRegistry = new (System.Collections.Generic.Dictionary$2(System.Type, System.Collections.Generic.Dictionary$2(String, 
            System.Object, 54410), 25071).ctor)();
        this._interfaceToClassMap = new (System.Collections.Generic.Dictionary$2(System.Type, System.Type, 
            53397).ctor)();
        this._syncLock = new System.Object.ctor();
    };
    $t.ctor = function MicroIoc() {
        $t.$baseType.ctor.call(this);
    };
    $t.get_Default = function MicroIoc_get_Default() {
        if ($t().DefaultInstance == null) {
            if ($t().DefaultInstance == null) {
                $t().DefaultInstance = new System.Gateway.Ioc.MicroIoc.ctor();
            }
        }
        return $t().DefaultInstance;
    };
    $p.ContainsCreated = function MicroIoc_ContainsCreated(TClass) {
        return this.ContainsCreated$1(TClass, null);
    };
    $p.ContainsCreated$1 = function MicroIoc_ContainsCreated(TClass, key) {
        var classType = $d.typeOf(TClass);
        if (!this._instancesRegistry.ContainsKey(classType)) {
            return false;
        }
        if (String.IsNullOrEmpty(key)) {
            return this._instancesRegistry.get_Item(classType).get_Count() > 0;
        }
        return this._instancesRegistry.get_Item(classType).ContainsKey(key);
    };
    $p.IsRegistered = function MicroIoc_IsRegistered(T) {
        var classType = $d.typeOf(T);
        return this._interfaceToClassMap.ContainsKey(classType);
    };
    $p.IsRegistered$1 = function MicroIoc_IsRegistered(T, key) {
        var classType = $d.typeOf(T);
        if (!this._interfaceToClassMap.ContainsKey(classType) || !this._factories.ContainsKey(classType)) {
            return false;
        }
        return this._factories.get_Item(classType).ContainsKey(key);
    };
    $p.Register$6 = function MicroIoc_Register(TInterface, TClass) {
        this.Register$8(TInterface, TClass, false);
    };
    $p.Register$8 = function MicroIoc_Register(TInterface, TClass, createInstanceImmediately) {
        var interfaceType = $d.typeOf(TInterface);
        var classType = $d.typeOf(TClass);
        if (this._interfaceToClassMap.ContainsKey(interfaceType)) {
            if (this._interfaceToClassMap.get_Item(interfaceType) != classType) {
                throw new System.InvalidOperationException.ctor$1(String.Format("There is already a class registered for {0}.", 
                    $d.array(System.Object, [interfaceType.get_FullName()])));
            }
        }
        else {
            this._interfaceToClassMap.Add$1(interfaceType, classType);
        }
        var constructor = this.GetConstructorInfo(classType);
        this._constructorInfos.Add$1(classType, constructor);
        var service = $d.delegate(this.GetService, this);
        var factory = $d.delegate(function() {
            return $t.ActivateInstance(TInterface, constructor, service);
        }, this);
        this.DoRegister(TInterface, interfaceType, factory, this._defaultKey);
        if (createInstanceImmediately) {
            this.GetInstance$2(TInterface);
        }
    };
    $p.Register$7 = function MicroIoc_Register(TInterface, TClass, factory) {
        this.Register$9(TInterface, TClass, factory, false);
    };
    $p.Register$9 = function MicroIoc_Register(TInterface, TClass, factory, createInstanceImmediately) {
        var interfaceType = $d.typeOf(TInterface);
        var classType = $d.typeOf(TClass);
        if (this._interfaceToClassMap.ContainsKey(interfaceType)) {
            if (this._interfaceToClassMap.get_Item(interfaceType) != classType) {
                throw new System.InvalidOperationException.ctor$1(String.Format("There is already a class registered for {0}.", 
                    $d.array(System.Object, [interfaceType.get_FullName()])));
            }
        }
        else {
            this._interfaceToClassMap.Add$1(interfaceType, classType);
        }
        var constructor = this.GetConstructorInfo(classType);
        this._constructorInfos.Add$1(classType, constructor);
        this.DoRegister(TClass, interfaceType, factory, this._defaultKey);
        if (createInstanceImmediately) {
            this.GetInstance$2(TInterface);
        }
    };
    $p.Register = function MicroIoc_Register(TClass) {
        this.Register$2(TClass, false);
    };
    $p.Register$2 = function MicroIoc_Register(TClass, createInstanceImmediately) {
        var classType = $d.typeOf(TClass);
        if (classType.get_IsInterface()) {
            throw new System.ArgumentException.ctor$1("An interface cannot be registered alone.");
        }
        if (this._factories.ContainsKey(classType) && this._factories.get_Item(classType).ContainsKey(this._defaultKey)) {
            if (!this._constructorInfos.ContainsKey(classType)) {
                throw new System.InvalidOperationException.ctor$1(String.Format("Class {0} is already registered.", 
                    $d.array(System.Object, [classType])));
            }
            return;
        }
        if (!this._interfaceToClassMap.ContainsKey(classType)) {
            this._interfaceToClassMap.Add$1(classType, null);
        }
        var constructor = this.GetConstructorInfo(classType);
        this._constructorInfos.Add$1(classType, constructor);
        var service = $d.delegate(this.GetService, this);
        var factory = $d.delegate(function() {
            return $t.ActivateInstance(TClass, constructor, service);
        }, this);
        this.DoRegister(TClass, classType, factory, this._defaultKey);
        if (createInstanceImmediately) {
            this.GetInstance$2(TClass);
        }
    };
    $p.Register$1 = function MicroIoc_Register(TClass, factory) {
        this.Register$3(TClass, factory, false);
    };
    $p.Register$3 = function MicroIoc_Register(TClass, factory, createInstanceImmediately) {
        if (factory == null) {
            throw new System.ArgumentNullException.ctor$1("factory");
        }
        var classType = $d.typeOf(TClass);
        if (this._factories.ContainsKey(classType) && this._factories.get_Item(classType).ContainsKey(this._defaultKey)) {
            throw new System.InvalidOperationException.ctor$1(String.Format("There is already a factory registered for {0}.", 
                $d.array(System.Object, [classType.get_FullName()])));
        }
        if (!this._interfaceToClassMap.ContainsKey(classType)) {
            this._interfaceToClassMap.Add$1(classType, null);
        }
        this.DoRegister(TClass, classType, factory, this._defaultKey);
        if (createInstanceImmediately) {
            this.GetInstance$2(TClass);
        }
    };
    $p.Register$4 = function MicroIoc_Register(TClass, factory, key) {
        this.Register$5(TClass, factory, key, false);
    };
    $p.Register$5 = function MicroIoc_Register(TClass, factory, key, createInstanceImmediately) {
        var classType = $d.typeOf(TClass);
        if (this._factories.ContainsKey(classType) && this._factories.get_Item(classType).ContainsKey(key)) {
            throw new System.InvalidOperationException.ctor$1(String.Format("There is already a factory registered for {0} with key {1}.", 
                $d.array(System.Object, [classType.get_FullName(), key])));
        }
        if (!this._interfaceToClassMap.ContainsKey(classType)) {
            this._interfaceToClassMap.Add$1(classType, null);
        }
        this.DoRegister(TClass, classType, factory, key);
        if (createInstanceImmediately) {
            this.GetInstance$3(TClass, key);
        }
    };
    $p.Reset = function MicroIoc_Reset() {
        this._interfaceToClassMap.Clear();
        this._instancesRegistry.Clear();
        this._constructorInfos.Clear();
        this._factories.Clear();
    };
    $p.Unregister = function MicroIoc_Unregister(TClass) {
        var resolveTo;
        var serviceType = $d.typeOf(TClass);
        if (this._interfaceToClassMap.ContainsKey(serviceType)) {
            resolveTo = this._interfaceToClassMap.get_Item(serviceType) || serviceType;
        }
        else {
            resolveTo = serviceType;
        }
        if (this._instancesRegistry.ContainsKey(serviceType)) {
            this._instancesRegistry.Remove(serviceType);
        }
        if (this._interfaceToClassMap.ContainsKey(serviceType)) {
            this._interfaceToClassMap.Remove(serviceType);
        }
        if (this._factories.ContainsKey(serviceType)) {
            this._factories.Remove(serviceType);
        }
        if (this._constructorInfos.ContainsKey(resolveTo)) {
            this._constructorInfos.Remove(resolveTo);
        }
    };
    $p.Unregister$1 = function MicroIoc_Unregister(TClass, instance) {
        var classType = $d.typeOf(TClass);
        if (this._instancesRegistry.ContainsKey(classType)) {
            var list = this._instancesRegistry.get_Item(classType);
            var pairs = System.Linq.Enumerable.ToList(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), System.Linq.Enumerable.Where(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), list, $d.delegate(function(pair) {
                return pair.get_Value() == instance;
            }, this)));
            for (var index = 0; index < DuoCode.Runtime.JsArrayExtensions.Count(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), pairs); index++) {
                var key = pairs.get_Item(index).get_Key();
                list.Remove(key);
                if (this._factories.ContainsKey(classType)) {
                    if (this._factories.get_Item(classType).ContainsKey(key)) {
                        this._factories.get_Item(classType).Remove(key);
                    }
                }
            }
        }
    };
    $p.Unregister$2 = function MicroIoc_Unregister(TClass, key) {
        var classType = $d.typeOf(TClass);
        if (this._instancesRegistry.ContainsKey(classType)) {
            var list = this._instancesRegistry.get_Item(classType);
            var pairs = System.Linq.Enumerable.ToList(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), System.Linq.Enumerable.Where(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), list, $d.delegate(function(pair) {
                return pair.get_Key() == key;
            }, this)));
            for (var index = 0; index < DuoCode.Runtime.JsArrayExtensions.Count(System.Collections.Generic.KeyValuePair$2(String, 
                System.Object, 54410), pairs); index++) {
                list.Remove(pairs.get_Item(index).get_Key());
            }
        }
        if (this._factories.ContainsKey(classType)) {
            if (this._factories.get_Item(classType).ContainsKey(key)) {
                this._factories.get_Item(classType).Remove(key);
            }
        }
    };
    $p.DoGetService = function MicroIoc_DoGetService(serviceType, key) {
        if (String.IsNullOrEmpty(key)) {
            key = this._defaultKey;
        }
        var instances;
        if (!this._instancesRegistry.ContainsKey(serviceType)) {
            if (!this._interfaceToClassMap.ContainsKey(serviceType)) {
                throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Type not found in register: {0}.", 
                    $d.array(System.Object, [serviceType.get_FullName()])));
            }
            instances = new (System.Collections.Generic.Dictionary$2(String, System.Object, 54410).ctor)();
            this._instancesRegistry.Add$1(serviceType, instances);
        }
        else {
            instances = this._instancesRegistry.get_Item(serviceType);
        }
        if (instances.ContainsKey(key)) {
            return instances.get_Item(key);
        }
        var instance = null;
        if (this._factories.ContainsKey(serviceType)) {
            if (this._factories.get_Item(serviceType).ContainsKey(key)) {
                instance = this._factories.get_Item(serviceType).get_Item(key).DynamicInvoke(null);
            }
            else {
                if (this._factories.get_Item(serviceType).ContainsKey(this._defaultKey)) {
                    instance = this._factories.get_Item(serviceType).get_Item(this._defaultKey).DynamicInvoke(null);
                }
                else {
                    throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Type not found in register without a key: {0}", 
                        $d.array(System.Object, [serviceType.get_FullName()])));
                }
            }
        }
        instances.Add$1(key, instance);
        return instance;
    };
    $p.DoNewService = function MicroIoc_DoNewService(serviceType, key) {
        if (String.IsNullOrEmpty(key)) {
            key = this._defaultKey;
        }
        var instance = null;
        if (this._factories.ContainsKey(serviceType)) {
            if (this._factories.get_Item(serviceType).ContainsKey(key)) {
                instance = this._factories.get_Item(serviceType).get_Item(key).DynamicInvoke(null);
            }
            else {
                if (this._factories.get_Item(serviceType).ContainsKey(this._defaultKey)) {
                    instance = this._factories.get_Item(serviceType).get_Item(this._defaultKey).DynamicInvoke(null);
                }
                else {
                    throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Type not found in register without a key: {0}", 
                        $d.array(System.Object, [serviceType.get_FullName()])));
                }
            }
        }
        return instance;
    };
    $p.DoRegister = function MicroIoc_DoRegister(TClass, classType, factory, key) {
        if (this._factories.ContainsKey(classType)) {
            if (this._factories.get_Item(classType).ContainsKey(key)) {
                return;
            }
            this._factories.get_Item(classType).Add$1(key, factory);
        }
        else {
            var list = new (System.Collections.Generic.Dictionary$2(String, System.Delegate, 54132).ctor)();
            list.Add$1(key, factory);
            this._factories.Add$1(classType, list);
        }
    };
    $p.GetConstructorInfo = function MicroIoc_GetConstructorInfo(serviceType) {
        var resolveTo;
        if (this._interfaceToClassMap.ContainsKey(serviceType)) {
            resolveTo = this._interfaceToClassMap.get_Item(serviceType) || serviceType;
        }
        else {
            resolveTo = serviceType;
        }
        var constructorInfos = resolveTo.GetConstructors();
        if (constructorInfos.length > 1) {
            if (constructorInfos.length > 2) {
                return this.GetPreferredConstructorInfo(constructorInfos, resolveTo);
            }
            if (System.Linq.Enumerable.FirstOrDefault$1(System.Reflection.ConstructorInfo, constructorInfos, 
                $d.delegate(function(i) {
                    return i.get_Name() == ".cctor";
                }, this)) == null) {
                return this.GetPreferredConstructorInfo(constructorInfos, resolveTo);
            }
            var first = System.Linq.Enumerable.FirstOrDefault$1(System.Reflection.ConstructorInfo, constructorInfos, 
                $d.delegate(function(i) {
                    return i.get_Name() != ".cctor";
                }, this));
            if (first == null || !first.get_IsPublic()) {
                throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Cannot register: No public constructor found in {0}.", 
                    $d.array(System.Object, [resolveTo.get_Name()])));
            }
            return first;
        }
        if (constructorInfos.length == 0 || (constructorInfos.length == 1 && !constructorInfos[0].get_IsPublic())) {
            throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Cannot register: No public constructor found in {0}.", 
                $d.array(System.Object, [resolveTo.get_Name()])));
        }
        return constructorInfos[0];
    };
    $p.GetPreferredConstructorInfo = function MicroIoc_GetPreferredConstructorInfo(constructorInfos, resolveTo) {
        var preferredConstructorInfo = null;
        var $iter = constructorInfos;
        var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
        while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
            var t = $enumerator.System$Collections$IEnumerator$get_Current();
            var attribute = System.MemberInfoExtensions.GetCustomAttribute(System.PreferredConstructorAttribute, 
                t, false);
            if (attribute != null) {
                preferredConstructorInfo = t;
                break;
            }
        }
        if (preferredConstructorInfo == null) {
            throw new System.Gateway.Ioc.ActivationException.ctor$1(String.Format("Cannot register: Multiple constructors found in {0} but none marked with PreferredConstructor.", 
                $d.array(System.Object, [resolveTo.get_Name()])));
        }
        return preferredConstructorInfo;
    };
    $p.GetAllCreatedInstances = function MicroIoc_GetAllCreatedInstances(serviceType) {
        if (this._instancesRegistry.ContainsKey(serviceType)) {
            return this._instancesRegistry.get_Item(serviceType).get_Values();
        }
        return new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
    };
    $p.GetAllCreatedInstances$1 = function MicroIoc_GetAllCreatedInstances(TService) {
        var serviceType = $d.typeOf(TService);
        return System.Linq.Enumerable.Select(System.Object, TService, this.GetAllCreatedInstances(serviceType), 
            $d.delegate(function(instance) {
                return instance;
            }, this));
    };
    $p.GetService = function MicroIoc_GetService(serviceType) {
        return this.DoGetService(serviceType, this._defaultKey);
    };
    $p.NewInstance = function MicroIoc_NewInstance(serviceType) {
        return this.DoNewService(serviceType, this._defaultKey);
    };
    $p.NewInstance$1 = function MicroIoc_NewInstance(serviceType, key) {
        return this.DoNewService(serviceType, key);
    };
    $p.NewInstance$2 = function MicroIoc_NewInstance(TService) {
        return this.DoNewService($d.typeOf(TService), this._defaultKey);
    };
    $p.NewInstance$3 = function MicroIoc_NewInstance(TService, key) {
        return this.DoNewService($d.typeOf(TService), key);
    };
    $p.GetInstance = function MicroIoc_GetInstance(serviceType) {
        return this.DoGetService(serviceType, this._defaultKey);
    };
    $p.GetInstance$1 = function MicroIoc_GetInstance(serviceType, key) {
        return this.DoGetService(serviceType, key);
    };
    $p.GetInstance$2 = function MicroIoc_GetInstance(TService) {
        return this.DoGetService($d.typeOf(TService), this._defaultKey);
    };
    $p.GetInstance$3 = function MicroIoc_GetInstance(TService, key) {
        return this.DoGetService($d.typeOf(TService), key);
    };
    $p.GetAllInstances = function MicroIoc_GetAllInstances(serviceType) {
        if (this._factories.ContainsKey(serviceType)) {
            var $iter = this._factories.get_Item(serviceType);
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var factory = $enumerator.System$Collections$IEnumerator$get_Current();
                this.GetInstance$1(serviceType, factory.get_Key());
            }
        }
        if (this._instancesRegistry.ContainsKey(serviceType)) {
            return this._instancesRegistry.get_Item(serviceType).get_Values();
        }
        return new (System.Collections.Generic.List$1(System.Object, 58578).ctor)();
    };
    $p.GetAllInstances$1 = function MicroIoc_GetAllInstances(TService) {
        var serviceType = $d.typeOf(TService);
        return System.Linq.Enumerable.Select(System.Object, TService, this.GetAllInstances(serviceType), 
            $d.delegate(function(instance) {
                return instance;
            }, this));
    };
    $t.ActivateInstance = function MicroIoc_ActivateInstance(TClass, constructor, get_service) {
        var parameterInfos = constructor.GetParameters();
        if (parameterInfos.length == 0) {
            return constructor.Invoke$2(System.Gateway.Ioc.MicroIoc().EmptyArguments);
        }
        var parameters = $d.array(System.Object, parameterInfos.length);
        for (var $i = 0, $length = parameterInfos.length; $i < $length; $i++) {
            var parameterInfo = parameterInfos[$i];
            parameters[parameterInfo.get_Position()] = get_service(parameterInfo.get_ParameterType());
        }
        return constructor.Invoke$2(parameters);
    };
    $p.System$Gateway$Ioc$IMicroIoc$ContainsCreated = $p.ContainsCreated;
    $p.System$Gateway$Ioc$IMicroIoc$ContainsCreated$1 = $p.ContainsCreated$1;
    $p.System$Gateway$Ioc$IMicroIoc$IsRegistered = $p.IsRegistered;
    $p.System$Gateway$Ioc$IMicroIoc$IsRegistered$1 = $p.IsRegistered$1;
    $p.System$Gateway$Ioc$IMicroIoc$Register$6 = $p.Register$6;
    $p.System$Gateway$Ioc$IMicroIoc$Register$8 = $p.Register$8;
    $p.System$Gateway$Ioc$IMicroIoc$Register$7 = $p.Register$7;
    $p.System$Gateway$Ioc$IMicroIoc$Register$9 = $p.Register$9;
    $p.System$Gateway$Ioc$IMicroIoc$Register = $p.Register;
    $p.System$Gateway$Ioc$IMicroIoc$Register$2 = $p.Register$2;
    $p.System$Gateway$Ioc$IMicroIoc$Register$1 = $p.Register$1;
    $p.System$Gateway$Ioc$IMicroIoc$Register$3 = $p.Register$3;
    $p.System$Gateway$Ioc$IMicroIoc$Register$4 = $p.Register$4;
    $p.System$Gateway$Ioc$IMicroIoc$Register$5 = $p.Register$5;
    $p.System$Gateway$Ioc$IMicroIoc$Reset = $p.Reset;
    $p.System$Gateway$Ioc$IMicroIoc$Unregister = $p.Unregister;
    $p.System$Gateway$Ioc$IMicroIoc$Unregister$1 = $p.Unregister$1;
    $p.System$Gateway$Ioc$IMicroIoc$Unregister$2 = $p.Unregister$2;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance = $p.NewInstance;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$1 = $p.NewInstance$1;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$2 = $p.NewInstance$2;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$3 = $p.NewInstance$3;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance = $p.GetInstance;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$1 = $p.GetInstance$1;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$2 = $p.GetInstance$2;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$3 = $p.GetInstance$3;
    $p.System$Gateway$Ioc$IServiceLocator$GetAllInstances = $p.GetAllInstances;
    $p.System$Gateway$Ioc$IServiceLocator$GetAllInstances$1 = $p.GetAllInstances$1;
    $p.System$IServiceProvider$GetService = $p.GetService;
});
$d.define(System.Gateway.Ioc.ServiceLocator, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["currentProvider", System.Gateway.Ioc.ServiceLocatorProvider, 17]], [["get_Current", t.get_Current, 22, System.Gateway.Ioc.IServiceLocator], ["SetLocatorProvider", t.SetLocatorProvider, 22, 38, [["newProvider", System.Gateway.Ioc.ServiceLocatorProvider, 0]]]], null, [["Current", System.Gateway.Ioc.IServiceLocator, 0]]]; };
    $t.cctor = function() {
        $t.currentProvider = null;
    };
    $t.get_Current = function ServiceLocator_get_Current() {
        return $t().currentProvider();
    };
    $t.SetLocatorProvider = function ServiceLocator_SetLocatorProvider(newProvider) {
        $t().currentProvider = newProvider;
    };
});
System.Gateway.Ioc.ServiceLocatorProvider = $d.type("System.Gateway.Ioc.ServiceLocatorProvider", 65, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, [["Invoke", p.Invoke, 6, System.Gateway.Ioc.IServiceLocator]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
});
$d.define(System.Gateway.Ioc.ActivationException, System.Exception, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, null, [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["message", 20, 0]]], ["ctor$2", t.ctor$2, 6, [["message", 20, 0], ["innerException", 28, 1]]]]]; };
    $t.ctor = function ActivationException() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor$1 = function ActivationException(message) {
        $t.$baseType.ctor$1.call(this, message);
    };
    $t.ctor$2 = function ActivationException(message, innerException) {
        $t.$baseType.ctor$2.call(this, message, innerException);
    };
});
$d.define(System.Gateway.Ioc.ServiceLocatorImplBase, null, function($t, $p) {
    $t.$intfs = [System.Gateway.Ioc.IServiceLocator, System.IServiceProvider];
    $t.$typeInfo = function(t, p) { return [129, null, [["NewInstance", p.NewInstance, 6, 1, [["serviceType", 27, 0]]], ["NewInstance", p.NewInstance$1, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["NewInstance", p.NewInstance$2, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["NewInstance", p.NewInstance$3, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetService", p.GetService, 6, 1, [["serviceType", 27, 0]]], ["GetInstance", p.GetInstance, 6, 1, [["serviceType", 27, 0]]], ["GetInstance", p.GetInstance$1, 6, 1, [["serviceType", 27, 0], ["key", 20, 1]]], (function(TService) { return ["GetInstance", p.GetInstance$2, 6, TService, null, null, [TService]]; }).call(this, $d.typeParam("TService")), (function(TService) { return ["GetInstance", p.GetInstance$3, 6, TService, [["key", 20, 0]], null, [TService]]; }).call(this, $d.typeParam("TService")), ["GetAllInstances", p.GetAllInstances, 6, System.Collections.Generic.IEnumerable$1(System.Object, 58578), [["serviceType", 27, 0]]], (function(TService) { return ["GetAllInstances", p.GetAllInstances$1, 6, System.Collections.Generic.IEnumerable$1(TService), null, null, [TService]]; }).call(this, $d.typeParam("TService")), ["DoNewInstance", null, 4, 1, [["serviceType", 27, 0], ["key", 20, 1]]], ["DoGetInstance", null, 4, 1, [["serviceType", 27, 0], ["key", 20, 1]]], ["DoGetAllInstances", null, 4, System.Collections.Generic.IEnumerable$1(System.Object, 58578), [["serviceType", 27, 0]]]], [["ctor", t.ctor, 4]]]; };
    $t.ctor = function ServiceLocatorImplBase() {
        $t.$baseType.ctor.call(this);
    };
    $p.NewInstance = function ServiceLocatorImplBase_NewInstance(serviceType) {
        return this.NewInstance$1(serviceType, null);
    };
    $p.NewInstance$1 = function ServiceLocatorImplBase_NewInstance(serviceType, key) {
        try {
            return this.DoNewInstance(serviceType, key);
        }
        catch ($e) {
            return null;
        }
    };
    $p.NewInstance$2 = function ServiceLocatorImplBase_NewInstance(TService) {
        return this.NewInstance$1($d.typeOf(TService), null);
    };
    $p.NewInstance$3 = function ServiceLocatorImplBase_NewInstance(TService, key) {
        return this.NewInstance$1($d.typeOf(TService), key);
    };
    $p.GetService = function ServiceLocatorImplBase_GetService(serviceType) {
        return this.GetInstance$1(serviceType, null);
    };
    $p.GetInstance = function ServiceLocatorImplBase_GetInstance(serviceType) {
        return this.GetInstance$1(serviceType, null);
    };
    $p.GetInstance$1 = function ServiceLocatorImplBase_GetInstance(serviceType, key) {
        try {
            return this.DoGetInstance(serviceType, key);
        }
        catch ($e) {
            return null;
        }
    };
    $p.GetInstance$2 = function ServiceLocatorImplBase_GetInstance(TService) {
        return this.GetInstance$1($d.typeOf(TService), null);
    };
    $p.GetInstance$3 = function ServiceLocatorImplBase_GetInstance(TService, key) {
        return this.GetInstance$1($d.typeOf(TService), key);
    };
    $p.GetAllInstances = function ServiceLocatorImplBase_GetAllInstances(serviceType) {
        try {
            return this.DoGetAllInstances(serviceType);
        }
        catch ($e) {
            return null;
        }
    };
    $p.GetAllInstances$1 = function ServiceLocatorImplBase_GetAllInstances(TService) {
        var $stateMachineFunc = function() {
            var $this = this;
            var $state = 0;
            var $stateMachine = new (System.YieldIterator$1(TService).ctor)();
            var item = null;
            var item$enumerator = null;
            var $moveNext = function() {
                $top:
                while (true) {
                    switch ($state) {
                        case 0:
                            item$enumerator = this.GetAllInstances($d.typeOf(TService)).System$Collections$IEnumerable$GetEnumerator();
                            $state = 1;
                            continue $top;
                        case 1:
                            while (item$enumerator.System$Collections$IEnumerator$MoveNext()) {
                                $state = 3;
                                continue $top;
                            }
                            $state = 2;
                            continue $top;
                        case 2:
                            return false;
                        case 3:
                            item = item$enumerator.System$Collections$IEnumerator$get_Current();
                            $state = 4;
                            $stateMachine.set_Current(item);
                            return true;
                        case 4:
                            $state = 1;
                            continue $top;
                    }
                    return false;
                }
            };
            $stateMachine.System$Collections$IEnumerator$MoveNext = function() {
                return $moveNext.call($this);
            };
            $stateMachine.Clone = function() {
                return $stateMachineFunc.call($this);
            };
            return $stateMachine;
        };
        return $stateMachineFunc.call(this);
    };
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance = $p.NewInstance;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$1 = $p.NewInstance$1;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$2 = $p.NewInstance$2;
    $p.System$Gateway$Ioc$IServiceLocator$NewInstance$3 = $p.NewInstance$3;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance = $p.GetInstance;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$1 = $p.GetInstance$1;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$2 = $p.GetInstance$2;
    $p.System$Gateway$Ioc$IServiceLocator$GetInstance$3 = $p.GetInstance$3;
    $p.System$Gateway$Ioc$IServiceLocator$GetAllInstances = $p.GetAllInstances;
    $p.System$Gateway$Ioc$IServiceLocator$GetAllInstances$1 = $p.GetAllInstances$1;
    $p.System$IServiceProvider$GetService = $p.GetService;
});
$d.define(System.PreferredConstructorAttribute, System.Attribute, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, null, null, [["ctor", t.ctor, 6]], null, null, [new System.AttributeUsageAttribute.ctor(32)]]; };
    $t.ctor = function PreferredConstructorAttribute() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(System.Collections.ObjectModel.Collection$1, null, function($t, $p, T) {
    $t.$intfs = function() { return [System.Collections.Generic.IList$1(T), System.Collections.Generic.ICollection$1(T), System.Collections.Generic.IEnumerable$1(T), System.Collections.IList, System.Collections.ICollection, System.Collections.IEnumerable]; };
    $t.$typeInfo = function(t, p) { return [1, [["list", System.Collections.Generic.IList$1(T), 1], ["syncRoot", 1, 1]], [["Add", p.Add, 6, 38, [["item", T, 0]]], ["Clear", p.Clear, 6], ["ClearItems", p.ClearItems, 4], ["Contains", p.Contains, 6, 39, [["item", T, 0]]], ["CopyTo", p.CopyTo, 6, 38, [["array", $d.arrayType(T), 0], ["index", 45, 1]]], ["GetEnumerator", p.GetEnumerator, 6, System.Collections.Generic.IEnumerator$1(T)], ["IndexOf", p.IndexOf, 6, 45, [["item", T, 0]]], ["Insert", p.Insert, 6, 38, [["index", 45, 0], ["item", T, 1]]], ["InsertItem", p.InsertItem, 4, 38, [["index", 45, 0], ["item", T, 1]]], ["get_Items", p.get_Items, 4, System.Collections.Generic.IList$1(T)], ["Remove", p.Remove, 6, 39, [["item", T, 0]]], ["RemoveAt", p.RemoveAt, 6, 38, [["index", 45, 0]]], ["RemoveItem", p.RemoveItem, 4, 38, [["index", 45, 0]]], ["get_Count", p.get_Count, 6, 45], ["get_Item", p.get_Item, 6, T, [["index", 45, 0]]], ["set_Item", p.set_Item, 6, 38, [["index", 45, 0], ["value", T, 1]]], ["System.Collections.Generic.ICollection<T>.get_IsReadOnly", p.System$Collections$Generic$ICollection$1$get_IsReadOnly, 1, 39], ["SetItem", p.SetItem, 4, 38, [["index", 45, 0], ["item", T, 1]]], ["IsValidItem", t.IsValidItem, 19, 39, [["item", 1, 0]]], ["ConvertItem", t.ConvertItem, 19, T, [["item", 1, 0]]], ["CheckWritable", t.CheckWritable, 19, 38, [["list", System.Collections.Generic.IList$1(T), 0]]], ["IsSynchronized", t.IsSynchronized, 19, 39, [["list", System.Collections.Generic.IList$1(T), 0]]], ["IsFixedSize", t.IsFixedSize, 19, 39, [["list", System.Collections.Generic.IList$1(T), 0]]], ["System.Collections.ICollection.CopyTo", p.System$Collections$ICollection$CopyTo, 1, 38, [["array", 23, 0], ["index", 45, 1]]], ["System.Collections.IEnumerable.GetEnumerator", p.System$Collections$IEnumerable$GetEnumerator, 1, System.Collections.IEnumerator], ["System.Collections.IList.Add", p.System$Collections$IList$Add, 1, 45, [["value", 1, 0]]], ["System.Collections.IList.Contains", p.System$Collections$IList$Contains, 1, 39, [["value", 1, 0]]], ["System.Collections.IList.IndexOf", p.System$Collections$IList$IndexOf, 1, 45, [["value", 1, 0]]], ["System.Collections.IList.Insert", p.System$Collections$IList$Insert, 1, 38, [["index", 45, 0], ["value", 1, 1]]], ["System.Collections.IList.Remove", p.System$Collections$IList$Remove, 1, 38, [["value", 1, 0]]], ["System.Collections.ICollection.get_IsSynchronized", p.System$Collections$ICollection$get_IsSynchronized, 1, 39], ["System.Collections.ICollection.get_SyncRoot", p.System$Collections$ICollection$get_SyncRoot, 1, 1], ["System.Collections.IList.get_IsFixedSize", p.System$Collections$IList$get_IsFixedSize, 1, 39], ["System.Collections.IList.get_IsReadOnly", p.System$Collections$IList$get_IsReadOnly, 1, 39], ["System.Collections.IList.get_Item", p.System$Collections$IList$get_Item, 1, 1, [["index", 45, 0]]], ["System.Collections.IList.set_Item", p.System$Collections$IList$set_Item, 1, 38, [["index", 45, 0], ["value", 1, 1]]]], [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["list", System.Collections.Generic.IList$1(T), 0]]]], [["Items", System.Collections.Generic.IList$1(T), 9], ["Count", 45, 13], ["this[]", T, 14, 15, [["index", 45, 0]]], ["System.Collections.Generic.ICollection<T>.IsReadOnly", 39, 16], ["System.Collections.ICollection.IsSynchronized", 39, 30], ["System.Collections.ICollection.SyncRoot", 1, 31], ["System.Collections.IList.IsFixedSize", 39, 32], ["System.Collections.IList.IsReadOnly", 39, 33], ["System.Collections.IList.this[]", 1, 34, 35, [["index", 45, 0]]]]]; };
    $t.$ator = function() {
        this.list = null;
        this.syncRoot = null;
    };
    $t.ctor = function Collection$1() {
        $t.$baseType.ctor.call(this);
        var l = new (System.Collections.Generic.List$1(T).ctor)();
        var l2 = $d.as(l, System.Collections.IList);
        this.syncRoot = l2.System$Collections$ICollection$get_SyncRoot();
        this.list = l;
    };
    $t.ctor$1 = function Collection$1(list) {
        $t.$baseType.ctor.call(this);
        if (list == null)
            throw new System.ArgumentNullException.ctor$1("list");
        this.list = list;
        var l = $d.as(list, System.Collections.ICollection);
        this.syncRoot = (l != null) ? l.System$Collections$ICollection$get_SyncRoot() : new System.Object.ctor();
    };
    $p.Add = function Collection$1_Add(item) {
        var idx = this.list.System$Collections$Generic$ICollection$1$get_Count();
        this.InsertItem(idx, item);
    };
    $p.Clear = function Collection$1_Clear() {
        this.ClearItems();
    };
    $p.ClearItems = function Collection$1_ClearItems() {
        this.list.System$Collections$Generic$ICollection$1$Clear();
    };
    $p.Contains = function Collection$1_Contains(item) {
        return this.list.System$Collections$Generic$ICollection$1$Contains(item);
    };
    $p.CopyTo = function Collection$1_CopyTo(array, index) {
        this.list.System$Collections$Generic$ICollection$1$CopyTo(array, index);
    };
    $p.GetEnumerator = function Collection$1_GetEnumerator() {
        return this.list.System$Collections$Generic$IEnumerable$1$GetEnumerator();
    };
    $p.IndexOf = function Collection$1_IndexOf(item) {
        return this.list.System$Collections$Generic$IList$1$IndexOf(item);
    };
    $p.Insert = function Collection$1_Insert(index, item) {
        this.InsertItem(index, item);
    };
    $p.InsertItem = function Collection$1_InsertItem(index, item) {
        this.list.System$Collections$Generic$IList$1$Insert(index, item);
    };
    $p.get_Items = function Collection$1_get_Items() {
        return this.list;
    };
    $p.Remove = function Collection$1_Remove(item) {
        var idx = this.IndexOf(item);
        if (idx == -1)
            return false;
        this.RemoveItem(idx);
        return true;
    };
    $p.RemoveAt = function Collection$1_RemoveAt(index) {
        this.RemoveItem(index);
    };
    $p.RemoveItem = function Collection$1_RemoveItem(index) {
        this.list.System$Collections$Generic$IList$1$RemoveAt(index);
    };
    $p.get_Count = function Collection$1_get_Count() {
        return this.list.System$Collections$Generic$ICollection$1$get_Count();
    };
    $p.get_Item = function Collection$1_get_Item(index) {
        return this.list.System$Collections$Generic$IList$1$get_Item(index);
    };
    $p.set_Item = function Collection$1_set_Item(index, value) {
        this.SetItem(index, value);
    };
    $p.System$Collections$Generic$ICollection$1$get_IsReadOnly = function Collection$1_System$Collections$Generic$ICollection$1$get_IsReadOnly() {
        return this.list.System$Collections$Generic$ICollection$1$get_IsReadOnly();
    };
    $p.SetItem = function Collection$1_SetItem(index, item) {
        this.list.System$Collections$Generic$IList$1$set_Item(index, item);
    };
    $t.IsValidItem = function Collection$1_IsValidItem(item) {
        return ($d.is(item, T) || (item == null && !$d.typeOf(T).get_IsValueType()));
    };
    $t.ConvertItem = function Collection$1_ConvertItem(item) {
        if ($t.IsValidItem(item))
            return $d.cast(item, T);
        throw new System.ArgumentException.ctor$1("item");
    };
    $t.CheckWritable = function Collection$1_CheckWritable(list) {
        if (list.System$Collections$Generic$ICollection$1$get_IsReadOnly())
            throw new System.NotSupportedException.ctor();
    };
    $t.IsSynchronized = function Collection$1_IsSynchronized(list) {
        var c = $d.as(list, System.Collections.ICollection);
        return (c != null) ? c.System$Collections$ICollection$get_IsSynchronized() : false;
    };
    $t.IsFixedSize = function Collection$1_IsFixedSize(list) {
        var l = $d.as(list, System.Collections.IList);
        return (l != null) ? l.System$Collections$IList$get_IsFixedSize() : false;
    };
    $p.System$Collections$ICollection$CopyTo = function Collection$1_System_Collections_ICollection_CopyTo(array, index) {
        $d.cast(this.list, System.Collections.ICollection).System$Collections$ICollection$CopyTo(array, 
            index);
    };
    $p.System$Collections$IEnumerable$GetEnumerator = function Collection$1_System_Collections_IEnumerable_GetEnumerator() {
        return $d.cast(this.list.System$Collections$Generic$IEnumerable$1$GetEnumerator(), System.Collections.IEnumerator);
    };
    $p.System$Collections$IList$Add = function Collection$1_System_Collections_IList_Add(value) {
        var idx = this.list.System$Collections$Generic$ICollection$1$get_Count();
        this.InsertItem(idx, $t.ConvertItem(value));
        return idx;
    };
    $p.System$Collections$IList$Contains = function Collection$1_System_Collections_IList_Contains(value) {
        if ($t.IsValidItem(value))
            return this.list.System$Collections$Generic$ICollection$1$Contains($d.cast(value, T));
        return false;
    };
    $p.System$Collections$IList$IndexOf = function Collection$1_System_Collections_IList_IndexOf(value) {
        if ($t.IsValidItem(value))
            return this.list.System$Collections$Generic$IList$1$IndexOf($d.cast(value, T));
        return -1;
    };
    $p.System$Collections$IList$Insert = function Collection$1_System_Collections_IList_Insert(index, value) {
        this.InsertItem(index, $t.ConvertItem(value));
    };
    $p.System$Collections$IList$Remove = function Collection$1_System_Collections_IList_Remove(value) {
        $t.CheckWritable(this.list);
        var idx = this.IndexOf($t.ConvertItem(value));
        this.RemoveItem(idx);
    };
    $p.System$Collections$ICollection$get_IsSynchronized = function Collection$1_System$Collections$ICollection$get_IsSynchronized() {
        return $t.IsSynchronized(this.list);
    };
    $p.System$Collections$ICollection$get_SyncRoot = function Collection$1_System$Collections$ICollection$get_SyncRoot() {
        return this.syncRoot;
    };
    $p.System$Collections$IList$get_IsFixedSize = function Collection$1_System$Collections$IList$get_IsFixedSize() {
        return $t.IsFixedSize(this.list);
    };
    $p.System$Collections$IList$get_IsReadOnly = function Collection$1_System$Collections$IList$get_IsReadOnly() {
        return this.list.System$Collections$Generic$ICollection$1$get_IsReadOnly();
    };
    $p.System$Collections$IList$get_Item = function Collection$1_System$Collections$IList$get_Item(index) {
        return this.list.System$Collections$Generic$IList$1$get_Item(index);
    };
    $p.System$Collections$IList$set_Item = function Collection$1_System$Collections$IList$set_Item(index, value) {
        this.SetItem(index, $t.ConvertItem(value));
    };
    $p.System$Collections$Generic$IList$1$get_Item = $p.get_Item;
    $p.System$Collections$Generic$IList$1$set_Item = $p.set_Item;
    $p.System$Collections$Generic$IList$1$IndexOf = $p.IndexOf;
    $p.System$Collections$Generic$IList$1$Insert = $p.Insert;
    $p.System$Collections$Generic$IList$1$RemoveAt = $p.RemoveAt;
    $p.System$Collections$Generic$ICollection$1$get_Count = $p.get_Count;
    $p.System$Collections$Generic$ICollection$1$Add = $p.Add;
    $p.System$Collections$Generic$ICollection$1$Clear = $p.Clear;
    $p.System$Collections$Generic$ICollection$1$Contains = $p.Contains;
    $p.System$Collections$Generic$ICollection$1$CopyTo = $p.CopyTo;
    $p.System$Collections$Generic$ICollection$1$Remove = $p.Remove;
    $p.System$Collections$Generic$IEnumerable$1$GetEnumerator = $p.GetEnumerator;
    $p.System$Collections$IList$Clear = $p.Clear;
    $p.System$Collections$IList$RemoveAt = $p.RemoveAt;
    $p.System$Collections$ICollection$get_Count = $p.get_Count;
}, ["T"]);
$d.define(System.Collections.ObjectModel.ObservableObject, null, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged];
    $t.$typeInfo = function(t, p) { return [129, null, [["add_PropertyChanged", p.add_PropertyChanged, 6, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["remove_PropertyChanged", p.remove_PropertyChanged, 6, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["NotifyPropertyChanged", p.NotifyPropertyChanged, 4, 38, [["propertyName", 20, 0, 4096, null]]], ["OnPropertyChanged", p.OnPropertyChanged, 4, 38, [["e", System.ComponentModel.PropertyChangedEventArgs, 0]]], (function(T) { return ["SetProperty", p.SetProperty, 4, 39, [["storage", T, 0], ["value", T, 1], ["propertyName", 20, 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T"))], [["ctor", t.ctor, 4]], null, [["PropertyChanged", System.ComponentModel.PropertyChangedEventHandler, 0, 1]]]; };
    $t.$ator = function() {
        this.PropertyChanged = null;
    };
    $t.ctor = function ObservableObject() {
        $t.$baseType.ctor.call(this);
    };
    $p.add_PropertyChanged = function ObservableObject_add_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Combine(this.PropertyChanged, value);
    };
    $p.remove_PropertyChanged = function ObservableObject_remove_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Remove(this.PropertyChanged, value);
    };
    $p.NotifyPropertyChanged = function ObservableObject_NotifyPropertyChanged(propertyName) {
        this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs.ctor(propertyName));
    };
    $p.OnPropertyChanged = function ObservableObject_OnPropertyChanged(e) {
        var eventHandler = this.PropertyChanged;
        if (eventHandler != null) {
            eventHandler(this, e);
        }
    };
    $p.SetProperty = function ObservableObject_SetProperty(T, storage, value, propertyName) {
        if (System.Collections.Generic.EqualityComparer$1(T).get_Default().Equals$1(storage.value, value)) {
            return false;
        }
        storage.value = value;
        this.NotifyPropertyChanged(propertyName);
        return true;
    };
    $p.System$ComponentModel$INotifyPropertyChanged$add_PropertyChanged = $p.add_PropertyChanged;
    $p.System$ComponentModel$INotifyPropertyChanged$remove_PropertyChanged = $p.remove_PropertyChanged;
});
$d.define(System.Collections.ObjectModel.ObservableCollection$1, System.Collections.ObjectModel.Collection$1, function($t, $p, T) {
    $t.$intfs = function() { return [System.Collections.Generic.IList$1(T), System.Collections.Generic.ICollection$1(T), System.Collections.Generic.IEnumerable$1(T), System.Collections.IList, System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged]; };
    $t.$typeInfo = function(t, p) { return [1, [["CountString", 20, 81, "Count"], ["IndexerName", 20, 81, "Item[]"], ["_monitor", System.Collections.ObjectModel.ObservableCollection$1.SimpleMonitor(T), 1]], [["CopyFrom", p.CopyFrom, 1, 38, [["collection", System.Collections.Generic.IEnumerable$1(T), 0]]], ["Move", p.Move, 6, 38, [["oldIndex", 45, 0], ["newIndex", 45, 1]]], ["System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged", p.System$ComponentModel$INotifyPropertyChanged$add_PropertyChanged, 1, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged", p.System$ComponentModel$INotifyPropertyChanged$remove_PropertyChanged, 1, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["add_CollectionChanged", p.add_CollectionChanged, 6, 38, [["value", System.Collections.Specialized.NotifyCollectionChangedEventHandler, 0]]], ["remove_CollectionChanged", p.remove_CollectionChanged, 6, 38, [["value", System.Collections.Specialized.NotifyCollectionChangedEventHandler, 0]]], ["ClearItems", p.ClearItems, 4], ["RemoveItem", p.RemoveItem, 4, 38, [["index", 45, 0]]], ["InsertItem", p.InsertItem, 4, 38, [["index", 45, 0], ["item", T, 1]]], ["SetItem", p.SetItem, 4, 38, [["index", 45, 0], ["item", T, 1]]], ["MoveItem", p.MoveItem, 4, 38, [["oldIndex", 45, 0], ["newIndex", 45, 1]]], ["OnPropertyChanged", p.OnPropertyChanged, 4, 38, [["e", System.ComponentModel.PropertyChangedEventArgs, 0]]], ["add_PropertyChanged", p.add_PropertyChanged, 4, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["remove_PropertyChanged", p.remove_PropertyChanged, 4, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["OnCollectionChanged", p.OnCollectionChanged, 4, 38, [["e", System.Collections.Specialized.NotifyCollectionChangedEventArgs, 0]]], ["BlockReentrancy", p.BlockReentrancy, 4, System.IDisposable], ["CheckReentrancy", p.CheckReentrancy, 4], ["OnPropertyChanged", p.OnPropertyChanged$1, 1, 38, [["propertyName", 20, 0]]], ["OnCollectionChanged", p.OnCollectionChanged$1, 1, 38, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0], ["item", 1, 1], ["index", 45, 2]]], ["OnCollectionChanged", p.OnCollectionChanged$2, 1, 38, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0], ["item", 1, 1], ["index", 45, 2], ["oldIndex", 45, 3]]], ["OnCollectionChanged", p.OnCollectionChanged$3, 1, 38, [["action", System.Collections.Specialized.NotifyCollectionChangedAction, 0], ["oldItem", 1, 1], ["newItem", 1, 2], ["index", 45, 3]]], ["OnCollectionReset", p.OnCollectionReset, 1]], [["ctor", t.ctor, 6], ["ctor$2", t.ctor$2, 6, [["list", System.Collections.Generic.List$1(T), 0]]], ["ctor$1", t.ctor$1, 6, [["collection", System.Collections.Generic.IEnumerable$1(T), 0]]]], null, [["System.ComponentModel.INotifyPropertyChanged.PropertyChanged", System.ComponentModel.PropertyChangedEventHandler, 2, 3], ["CollectionChanged", System.Collections.Specialized.NotifyCollectionChangedEventHandler, 4, 5], ["PropertyChanged", System.ComponentModel.PropertyChangedEventHandler, 12, 13]]]; };
    $t.cctor = function() {
        $t.CountString = "Count";
        $t.IndexerName = "Item[]";
    };
    $t.$ator = function() {
        this._monitor = new (System.Collections.ObjectModel.ObservableCollection$1.SimpleMonitor(T).ctor)();
        this.CollectionChanged = null;
        this.PropertyChanged = null;
    };
    $t.ctor = function ObservableCollection$1() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor$2 = function ObservableCollection$1(list) {
        $t.$baseType.ctor$1.call(this, (list != null) ? new (System.Collections.Generic.List$1(T).ctor$2)(list.get_Count()) : list);
        this.CopyFrom(list);
    };
    $t.ctor$1 = function ObservableCollection$1(collection) {
        $t.$baseType.ctor.call(this);
        if (collection == null)
            throw new System.ArgumentNullException.ctor$1("collection");
        this.CopyFrom(collection);
    };
    $p.CopyFrom = function ObservableCollection$1_CopyFrom(collection) {
        var items = this.get_Items();
        if (collection != null && items != null) {
            var enumerator = collection.System$Collections$Generic$IEnumerable$1$GetEnumerator();
            try {
                while (enumerator.System$Collections$IEnumerator$MoveNext()) {
                    items.System$Collections$Generic$ICollection$1$Add(enumerator.System$Collections$Generic$IEnumerator$1$get_Current());
                }
            }
            finally {
                if (enumerator) enumerator.System$IDisposable$Dispose();
            }
        }
    };
    $p.Move = function ObservableCollection$1_Move(oldIndex, newIndex) {
        this.MoveItem(oldIndex, newIndex);
    };
    $p.System$ComponentModel$INotifyPropertyChanged$add_PropertyChanged = function ObservableCollection$1_System$ComponentModel$INotifyPropertyChanged$add_PropertyChanged(value) {
        this.add_PropertyChanged(value);
    };
    $p.System$ComponentModel$INotifyPropertyChanged$remove_PropertyChanged = function ObservableCollection$1_System$ComponentModel$INotifyPropertyChanged$remove_PropertyChanged(value) {
        this.remove_PropertyChanged(value);
    };
    $p.add_CollectionChanged = function ObservableCollection$1_add_CollectionChanged(value) {
        this.CollectionChanged = System.Delegate.Combine(this.CollectionChanged, value);
    };
    $p.remove_CollectionChanged = function ObservableCollection$1_remove_CollectionChanged(value) {
        this.CollectionChanged = System.Delegate.Remove(this.CollectionChanged, value);
    };
    $p.ClearItems = function ObservableCollection$1_ClearItems() {
        this.CheckReentrancy();
        $t.$baseType.prototype.ClearItems.call(this);
        this.OnPropertyChanged$1($t.CountString);
        this.OnPropertyChanged$1($t.IndexerName);
        this.OnCollectionReset();
    };
    $p.RemoveItem = function ObservableCollection$1_RemoveItem(index) {
        this.CheckReentrancy();
        var removedItem = this.get_Item(index);
        $t.$baseType.prototype.RemoveItem.call(this, index);
        this.OnPropertyChanged$1($t.CountString);
        this.OnPropertyChanged$1($t.IndexerName);
        this.OnCollectionChanged$1(1, removedItem, index);
    };
    $p.InsertItem = function ObservableCollection$1_InsertItem(index, item) {
        this.CheckReentrancy();
        $t.$baseType.prototype.InsertItem.call(this, index, item);
        this.OnPropertyChanged$1($t.CountString);
        this.OnPropertyChanged$1($t.IndexerName);
        this.OnCollectionChanged$1(0, item, index);
    };
    $p.SetItem = function ObservableCollection$1_SetItem(index, item) {
        this.CheckReentrancy();
        var originalItem = this.get_Item(index);
        $t.$baseType.prototype.SetItem.call(this, index, item);
        this.OnPropertyChanged$1($t.IndexerName);
        this.OnCollectionChanged$3(2, originalItem, item, index);
    };
    $p.MoveItem = function ObservableCollection$1_MoveItem(oldIndex, newIndex) {
        this.CheckReentrancy();
        var removedItem = this.get_Item(oldIndex);
        $t.$baseType.prototype.RemoveItem.call(this, oldIndex);
        $t.$baseType.prototype.InsertItem.call(this, newIndex, removedItem);
        this.OnPropertyChanged$1($t.IndexerName);
        this.OnCollectionChanged$2(3, removedItem, newIndex, oldIndex);
    };
    $p.OnPropertyChanged = function ObservableCollection$1_OnPropertyChanged(e) {
        if (this.PropertyChanged != null) {
            this.PropertyChanged(this, e);
        }
    };
    $p.add_PropertyChanged = function ObservableCollection$1_add_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Combine(this.PropertyChanged, value);
    };
    $p.remove_PropertyChanged = function ObservableCollection$1_remove_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Remove(this.PropertyChanged, value);
    };
    $p.OnCollectionChanged = function ObservableCollection$1_OnCollectionChanged(e) {
        if (this.CollectionChanged != null) {
            var $d = this.BlockReentrancy();
            try {
                this.CollectionChanged(this, e);
            }
            finally {
                if ($d) $d.System$IDisposable$Dispose();
            }
        }
    };
    $p.BlockReentrancy = function ObservableCollection$1_BlockReentrancy() {
        this._monitor.Enter();
        return this._monitor;
    };
    $p.CheckReentrancy = function ObservableCollection$1_CheckReentrancy() {
        if (this._monitor.get_Busy()) {
            if ((this.CollectionChanged != null) && (this.CollectionChanged.GetInvocationList().length > 1))
                throw new System.InvalidOperationException.ctor$1("ObservableCollection Reentrancy Not Allowed");
        }
    };
    $p.OnPropertyChanged$1 = function ObservableCollection$1_OnPropertyChanged(propertyName) {
        this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs.ctor(propertyName));
    };
    $p.OnCollectionChanged$1 = function ObservableCollection$1_OnCollectionChanged(action, item, index) {
        this.OnCollectionChanged(new System.Collections.Specialized.NotifyCollectionChangedEventArgs.ctor$1(action, 
            item, index));
    };
    $p.OnCollectionChanged$2 = function ObservableCollection$1_OnCollectionChanged(action, item, index, oldIndex) {
        this.OnCollectionChanged(new System.Collections.Specialized.NotifyCollectionChangedEventArgs.ctor$2(action, 
            item, index, oldIndex));
    };
    $p.OnCollectionChanged$3 = function ObservableCollection$1_OnCollectionChanged(action, oldItem, newItem, index) {
        this.OnCollectionChanged(new System.Collections.Specialized.NotifyCollectionChangedEventArgs.ctor$2(action, 
            newItem, oldItem, index));
    };
    $p.OnCollectionReset = function ObservableCollection$1_OnCollectionReset() {
        this.OnCollectionChanged(new System.Collections.Specialized.NotifyCollectionChangedEventArgs.ctor(4));
    };
    $p.System$Collections$Specialized$INotifyCollectionChanged$add_CollectionChanged = $p.add_CollectionChanged;
    $p.System$Collections$Specialized$INotifyCollectionChanged$remove_CollectionChanged = $p.remove_CollectionChanged;
}, ["T"]);
$d.define(System.Collections.ObjectModel.ObservableArray$1, System.Collections.ObjectModel.ObservableCollection$1, function($t, $p, T) {
    $t.$intfs = function() { return [System.Collections.Generic.IList$1(T), System.Collections.Generic.ICollection$1(T), System.Collections.Generic.IEnumerable$1(T), System.Collections.IList, System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged]; };
    $t.$typeInfo = function(t, p) { return [1, null, [["get_array", p.get_array, 6, $d.arrayType(T)]], [["ctor", t.ctor, 6], ["ctor$2", t.ctor$2, 6, [["list", System.Collections.Generic.List$1(T), 0]]], ["ctor$1", t.ctor$1, 6, [["collection", System.Collections.Generic.IEnumerable$1(T), 0]]]], [["array", $d.arrayType(T), 0]]]; };
    $t.$ator = function() {
        Object.defineProperty(this, "array", { get: this.get_array });
    };
    $t.ctor = function ObservableArray$1() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor$2 = function ObservableArray$1(list) {
        $t.$baseType.ctor$2.call(this, list);
    };
    $t.ctor$1 = function ObservableArray$1(collection) {
        $t.$baseType.ctor$1.call(this, collection);
    };
    $p.get_array = function ObservableArray$1_get_array() {
        return System.Linq.Enumerable.ToArray(T, this.get_Items());
    };
}, ["T"]);
$d.define(System.Collections.ObjectModel.ObservableCollection$1.SimpleMonitor, null, function($t, $p, T) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [3, [["_busyCount", 45, 1]], [["Enter", p.Enter, 6], ["Dispose", p.Dispose, 6], ["get_Busy", p.get_Busy, 6, 39]], [["ctor", t.ctor, 6]], [["Busy", 39, 2]]]; };
    $t.$ator = function() {
        this._busyCount = 0;
    };
    $t.ctor = function SimpleMonitor() {
        $t.$baseType.ctor.call(this);
    };
    $p.Enter = function SimpleMonitor_Enter() {
        ++this._busyCount;
    };
    $p.Dispose = function SimpleMonitor_Dispose() {
        --this._busyCount;
    };
    $p.get_Busy = function SimpleMonitor_get_Busy() {
        return this._busyCount > 0;
    };
    $p.System$IDisposable$Dispose = $p.Dispose;
}, ["T"]);
$d.define(System.Gateway.Mvvm.Model, System.Collections.ObjectModel.ObservableObject, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [129, null, [["Dispose", p.Dispose, 6], ["OnDispose", p.OnDispose, 4]], [["ctor", t.ctor, 4]]]; };
    $t.ctor = function Model() {
        $t.$baseType.ctor.call(this);
    };
    $p.Dispose = function Model_Dispose() {
        this.OnDispose();
    };
    $p.OnDispose = function Model_OnDispose() {};
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.Gateway.Mvvm.ViewModel, System.Gateway.Mvvm.Model, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [129, [["_isBusy", 39, 1]], [["get_IsBusy", p.get_IsBusy, 6, 39], ["set_IsBusy", p.set_IsBusy, 4, 38, [["value", 39, 0]]]], [["ctor", t.ctor, 4]], [["IsBusy", 39, 0, 1]]]; };
    $t.$ator = function() {
        this._isBusy = false;
    };
    $t.ctor = function ViewModel() {
        $t.$baseType.ctor.call(this);
    };
    $p.get_IsBusy = function ViewModel_get_IsBusy() {
        return this._isBusy;
    };
    $p.set_IsBusy = function ViewModel_set_IsBusy(value) {
        (function() {
            var $ref = { value: this._isBusy };
            var $result$ = this.SetProperty(Boolean, $ref, value, "IsBusy");
            this._isBusy = $ref.value;
            return $result$;
        }).call(this);
        return value;
    };
});
$d.define(System.Gateway.Mvvm.RelayCommand, null, function($t, $p) {
    $t.$intfs = [System.Windows.Input.ICommand];
    $t.$typeInfo = function(t, p) { return [1, [["execute", System.Action, 33], ["canExecute", System.Func$1(Boolean, 51240), 33]], [["add_CanExecuteChanged", p.add_CanExecuteChanged, 6, 38, [["value", System.EventHandler, 0]]], ["remove_CanExecuteChanged", p.remove_CanExecuteChanged, 6, 38, [["value", System.EventHandler, 0]]], ["RaiseCanExecuteChanged", p.RaiseCanExecuteChanged, 6], ["CanExecute", p.CanExecute, 6, 39, [["parameter", 1, 0]]], ["Execute", p.Execute, 6, 38, [["parameter", 1, 0]]]], [["ctor$1", t.ctor$1, 6, [["execute", System.Action, 0], ["canExecute", System.Func$1(Boolean, 51240), 1]]], ["ctor", t.ctor, 6, [["execute", System.Action, 0]]]], null, [["CanExecuteChanged", System.EventHandler, 0, 1]]]; };
    $t.$ator = function() {
        this.execute = null;
        this.canExecute = null;
        this.CanExecuteChanged = null;
    };
    $t.ctor$1 = function RelayCommand(execute, canExecute) {
        $t.$baseType.ctor.call(this);
        if (execute == null) {
            throw new System.ArgumentNullException.ctor$1("execute");
        }
        this.execute = execute;
        if (canExecute != null) {
            this.canExecute = canExecute;
        }
    };
    $t.ctor = function RelayCommand(execute) {
        $t.ctor$1.call(this, execute, null);
    };
    $p.add_CanExecuteChanged = function RelayCommand_add_CanExecuteChanged(value) {
        this.CanExecuteChanged = System.Delegate.Combine(this.CanExecuteChanged, value);
    };
    $p.remove_CanExecuteChanged = function RelayCommand_remove_CanExecuteChanged(value) {
        this.CanExecuteChanged = System.Delegate.Remove(this.CanExecuteChanged, value);
    };
    $p.RaiseCanExecuteChanged = function RelayCommand_RaiseCanExecuteChanged() {
        var handler = this.CanExecuteChanged;
        if (handler != null) {
            handler(this, System.EventArgs().Empty);
        }
    };
    $p.CanExecute = function RelayCommand_CanExecute(parameter) {
        return this.canExecute == null || this.canExecute();
    };
    $p.Execute = function RelayCommand_Execute(parameter) {
        if (this.CanExecute(parameter)) {
            if (this.execute != null) {
                this.execute();
            }
        }
    };
    $p.System$Windows$Input$ICommand$add_CanExecuteChanged = $p.add_CanExecuteChanged;
    $p.System$Windows$Input$ICommand$remove_CanExecuteChanged = $p.remove_CanExecuteChanged;
    $p.System$Windows$Input$ICommand$CanExecute = $p.CanExecute;
    $p.System$Windows$Input$ICommand$Execute = $p.Execute;
});
$d.define(System.Gateway.Mvvm.RelayCommand$1, null, function($t, $p, T) {
    $t.$intfs = [System.Windows.Input.ICommand];
    $t.$typeInfo = function(t, p) { return [1, [["execute", System.Action$1(T), 33], ["canExecute", System.Predicate$1(T), 33]], [["add_CanExecuteChanged", p.add_CanExecuteChanged, 6, 38, [["value", System.EventHandler, 0]]], ["remove_CanExecuteChanged", p.remove_CanExecuteChanged, 6, 38, [["value", System.EventHandler, 0]]], ["RaiseCanExecuteChanged", p.RaiseCanExecuteChanged, 6], ["CanExecute", p.CanExecute, 6, 39, [["parameter", 1, 0]]], ["Execute", p.Execute, 6, 38, [["parameter", 1, 0]]]], [["ctor", t.ctor, 6, [["execute", System.Action$1(T), 0]]], ["ctor$1", t.ctor$1, 6, [["execute", System.Action$1(T), 0], ["canExecute", System.Predicate$1(T), 1]]]], null, [["CanExecuteChanged", System.EventHandler, 0, 1]]]; };
    $t.$ator = function() {
        this.execute = null;
        this.canExecute = null;
        this.CanExecuteChanged = null;
    };
    $t.ctor = function RelayCommand$1(execute) {
        $t.ctor$1.call(this, execute, null);
    };
    $t.ctor$1 = function RelayCommand$1(execute, canExecute) {
        $t.$baseType.ctor.call(this);
        if (execute == null) {
            throw new System.ArgumentNullException.ctor$1("execute");
        }
        this.execute = execute;
        if (canExecute != null) {
            this.canExecute = canExecute;
        }
    };
    $p.add_CanExecuteChanged = function RelayCommand$1_add_CanExecuteChanged(value) {
        this.CanExecuteChanged = System.Delegate.Combine(this.CanExecuteChanged, value);
    };
    $p.remove_CanExecuteChanged = function RelayCommand$1_remove_CanExecuteChanged(value) {
        this.CanExecuteChanged = System.Delegate.Remove(this.CanExecuteChanged, value);
    };
    $p.RaiseCanExecuteChanged = function RelayCommand$1_RaiseCanExecuteChanged() {
        var handler = this.CanExecuteChanged;
        if (handler != null) {
            handler(this, System.EventArgs().Empty);
        }
    };
    $p.CanExecute = function RelayCommand$1_CanExecute(parameter) {
        return this.canExecute == null || this.canExecute($d.cast(parameter, T));
    };
    $p.Execute = function RelayCommand$1_Execute(parameter) {
        if (this.CanExecute(parameter)) {
            if (this.execute != null) {
                this.execute($d.cast(parameter, T));
            }
        }
    };
    $p.System$Windows$Input$ICommand$add_CanExecuteChanged = $p.add_CanExecuteChanged;
    $p.System$Windows$Input$ICommand$remove_CanExecuteChanged = $p.remove_CanExecuteChanged;
    $p.System$Windows$Input$ICommand$CanExecute = $p.CanExecute;
    $p.System$Windows$Input$ICommand$Execute = $p.Execute;
}, ["T"]);
$d.define(System.App, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["GetKeypathObject", System.Func$3(System.Object, String, System.Object, 43536), 19], ["IsReady", 39, 17], ["_iocLock", 1, 49], ["_ioc", System.Gateway.Ioc.MicroIoc, 17]], [[".cctor", t.cctor, 17], ["Bootstrap", t.Bootstrap, 22], ["InitializeGateway", t.InitializeGateway, 19], ["get_FrameWindow", t.get_FrameWindow, 22, HTMLElement], ["set_FrameWindow", t.set_FrameWindow, 17, 38, [["value", HTMLElement, 0]]], ["get_IsReady", t.get_IsReady, 22, 39], ["set_IsReady", t.set_IsReady, 17, 38, [["value", 39, 0]]], ["get_Ioc", t.get_Ioc, 22, System.Gateway.Ioc.MicroIoc]], null, [["FrameWindow", HTMLElement, 3, 4], ["IsReady", 39, 5, 6], ["Ioc", System.Gateway.Ioc.MicroIoc, 7]]]; };
    $t.cctor = function() {
        $t.GetKeypathObject = null;
        $t._iocLock = new System.Object.ctor();
        $t._ioc = null;
        $t.FrameWindow = null;
        $t.IsReady = false;
        $t.set_IsReady(false);
    };
    $t.Bootstrap = function App_Bootstrap() {
        if (!$t().get_IsReady()) {
            $t().set_IsReady(true);
            System.Console.WriteLine$10("AjaxGateway.Net - Html Gateway Services");
            System.Gateway.Runtime().get_Ioc().Register$6(System.IConsoleService, System.Gateway.NativeConsoleService);
            System.Gateway.Runtime().get_Ioc().Register$6(System.Gateway.IRemoteService, System.Gateway.NativeRemoteService);
            System.Gateway.Runtime().get_Ioc().Register$6(System.IAjaxService, System.Gateway.NativeAjaxService);
            var wnd_onload = window.onload;
            window.onload = $d.delegate(function(evt) {
                var result = null;
                if (wnd_onload != null) {
                    result = wnd_onload(evt);
                }
                $t.InitializeGateway();
                return result;
            }, this);
        }
    };
    $t.InitializeGateway = function App_InitializeGateway() {
        var gateway = $d.typeOf(System.App).get_Assembly();
        var wnd = window;
        var templates = gateway.GetManifestResourceString("axcorlib.templates.min.js", true);
        if (!String.IsNullOrEmpty(templates)) {
            DuoCode.Dom.WindowExtensions.eval(window, templates);
            System.Console.WriteLine$10("Registered internal template library...");
        }
        else {
            System.Console.WriteLine$10("===> Warning: Failed to load internal template engine script.");
        }
        System.App().GetKeypathObject = function(obj, keypath) { return eval('obj.' + keypath); };
        if (document.head == null) {
            var header = document.createElement("head");
            if (header != null) {
                document.appendChild(header);
            }
        }
        if (!document.body.classList.contains(System.UIManager().VIEWPORT_CLASS)) {
            document.body.classList.add(System.UIManager().VIEWPORT_CLASS);
        }
        var root_viewport = document.getElementById(System.UIManager().ROOT_CONTAINER);
        if (root_viewport != null) {
            if (!root_viewport.classList.contains(System.UIManager().VIEWPORT_CLASS)) {
                root_viewport.classList.add(System.UIManager().VIEWPORT_CLASS);
            }
            $t().set_FrameWindow(document.createElement("div"));
            $t().get_FrameWindow().id = "frame";
            $t().get_FrameWindow().className = "window";
            while (document.body.firstChild != null) {
                $t().get_FrameWindow().appendChild(document.body.firstChild);
            }
            document.body.appendChild($t().get_FrameWindow());
        }
        var ready = null;
        try {
            var assemblies = System.AppDomain().get_CurrentDomain().GetAssemblies();
            if (assemblies != null) {
                for (var $i = 0, $length = assemblies.length; $i < $length; $i++) {
                    var assembly = assemblies[$i];
                    var types = null;
                    try {
                        types = assembly.GetTypes();
                    }
                    catch ($e) {
                        $e = System.Exception.Wrap($e);
                        System.Console.WriteLine$10("Warning: " + $e.get_Message());
                    }
                    if (types != null) {
                        for (var $i1 = 0, $length1 = types.length; $i1 < $length1; $i1++) {
                            var type = types[$i1];
                            var found_types = type.GetCustomAttributes$1($d.typeOf(System.ApplicationAttribute), 
                                false);
                            if (found_types != null && found_types.length > 0) {
                                var methods = null;
                                try {
                                    methods = type.GetMethods();
                                }
                                catch ($e1) {
                                    $e1 = System.Exception.Wrap($e1);
                                    System.Console.WriteLine$10("Warning: " + $e1.get_Message());
                                }
                                if (methods != null) {
                                    for (var $i2 = 0, $length2 = methods.length; $i2 < $length2; $i2++) {
                                        var mi = methods[$i2];
                                        var found_methods = mi.GetCustomAttributes$1($d.typeOf(System.ReadyAttribute), 
                                            false);
                                        if (found_methods != null && found_methods.length > 0) {
                                            ready = mi;
                                        }
                                        if (ready != null)
                                            break;
                                    }
                                }
                            }
                            if (ready != null)
                                break;
                        }
                    }
                    if (ready != null)
                        break;
                }
            }
            else {
                throw new System.Exception.ctor$1("No application domain assemblies found.");
            }
        }
        catch ($e2) {
            $e2 = System.Exception.Wrap($e2);
            System.Console.WriteLine$10("Warning: " + $e2.get_Message());
        }
        if (ready != null) {
            ready.Invoke(null, $d.array(System.Object, []));
        }
    };
    $t.get_FrameWindow = function App_get_FrameWindow() { return $t().FrameWindow; };
    $t.set_FrameWindow = function App_set_FrameWindow(value) { $t().FrameWindow = value;return value; };
    $t.get_IsReady = function App_get_IsReady() { return $t().IsReady; };
    $t.set_IsReady = function App_set_IsReady(value) { $t().IsReady = value;return value; };
    $t.get_Ioc = function App_get_Ioc() {
        if ($t()._ioc == null) {
            if ($t()._ioc == null) {
                $t()._ioc = new System.Gateway.Ioc.MicroIoc.ctor();
            }
        }
        return $t()._ioc;
    };
});
$d.define(System.Gateway.NativeConsoleService, null, function($t, $p) {
    $t.$intfs = [System.IConsoleService];
    $t.$typeInfo = function(t, p) { return [1, null, [["WriteLine", p.WriteLine, 6, 38, [["value", 20, 0]]]], [["ctor", t.ctor, 6]]]; };
    $t.ctor = function NativeConsoleService() {
        $t.$baseType.ctor.call(this);
    };
    $p.WriteLine = function NativeConsoleService_WriteLine(value) {
        System.Console.WriteLine$10(value);
    };
    $p.System$IConsoleService$WriteLine = $p.WriteLine;
});
$d.define(System.Root, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["LAG", 45, 86, 50], ["LAG_MIN", 45, 86, 25], ["LAG_MAX", 45, 86, 75], ["ui", System.UIManager, 17]], [[".cctor", t.cctor, 17], ["get_wnd", t.get_wnd, 22, System.Object], (function(T) { return ["new", t.new, 22, T, null, null, [T]]; }).call(this, $d.typeParam("T")), ["log", t.log, 22, 38, [["value", System.Object, 0]]], ["create", t.create, 22, HTMLElement, [["tag", 20, 0]]], (function(T) { return ["create", t.create$1, 22, T, [["tag", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["delay", t.delay, 22, 45, [["duration", 45, 0], ["action", System.Action, 1]]], ["repeat", t.repeat, 22, 45, [["interval", 45, 0], ["action", System.Action, 1]]], ["kill", t.kill, 22, 38, [["handle", 45, 0]]], ["wait", t.wait, 22, System.AsyncWaiter, [["expression", System.Func$1(Boolean, 51240), 0], ["success", System.Action$1(System.AsyncWaiter, 56493), 1, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["interval", 45, 3, 4096, 100], ["timeout", 45, 4, 4096, 60000]]], (function(T) { return ["require", t.require, 22, T, [["path", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T")), ["hasClass", t.hasClass, 22, 39, [["element", HTMLElement, 0], ["classname", 20, 1]]], ["addClass", t.addClass, 22, 38, [["element", HTMLElement, 0], ["classname", 20, 1]]], ["removeClass", t.removeClass, 22, 38, [["element", HTMLElement, 0], ["classname", 20, 1]]], ["toggleClass", t.toggleClass, 22, 38, [["element", HTMLElement, 0], ["classname", 20, 1]]], ["getClasses", t.getClasses, 22, 20, [["element", HTMLElement, 0]]], ["setClasses", t.setClasses, 22, 38, [["element", HTMLElement, 0], ["classes", 20, 1]]], ["jquery", t.jquery, 22, Object], ["jquery", t.jquery$6, 22, Object, [["selector", 20, 0]]], ["jquery", t.jquery$8, 22, Object, [["selector", 20, 0], ["context", Element, 1]]], ["jquery", t.jquery$9, 22, Object, [["selector", 20, 0], ["context", Object, 1]]], ["jquery", t.jquery$1, 22, Object, [["element", Element, 0]]], ["jquery", t.jquery$2, 22, Object, [["elements", $d.arrayType(Element), 0]]], ["jquery", t.jquery$5, 22, Object, [["obj", 1, 0]]], ["jquery", t.jquery$3, 22, Object, [["obj", Object, 0]]], ["jquery", t.jquery$7, 22, Object, [["html", 20, 0], ["ownerDocument", Document, 1]]], ["jquery", t.jquery$10, 22, Object, [["html", 20, 0], ["attributes", 1, 1]]], ["jquery", t.jquery$4, 22, Object, [["callback", System.Func$2(System.Object, System.Object), 0]]], (function(T) { return ["jquery", t.jquery$16, 22, T, [["selector", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$18, 22, T, [["selector", 20, 0], ["context", Element, 1]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$19, 22, T, [["selector", 20, 0], ["context", Object, 1]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$11, 22, T, [["element", Element, 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$12, 22, Object, [["elements", $d.arrayType(Element), 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$15, 22, T, [["obj", 1, 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$13, 22, T, [["obj", Object, 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$17, 22, T, [["html", 20, 0], ["ownerDocument", Document, 1]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$20, 22, T, [["html", 20, 0], ["attributes", 1, 1]], null, [T]]; }).call(this, $d.typeParam("T", Object)), (function(T) { return ["jquery", t.jquery$14, 22, T, [["callback", System.Func$2(System.Object, System.Object), 0]], null, [T]]; }).call(this, $d.typeParam("T", Object)), ["hasStyle", t.hasStyle, 22, 39, [["element", HTMLElement, 0], ["style", 20, 1]]], ["getStyles", t.getStyles, 22, 20, [["element", HTMLElement, 0]]], ["setStyles", t.setStyles, 22, 38, [["element", HTMLElement, 0], ["styles", 20, 1]]], ["append", t.append, 22, HTMLElement, [["child", HTMLElement, 0]]], ["append", t.append$1, 22, HTMLElement, [["parent", HTMLElement, 0], ["child", HTMLElement, 1]]], (function(T) { return ["append", t.append$2, 22, T, [["child", HTMLElement, 0]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), (function(T) { return ["append", t.append$3, 22, T, [["parent", HTMLElement, 0], ["child", HTMLElement, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["setContent", t.setContent, 22, 38, [["element", HTMLElement, 0], ["html", 20, 1]]], ["emptyContent", t.emptyContent, 22, 38, [["element", HTMLElement, 0]]], ["unbindElement", t.unbindElement, 22, 38, [["element", HTMLElement, 0]]], ["removeElement", t.removeElement, 22, 38, [["element", HTMLElement, 0]]], ["setData", t.setData, 22, 38, [["element", HTMLElement, 0], ["key", 20, 1], ["data", System.Object, 2]]], ["getData", t.getData, 22, System.Object, [["element", HTMLElement, 0], ["key", 20, 1]]], ["removeData", t.removeData$1, 22, 38, [["element", HTMLElement, 0], ["key", 20, 1], ["children", 39, 2, 4096, false]]], ["removeData", t.removeData$2, 22, 38, [["element", HTMLElement, 0], ["keys", 148, 1], ["children", 39, 2, 4096, false]]], ["removeData", t.removeData, 22, 38, [["element", HTMLElement, 0], ["children", 39, 1, 4096, false]]], ["has", t.has, 22, 39, [["id", 20, 0]]], ["get", t.get, 22, HTMLElement, [["id", 20, 0]]], (function(T) { return ["get", t.get$4, 22, T, [["id", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["has", t.has$1, 22, 39, [["doc", Document, 0], ["id", 20, 1]]], ["get", t.get$1, 22, HTMLElement, [["doc", Document, 0], ["id", 20, 1]]], (function(T) { return ["get", t.get$5, 22, T, [["doc", Document, 0], ["id", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["has", t.has$2, 22, 39, [["frag", DocumentFragment, 0], ["id", 20, 1]]], ["get", t.get$2, 22, HTMLElement, [["frag", DocumentFragment, 0], ["id", 20, 1]]], (function(T) { return ["get", t.get$6, 22, T, [["frag", DocumentFragment, 0], ["id", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["has", t.has$3, 22, 39, [["link", HTMLLinkElement, 0], ["id", 20, 1]]], ["get", t.get$3, 22, HTMLElement, [["link", HTMLLinkElement, 0], ["id", 20, 1]]], (function(T) { return ["get", t.get$7, 22, T, [["link", HTMLLinkElement, 0], ["id", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), (function(T) { return ["getKeypath", t.getKeypath, 22, T, [["obj", 1, 0], ["path", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T")), ["getIndexedDB", t.getIndexedDB, 22, IDBFactory], ["select", t.select, 22, HTMLElement, [["selectors", 20, 0]]], (function(T) { return ["select", t.select$5, 22, T, [["selectors", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["selectAll", t.selectAll, 22, NodeList, [["selectors", 20, 0]]], ["select", t.select$1, 22, HTMLElement, [["doc", Document, 0], ["selectors", 20, 1]]], (function(T) { return ["select", t.select$6, 22, T, [["doc", Document, 0], ["selectors", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["selectAll", t.selectAll$1, 22, NodeList, [["doc", Document, 0], ["selectors", 20, 1]]], ["select", t.select$2, 22, HTMLElement, [["frag", DocumentFragment, 0], ["selectors", 20, 1]]], (function(T) { return ["select", t.select$7, 22, T, [["frag", DocumentFragment, 0], ["selectors", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["selectAll", t.selectAll$2, 22, NodeList, [["frag", DocumentFragment, 0], ["selectors", 20, 1]]], ["select", t.select$3, 22, HTMLElement, [["parent", HTMLElement, 0], ["selectors", 20, 1]]], (function(T) { return ["select", t.select$8, 22, T, [["parent", HTMLElement, 0], ["selectors", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["selectAll", t.selectAll$3, 22, NodeList, [["parent", HTMLElement, 0], ["selectors", 20, 1]]], ["select", t.select$4, 22, HTMLElement, [["link", HTMLLinkElement, 0], ["selectors", 20, 1]]], (function(T) { return ["select", t.select$9, 22, T, [["link", HTMLLinkElement, 0], ["selectors", 20, 1]], null, [T]]; }).call(this, $d.typeParam("T", HTMLElement)), ["selectAll", t.selectAll$4, 22, NodeList, [["link", HTMLLinkElement, 0], ["selectors", 20, 1]]], ["injectContent", t.injectContent, 22, 38, [["loader", System.ContentLoader, 0], ["timeout", 45, 1, 4096, 60000], ["success", System.Action$1(System.AsyncWaiter, 56493), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null]]], ["injectContentAsync", t.injectContentAsync, 22, System.Threading.Tasks.Task$1(System.AsyncWaiter, 56493), [["loader", System.ContentLoader, 0], ["timeout", 45, 1, 4096, 60000], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]]], ["injectStyle", t.injectStyle, 22, HTMLStyleElement, [["id", 20, 0], ["content", System.Gateway.TextContent, 1], ["type", 20, 2, 4096, "text/css"]]], ["injectLink", t.injectLink, 22, 38, [["id", 20, 0], ["url", 20, 1], ["type", 20, 2, 4096, "text/css"], ["rel", 20, 3, 4096, "stylesheet"], ["success", System.Action$1(HTMLLinkElement, 63306), 4, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 5, 4096, null]]], ["injectLinkAsync", t.injectLinkAsync, 22, System.Threading.Tasks.Task$1(HTMLLinkElement, 63306), [["id", 20, 0], ["url", 20, 1], ["type", 20, 2, 4096, "text/css"], ["rel", 20, 3, 4096, "stylesheet"], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null]]], ["injectScript", t.injectScript, 22, HTMLScriptElement, [["id", 20, 0], ["content", System.Gateway.TextContent, 1], ["type", 20, 2, 4096, "text/javascript"]]], ["injectScript", t.injectScript$1, 22, 38, [["id", 20, 0], ["url", 20, 1], ["type", 20, 2, 4096, "text/javascript"], ["success", System.Action$1(HTMLScriptElement, 17075), 3, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 4, 4096, null]]], ["injectScriptAsync", t.injectScriptAsync, 22, System.Threading.Tasks.Task$1(HTMLScriptElement, 17075), [["id", 20, 0], ["url", 20, 1], ["type", 20, 2, 4096, "text/javascript"], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null]]], ["injectDocument", t.injectDocument, 22, HTMLObjectElement, [["id", 20, 0], ["content", Document, 1]]], ["injectDocument", t.injectDocument$1, 22, 38, [["id", 20, 0], ["url", 20, 1], ["success", System.Action$1(HTMLObjectElement, 38024), 2, 4096, null], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null]]], ["injectDocumentAsync", t.injectDocumentAsync, 22, System.Threading.Tasks.Task$1(HTMLObjectElement, 38024), [["id", 20, 0], ["url", 20, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]]], ["parseInlineScriptAndStyle", t.parseInlineScriptAndStyle, 22, 38, [["id_prefix", 20, 0], ["doc", Document, 1]]], ["get_ui", t.get_ui, 22, System.UIManager], ["set_ui", t.set_ui, 17, 38, [["value", System.UIManager, 0]]]], null, [["wnd", System.Object, 1], ["ui", System.UIManager, 95, 96]]]; };
    $t.cctor = function() {
        $t.LAG = 50;
        $t.LAG_MIN = 25;
        $t.LAG_MAX = 75;
        $t.ui = null;
        if (!System.App().get_IsReady()) {
            throw new System.Exception.ctor$1("Root application system is not initialized. You must call 'System.App.Bootstrap' to initialize the root application.");
        }
        System.Root().set_ui(new System.UIManager.ctor());
    };
    $t.get_wnd = function Root_get_wnd() {
        return window;
    };
    $t.new = function Root_new(T) {
        return {};
    };
    $t.log = function Root_log(value) {
        console.log(value);
    };
    $t.create = function Root_create(tag) {
        return document.createElement(tag);
    };
    $t.create$1 = function Root_create(T, tag) {
        return document.createElement(tag);
    };
    $t.delay = function Root_delay(duration, action) {
        return window.setTimeout(action, duration);
    };
    $t.repeat = function Root_repeat(interval, action) {
        return window.setInterval(action, interval);
    };
    $t.kill = function Root_kill(handle) {
        if (handle != 0) {
            window.clearInterval(handle);
        }
    };
    $t.wait = function Root_wait(expression, success, failure, interval, timeout) {
        var waiter = new System.AsyncWaiter.ctor();
        waiter.set_interval(interval);
        waiter.set_timeout(timeout);
        waiter.set_success(success);
        waiter.set_failure(failure);
        waiter.wait(expression);
        return waiter;
    };
    $t.require = function Root_require(T, path) {
        return require(path);
    };
    $t.hasClass = function Root_hasClass(element, classname) {
        var result = false;
        if (element != null) {
            result = element.classList.contains(classname);
        }
        return result;
    };
    $t.addClass = function Root_addClass(element, classname) {
        if (element != null) {
            if (!element.classList.contains(classname)) {
                element.classList.add(classname);
            }
        }
    };
    $t.removeClass = function Root_removeClass(element, classname) {
        if (element != null) {
            if (element.classList.contains(classname)) {
                element.classList.remove(classname);
            }
        }
    };
    $t.toggleClass = function Root_toggleClass(element, classname) {
        if (element != null) {
            if (element.classList.contains(classname)) {
                element.classList.remove(classname);
            }
            else {
                element.classList.add(classname);
            }
        }
    };
    $t.getClasses = function Root_getClasses(element) {
        var result = String.Empty;
        if (element != null) {
            result = element.getAttribute("class");
        }
        return result;
    };
    $t.setClasses = function Root_setClasses(element, classes) {
        if (element != null) {
            element.setAttribute("class", classes);
        }
    };
    $t.jquery = function Root_jquery() {
        return window.jQuery;
    };
    $t.jquery$6 = function Root_jquery(selector) {
        return window.jQuery(selector);
    };
    $t.jquery$8 = function Root_jquery(selector, context) {
        return window.jQuery(selector, context);
    };
    $t.jquery$9 = function Root_jquery(selector, context) {
        return window.jQuery(selector, context);
    };
    $t.jquery$1 = function Root_jquery(element) {
        return window.jQuery(element);
    };
    $t.jquery$2 = function Root_jquery(elements) {
        return window.jQuery(elements);
    };
    $t.jquery$5 = function Root_jquery(obj) {
        return window.jQuery(obj);
    };
    $t.jquery$3 = function Root_jquery(obj) {
        return window.jQuery(obj);
    };
    $t.jquery$7 = function Root_jquery(html, ownerDocument) {
        return window.jQuery(html, ownerDocument);
    };
    $t.jquery$10 = function Root_jquery(html, attributes) {
        return window.jQuery(html, attributes);
    };
    $t.jquery$4 = function Root_jquery(callback) {
        return window.jQuery(callback);
    };
    $t.jquery$16 = function Root_jquery(T, selector) {
        return window.jQuery(selector);
    };
    $t.jquery$18 = function Root_jquery(T, selector, context) {
        return window.jQuery(selector, context);
    };
    $t.jquery$19 = function Root_jquery(T, selector, context) {
        return window.jQuery(selector, context);
    };
    $t.jquery$11 = function Root_jquery(T, element) {
        return window.jQuery(element);
    };
    $t.jquery$12 = function Root_jquery(T, elements) {
        return window.jQuery(elements);
    };
    $t.jquery$15 = function Root_jquery(T, obj) {
        return window.jQuery(obj);
    };
    $t.jquery$13 = function Root_jquery(T, obj) {
        return window.jQuery(obj);
    };
    $t.jquery$17 = function Root_jquery(T, html, ownerDocument) {
        return window.jQuery(html, ownerDocument);
    };
    $t.jquery$20 = function Root_jquery(T, html, attributes) {
        return window.jQuery(html, attributes);
    };
    $t.jquery$14 = function Root_jquery(T, callback) {
        return window.jQuery(callback);
    };
    $t.hasStyle = function Root_hasStyle(element, style) {
        var result = false;
        if (element != null) {
            var styles = element.getAttribute("style");
            if (!String.IsNullOrEmpty(styles)) {
                result = (styles.toLowerCase().indexOf(style.toLowerCase()) >= 0);
            }
        }
        return result;
    };
    $t.getStyles = function Root_getStyles(element) {
        var result = String.Empty;
        if (element != null) {
            result = element.getAttribute("style");
        }
        return result;
    };
    $t.setStyles = function Root_setStyles(element, styles) {
        if (element != null) {
            element.setAttribute("style", styles);
        }
    };
    $t.append = function Root_append(child) {
        return $d.cast(document.body.appendChild(child), HTMLElement);
    };
    $t.append$1 = function Root_append(parent, child) {
        return $d.cast(parent.appendChild(child), HTMLElement);
    };
    $t.append$2 = function Root_append(T, child) {
        return $d.cast(document.body.appendChild(child), T);
    };
    $t.append$3 = function Root_append(T, parent, child) {
        return $d.cast(parent.appendChild(child), T);
    };
    $t.setContent = function Root_setContent(element, html) {
        $t.jquery$1(element).html(html);
    };
    $t.emptyContent = function Root_emptyContent(element) {
        $t.jquery$1(element).empty();
    };
    $t.unbindElement = function Root_unbindElement(element) {
        $t.jquery$1(element).find("*").addBack().off();
    };
    $t.removeElement = function Root_removeElement(element) {
        $t.jquery$1(element).remove();
    };
    $t.setData = function Root_setData(element, key, data) {
        $t.jquery$1(element).data(key, data);
    };
    $t.getData = function Root_getData(element, key) {
        return $t.jquery$1(element).data(key);
    };
    $t.removeData$1 = function Root_removeData(element, key, children) {
        var jquery_element = $t.jquery$1(element);
        jquery_element.removeData(key);
        if (children == true) {
            jquery_element.children().removeData(key);
        }
    };
    $t.removeData$2 = function Root_removeData(element, keys, children) {
        var jquery_element = $t.jquery$1(element);
        jquery_element.removeData(keys);
        if (children == true) {
            jquery_element.children().removeData(keys);
        }
    };
    $t.removeData = function Root_removeData(element, children) {
        var jquery_element = $t.jquery$1(element);
        jquery_element.removeData();
        if (children == true) {
            jquery_element.children().removeData();
        }
    };
    $t.has = function Root_has(id) {
        return (document.getElementById(id) != null);
    };
    $t.get = function Root_get(id) {
        return document.getElementById(id);
    };
    $t.get$4 = function Root_get(T, id) {
        return document.getElementById(id);
    };
    $t.has$1 = function Root_has(doc, id) {
        return (doc.getElementById(id) != null);
    };
    $t.get$1 = function Root_get(doc, id) {
        return doc.getElementById(id);
    };
    $t.get$5 = function Root_get(T, doc, id) {
        return doc.getElementById(id);
    };
    $t.has$2 = function Root_has(frag, id) {
        return ($t.get$2(frag, id) != null);
    };
    $t.get$2 = function Root_get(frag, id) {
        return frag.querySelector("#" + id);
    };
    $t.get$6 = function Root_get(T, frag, id) {
        return frag.querySelector("#" + id);
    };
    $t.has$3 = function Root_has(link, id) {
        return (link.import.getElementById(id) != null);
    };
    $t.get$3 = function Root_get(link, id) {
        return link.import.getElementById(id);
    };
    $t.get$7 = function Root_get(T, link, id) {
        return link.import.getElementById(id);
    };
    $t.getKeypath = function Root_getKeypath(T, obj, path) {
        return System.App().GetKeypathObject(obj, path);
    };
    $t.getIndexedDB = function Root_getIndexedDB() {
        var result = null;
        var wnd = window;
        if (wnd.indexedDB)
            result = indexedDB;
        else if (wnd.msIndexedDB)
            result = msIndexedDB;
        return result;
    };
    $t.select = function Root_select(selectors) {
        return $d.cast(document.querySelector(selectors), HTMLElement);
    };
    $t.select$5 = function Root_select(T, selectors) {
        return $d.cast(document.querySelector(selectors), T);
    };
    $t.selectAll = function Root_selectAll(selectors) {
        return document.querySelectorAll(selectors);
    };
    $t.select$1 = function Root_select(doc, selectors) {
        return $d.cast(doc.querySelector(selectors), HTMLElement);
    };
    $t.select$6 = function Root_select(T, doc, selectors) {
        return $d.cast(doc.querySelector(selectors), T);
    };
    $t.selectAll$1 = function Root_selectAll(doc, selectors) {
        return doc.querySelectorAll(selectors);
    };
    $t.select$2 = function Root_select(frag, selectors) {
        return $d.cast(frag.querySelector(selectors), HTMLElement);
    };
    $t.select$7 = function Root_select(T, frag, selectors) {
        return $d.cast(frag.querySelector(selectors), T);
    };
    $t.selectAll$2 = function Root_selectAll(frag, selectors) {
        return frag.querySelectorAll(selectors);
    };
    $t.select$3 = function Root_select(parent, selectors) {
        return $d.cast(parent.querySelector(selectors), HTMLElement);
    };
    $t.select$8 = function Root_select(T, parent, selectors) {
        return $d.cast(parent.querySelector(selectors), T);
    };
    $t.selectAll$3 = function Root_selectAll(parent, selectors) {
        return parent.querySelectorAll(selectors);
    };
    $t.select$4 = function Root_select(link, selectors) {
        return $d.cast(link.import.querySelector(selectors), HTMLElement);
    };
    $t.select$9 = function Root_select(T, link, selectors) {
        return $d.cast(link.import.querySelector(selectors), T);
    };
    $t.selectAll$4 = function Root_selectAll(link, selectors) {
        return link.import.querySelectorAll(selectors);
    };
    $t.injectContent = function Root_injectContent(loader, timeout, success, failure) {
        try {
            if (loader == null) {
                throw new System.ArgumentNullException.ctor$1("loader");
            }
            var count = 0, total = loader.getCount();
            if (loader.get_links() != null && loader.get_links().get_Count() > 0) {
                var $iter = loader.get_links();
                var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator.System$Collections$IEnumerator$MoveNext())
                    (function() {
                        var link = $enumerator.System$Collections$IEnumerator$get_Current();
                        count++;
                        if (loader.get_progress() != null) {
                            loader.get_progress()(new System.LoaderEvent.ctor(link.get__id(), link.get__href(), 
                                link.get__type(), count, total));
                        }
                        link.set__loading(true);
                        $t.injectLink(link.get__id(), link.get__href(), link.get__type(), link.get__rel(), 
                            $d.delegate(function(e1) {
                                link.set__loading(false);
                            }, this), $d.delegate(function(error) {
                                link.set__loading(false);
                                if (loader.get_waiter() != null) {
                                    loader.get_waiter().get_errors().Add(String.Format("Link: {0} - {1}", 
                                        $d.array(System.Object, [link.get__id(), error.get_Message()])));
                                }
                            }, this));
                    }).call(this);
            }
            if (loader.get_scripts() != null && loader.get_scripts().get_Count() > 0) {
                var $iter1 = loader.get_scripts();
                var $enumerator1 = $iter1.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator1.System$Collections$IEnumerator$MoveNext())
                    (function() {
                        var script = $enumerator1.System$Collections$IEnumerator$get_Current();
                        count++;
                        if (loader.get_progress() != null) {
                            loader.get_progress()(new System.LoaderEvent.ctor(script.get__id(), script.get__src(), 
                                script.get__type(), count, total));
                        }
                        script.set__loading(true);
                        $t.injectScript$1(script.get__id(), script.get__src(), script.get__type(), $d.delegate(function(el2) {
                            script.set__loading(false);
                        }, this), $d.delegate(function(error) {
                            script.set__loading(false);
                            if (loader.get_waiter() != null) {
                                loader.get_waiter().get_errors().Add(String.Format("Script: {0} - {1}", 
                                    $d.array(System.Object, [script.get__id(), error.get_Message()])));
                            }
                        }, this));
                    }).call(this);
            }
            if (loader.get_documents() != null && loader.get_documents().get_Count() > 0) {
                var $iter2 = loader.get_documents();
                var $enumerator2 = $iter2.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator2.System$Collections$IEnumerator$MoveNext())
                    (function() {
                        var doc = $enumerator2.System$Collections$IEnumerator$get_Current();
                        count++;
                        if (loader.get_progress() != null) {
                            loader.get_progress()(new System.LoaderEvent.ctor(doc.get__id(), doc.get__href(), 
                                "document", count, total));
                        }
                        doc.set__loading(true);
                        $t.injectDocument$1(doc.get__id(), doc.get__href(), $d.delegate(function(el3) {
                            doc.set__loading(false);
                        }, this), $d.delegate(function(error) {
                            doc.set__loading(false);
                            if (loader.get_waiter() != null) {
                                loader.get_waiter().get_errors().Add(String.Format("Document: {0} - {1}", 
                                    $d.array(System.Object, [doc.get__id(), error.get_Message()])));
                            }
                        }, this));
                    }).call(this);
            }
            if (success != null || failure != null) {
                loader.set_waiter($t.wait($d.delegate(loader.allLoaded, loader), success, failure, 100, 
                    timeout));
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (failure != null) {
                failure($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
    };
    $t.injectContentAsync = function Root_injectContentAsync(loader, timeout, exception) {
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(System.AsyncWaiter, 56493).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    console.error(error.get_Message());
                }
            }
        }, this);
        $t.injectContent(loader, timeout, success, failure);
        return tasker.get_Task();
    };
    $t.injectStyle = function Root_injectStyle(id, content, type) {
        var style_element = $t.get$4(HTMLStyleElement, id);
        if (style_element != null) {
            return style_element;
        }
        if (document.head != null) {
            style_element = $t.create$1(HTMLStyleElement, "style");
            style_element.id = id;
            style_element.type = type;
            document.head.appendChild(style_element);
            style_element.textContent = content.get_Content();
        }
        return style_element;
    };
    $t.injectLink = function Root_injectLink(id, url, type, rel, success, failure) {
        var link_element = null;
        try {
            if (String.IsNullOrEmpty(id)) {
                throw new System.ArgumentNullException.ctor$1("id");
            }
            link_element = $t.get$4(HTMLLinkElement, id);
            if (link_element != null) {
                if (success != null) {
                    success(link_element);
                }
                return;
            }
            if (document.head != null) {
                link_element = $t.create$1(HTMLLinkElement, "link");
                link_element.id = id;
                link_element.rel = rel;
                link_element.type = type;
                link_element.async = true;
                if (success != null || failure != null) {
                    if (success != null) {
                        link_element.onload = $d.delegate(function(e) {
                            link_element.onload = null;
                            success(link_element);
                            return true;
                        }, this);
                    }
                    if (failure != null) {
                        link_element.onerror = $d.delegate(function(e) {
                            link_element.onerror = null;
                            failure(new System.Exception.ctor$1(String.Format("An error encountered while injecting link id: {0} from: {1}", 
                                $d.array(System.Object, [id, url]))));
                            return true;
                        }, this);
                    }
                }
                link_element.href = url;
                document.head.appendChild(link_element);
            }
            else {
                throw new System.Exception.ctor$1("Document head section not found.");
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (failure != null) {
                failure($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
    };
    $t.injectLinkAsync = function Root_injectLinkAsync(id, url, type, rel, exception) {
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(HTMLLinkElement, 63306).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    console.error(error.get_Message());
                }
            }
        }, this);
        $t.injectLink(id, url, type, rel, success, failure);
        return tasker.get_Task();
    };
    $t.injectScript = function Root_injectScript(id, content, type) {
        var script_element = $t.get$4(HTMLScriptElement, id);
        if (script_element != null) {
            return script_element;
        }
        if (document.head != null) {
            script_element = $t.create$1(HTMLScriptElement, "script");
            script_element.id = id;
            script_element.type = type;
            var dynamic_script_element = script_element;
            dynamic_script_element.async = false;
            document.head.appendChild(script_element);
            script_element.textContent = content.get_Content();
        }
        return script_element;
    };
    $t.injectScript$1 = function Root_injectScript(id, url, type, success, failure) {
        var script_element = null;
        try {
            if (String.IsNullOrEmpty(id)) {
                throw new System.ArgumentNullException.ctor$1("id");
            }
            script_element = $t.get$4(HTMLScriptElement, id);
            if (script_element != null) {
                if (success != null) {
                    success(script_element);
                }
                return;
            }
            if (document.head != null) {
                script_element = $t.create$1(HTMLScriptElement, "script");
                script_element.id = id;
                script_element.type = type;
                script_element.async = true;
                if (success != null || failure != null) {
                    if (success != null) {
                        script_element.onload = $d.delegate(function(e) {
                            script_element.onload = null;
                            success(script_element);
                            return true;
                        }, this);
                    }
                    if (failure != null) {
                        script_element.onerror = $d.delegate(function(e) {
                            script_element.onerror = null;
                            failure(new System.Exception.ctor$1(String.Format("An error encountered while injecting script id: {0} from: {1}", 
                                $d.array(System.Object, [id, url]))));
                            return true;
                        }, this);
                    }
                }
                script_element.src = url;
                document.head.appendChild(script_element);
            }
            else {
                throw new System.Exception.ctor$1("Document head section not found.");
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (failure != null) {
                failure($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
    };
    $t.injectScriptAsync = function Root_injectScriptAsync(id, url, type, exception) {
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(HTMLScriptElement, 17075).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    console.error(error.get_Message());
                }
            }
        }, this);
        $t.injectScript$1(id, url, type, success, failure);
        return tasker.get_Task();
    };
    $t.injectDocument = function Root_injectDocument(id, content) {
        var object_element = $t.get$4(HTMLObjectElement, id);
        if (object_element != null) {
            return object_element;
        }
        if (document.body != null) {
            object_element = $t.create$1(HTMLObjectElement, "object");
            object_element.id = id;
            object_element.type = System.Gateway.TextContent().HtmlMimeType;
            var dynamic_obj_element = object_element;
            dynamic_obj_element.async = false;
            dynamic_obj_element.contentDocument = content;
            dynamic_obj_element.loaded = true;
            document.body.appendChild(object_element);
        }
        return object_element;
    };
    $t.injectDocument$1 = function Root_injectDocument(id, url, success, failure) {
        var object_element = null;
        try {
            if (String.IsNullOrEmpty(id)) {
                throw new System.ArgumentNullException.ctor$1("id");
            }
            object_element = $t.get$4(HTMLObjectElement, id);
            if (object_element != null) {
                if (success != null) {
                    success(object_element);
                }
                return;
            }
            if (document.body != null) {
                object_element = $t.create$1(HTMLObjectElement, "object");
                object_element.id = id;
                object_element.type = System.Gateway.TextContent().HtmlMimeType;
                object_element.async = true;
                if (success != null || failure != null) {
                    if (success != null) {
                        object_element.onload = $d.delegate(function(e) {
                            object_element.onload = null;
                            success(object_element);
                            return true;
                        }, this);
                    }
                    if (failure != null) {
                        object_element.onerror = $d.delegate(function(e) {
                            object_element.onerror = null;
                            failure(new System.Exception.ctor$1(String.Format("An error encountered while injecting script id: {0} from: {1}", 
                                $d.array(System.Object, [id, url]))));
                            return true;
                        }, this);
                    }
                }
                object_element.data = url;
                document.body.appendChild(object_element);
            }
            else {
                throw new System.Exception.ctor$1("Document head section not found.");
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (failure != null) {
                failure($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
    };
    $t.injectDocumentAsync = function Root_injectDocumentAsync(id, url, exception) {
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(HTMLObjectElement, 38024).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    console.error(error.get_Message());
                }
            }
        }, this);
        $t.injectDocument$1(id, url, success, failure);
        return tasker.get_Task();
    };
    $t.parseInlineScriptAndStyle = function Root_parseInlineScriptAndStyle(id_prefix, doc) {
        var styles = doc.querySelectorAll("style");
        var style_count = styles.length;
        if (style_count > 0) {
            for (var xx = 0; xx < style_count; xx++) {
                var style_id = String.Format("{0}_style_{1}", $d.array(System.Object, [id_prefix, xx]));
                var style_element = $d.cast(styles[xx], HTMLStyleElement);
                if (style_element != null && !String.IsNullOrEmpty(style_element.textContent)) {
                    $t.injectStyle(style_id, new System.Gateway.TextContent.ctor$1(style_element.textContent), 
                        "text/css");
                    $t.removeElement(style_element);
                }
            }
        }
        var scripts = doc.querySelectorAll("script");
        var script_count = scripts.length;
        if (script_count > 0) {
            for (var xxx = 0; xxx < script_count; xxx++) {
                var template_id = String.Format("{0}_script_{1}", $d.array(System.Object, [id_prefix, 
                    xxx]));
                var script_element = $d.cast(scripts[xxx], HTMLScriptElement);
                var script_type = script_element.type;
                if (!String.IsNullOrEmpty(script_type)) {
                    script_type = script_type.toLowerCase();
                }
                if (script_element != null && !String.IsNullOrEmpty(script_element.textContent) && !String.IsNullOrEmpty(script_type) && script_type.indexOf("javascript") >= 0 && String.IsNullOrEmpty(script_element.src)) {
                    $t.injectScript(template_id, new System.Gateway.TextContent.ctor$1(script_element.textContent), 
                        "text/javascript");
                    $t.removeElement(script_element);
                }
            }
        }
    };
    $t.get_ui = function Root_get_ui() { return $t().ui; };
    $t.set_ui = function Root_set_ui(value) { $t().ui = value;return value; };
});
$d.define(System.Root.browser, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [2, null, [["supportsAjax", t.supportsAjax, 22, 39], ["supportsImport", t.supportsImport, 22, 39], ["supportsTemplate", t.supportsTemplate, 22, 39], ["supportsRouting", t.supportsRouting, 22, 39], ["supportsDocuments", t.supportsDocuments, 22, 39], ["supportsDatabases", t.supportsDatabases, 22, 39], ["supportsWebGL", t.supportsWebGL, 22, 39], ["supportsBridge", t.supportsBridge, 22, 39], ["supportsMacBridge", t.supportsMacBridge, 22, 39], ["supportsWindowsBridge", t.supportsWindowsBridge, 22, 39], ["supportsAndroidBridge", t.supportsAndroidBridge, 22, 39], ["supportsIosBridge", t.supportsIosBridge, 22, 39]]]; };
    $t.supportsAjax = function browser_supportsAjax() {
        var result = false;
        var ajax_request = new XMLHttpRequest();
        if (ajax_request != null) {
            result = ("send" in ajax_request);
        }
        return result;
    };
    $t.supportsImport = function browser_supportsImport() {
        var result = false;
        var link_element = System.Root.create$1(HTMLLinkElement, "link");
        if (link_element != null) {
            link_element.rel = System.Gateway.TextContent().RelImport;
            link_element.type = System.Gateway.TextContent().HtmlMimeType;
            result = ("import" in link_element);
        }
        if (result == false) {
            if (window.HTMLImports != null) {
                result = true;
            }
        }
        return result;
    };
    $t.supportsTemplate = function browser_supportsTemplate() {
        var result = false;
        var template_element = System.Root.create("template");
        if (template_element != null) {
            result = ("content" in template_element);
        }
        return result;
    };
    $t.supportsRouting = function browser_supportsRouting() {
        return ("onhashchange" in window);
    };
    $t.supportsDocuments = function browser_supportsDocuments() {
        return ("implementation" in window.document) && ("createHTMLDocument" in window.document.implementation);
    };
    $t.supportsDatabases = function browser_supportsDatabases() {
        return ("indexedDB" in window) || ("msIndexedDB" in window);
    };
    $t.supportsWebGL = function browser_supportsWebGL() {
        return ("WebGLRenderingContext" in window);
    };
    $t.supportsBridge = function browser_supportsBridge() {
        return (navigator.userAgent.indexOf("AjaxGatewayBridge") >= 0);
    };
    $t.supportsMacBridge = function browser_supportsMacBridge() {
        return (navigator.userAgent.indexOf("AjaxGatewayBridge.Mac") >= 0);
    };
    $t.supportsWindowsBridge = function browser_supportsWindowsBridge() {
        return (navigator.userAgent.indexOf("AjaxGatewayBridge.Win") >= 0);
    };
    $t.supportsAndroidBridge = function browser_supportsAndroidBridge() {
        return (navigator.userAgent.indexOf("AjaxGatewayBridge.And") >= 0);
    };
    $t.supportsIosBridge = function browser_supportsIosBridge() {
        return (navigator.userAgent.indexOf("AjaxGatewayBridge.Ios") >= 0);
    };
});
$d.define(System.PlatformTools, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1]; };
});
$d.define(System.AsyncWaiter, null, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["errors", System.Collections.Generic.List$1(String, 54783), 1], ["interval", 45, 1], ["timeout", 51, 1], ["success", System.Action$1(System.AsyncWaiter, 56493), 1], ["failure", System.Action$1(System.Exception, 1439), 1], ["handle", 45, 4], ["current", 51, 4], ["enabled", 39, 4], ["waiter", System.Func$1(Boolean, 51240), 4]], [["get_errors", p.get_errors, 6, System.Collections.Generic.List$1(String, 54783)], ["set_errors", p.set_errors, 4, 38, [["value", System.Collections.Generic.List$1(String, 54783), 0]]], ["get_interval", p.get_interval, 6, 45], ["set_interval", p.set_interval, 6, 38, [["value", 45, 0]]], ["get_timeout", p.get_timeout, 6, 51], ["set_timeout", p.set_timeout, 6, 38, [["value", 51, 0]]], ["get_success", p.get_success, 6, System.Action$1(System.AsyncWaiter, 56493)], ["set_success", p.set_success, 6, 38, [["value", System.Action$1(System.AsyncWaiter, 56493), 0]]], ["get_failure", p.get_failure, 6, System.Action$1(System.Exception, 1439)], ["set_failure", p.set_failure, 6, 38, [["value", System.Action$1(System.Exception, 1439), 0]]], ["wait", p.wait, 6, 38, [["expression", System.Func$1(Boolean, 51240), 0]]], ["reset", p.reset, 6], ["tick", p.tick, 1], ["Dispose", p.Dispose, 6], ["OnDispose", p.OnDispose, 4]], [["ctor", t.ctor, 6]], [["errors", System.Collections.Generic.List$1(String, 54783), 0, 1], ["interval", 45, 2, 3], ["timeout", 51, 4, 5], ["success", System.Action$1(System.AsyncWaiter, 56493), 6, 7], ["failure", System.Action$1(System.Exception, 1439), 8, 9]]]; };
    $t.$ator = function() {
        this.handle = 0;
        this.current = 0;
        this.enabled = false;
        this.waiter = null;
        this.errors = null;
        this.interval = 0;
        this.timeout = 0;
        this.success = null;
        this.failure = null;
    };
    $p.get_errors = function AsyncWaiter_get_errors() { return this.errors; };
    $p.set_errors = function AsyncWaiter_set_errors(value) { this.errors = value;return value; };
    $p.get_interval = function AsyncWaiter_get_interval() { return this.interval; };
    $p.set_interval = function AsyncWaiter_set_interval(value) { this.interval = value;return value; };
    $p.get_timeout = function AsyncWaiter_get_timeout() { return this.timeout; };
    $p.set_timeout = function AsyncWaiter_set_timeout(value) { this.timeout = value;return value; };
    $p.get_success = function AsyncWaiter_get_success() { return this.success; };
    $p.set_success = function AsyncWaiter_set_success(value) { this.success = value;return value; };
    $p.get_failure = function AsyncWaiter_get_failure() { return this.failure; };
    $p.set_failure = function AsyncWaiter_set_failure(value) { this.failure = value;return value; };
    $t.ctor = function AsyncWaiter() {
        $t.$baseType.ctor.call(this);
        this.handle = 0;
        this.set_interval(100);
        this.set_timeout(30000);
        this.enabled = false;
        this.waiter = null;
        this.set_errors(new (System.Collections.Generic.List$1(String, 54783).ctor)());
    };
    $p.wait = function AsyncWaiter_wait(expression) {
        if (expression == null) {
            throw new System.ArgumentNullException.ctor$1("expression");
        }
        if (!this.enabled) {
            this.enabled = true;
            this.current = 0;
            this.waiter = expression;
            this.handle = window.setInterval($d.delegate(this.tick, this), this.get_interval());
        }
        else {
            throw new System.Exception.ctor$1("Waiter already being monitored");
        }
    };
    $p.reset = function AsyncWaiter_reset() {
        if (this.handle != 0) {
            try {
                window.clearInterval(this.handle);
            }
            catch ($e) {}
            this.handle = 0;
        }
        this.enabled = false;
        this.current = 0;
    };
    $p.tick = function AsyncWaiter_tick() {
        try {
            if (this.enabled) {
                if (this.get_timeout() > 0) {
                    this.current = this.current + this.get_interval();
                }
                if (this.get_timeout() > 0 && this.current > this.get_timeout()) {
                    this.reset();
                    throw new System.Exception.ctor$1("Content loader timeout expired.");
                }
                else {
                    if (this.waiter == null) {
                        this.reset();
                        throw new System.Exception.ctor$1("Null waiter expression encountered.");
                    }
                    else {
                        if (this.waiter()) {
                            this.reset();
                            if (this.get_success() != null) {
                                this.get_success()(this);
                            }
                        }
                    }
                }
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            this.reset();
            if (this.get_failure() != null) {
                this.get_failure()($e);
            }
        }
    };
    $p.Dispose = function AsyncWaiter_Dispose() {
        this.reset();
        this.OnDispose();
    };
    $p.OnDispose = function AsyncWaiter_OnDispose() {};
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.Template, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["caching", 39, 22], ["cache", System.Object, 49]], [["get_version", t.get_version, 22, 20], ["get_global", t.get_global, 22, System.Object], ["set_global", t.set_global, 22, 38, [["value", System.Object, 0]]], ["create", t.create, 22, System.MarkupTemplate, [["id", 20, 0], ["html", 20, 1], ["exec", 1, 2, 4096, null], ["options", 1, 3, 4096, null]]], ["import", t.import, 22, System.MarkupTemplate, [["id", 20, 0], ["src", 20, 1, 4096, null], ["exec", 1, 2, 4096, null], ["options", 1, 3, 4096, null]]], ["get_helpers", t.get_helpers, 22, System.Object], [".cctor", t.cctor, 17]], null, [["version", 20, 0], ["global", System.Object, 1, 2], ["helpers", System.Object, 5]]]; };
    $t.cctor = function() {
        $t.caching = true;
        $t.cache = {};
        Object.defineProperty($t, "version", { get: $t.get_version });
        Object.defineProperty($t, "global", { get: $t.get_global, set: $t.set_global });
        Object.defineProperty($t, "helpers", { get: $t.get_helpers });
    };
    $t.get_version = function Template_get_version() {
        return "1.1.0";
    };
    $t.get_global = function Template_get_global() {
        return window.Templates["global"];
    };
    $t.set_global = function Template_set_global(value) {
        window.Templates["global"] = value;
        return value;
    };
    $t.create = function Template_create(id, html, exec, options) {
        if (String.IsNullOrEmpty(id)) {
            throw new System.Exception.ctor$1("Null template id specified.");
        }
        if (!String.IsNullOrEmpty(id) && id.indexOf(" ") >= 0) {
            throw new System.Exception.ctor$1("Template id must NOT contain spaces.");
        }
        var result = (function() {
            var $obj = new System.MarkupTemplate.ctor$1(id);
            $obj.set_exec(exec);
            $obj.set_options(options);
            return $obj;
        }).call(this);
        result.mode = 0;
        result.compile(html);
        return result;
    };
    $t.import = function Template_import(id, src, exec, options) {
        if (String.IsNullOrEmpty(id)) {
            throw new System.Exception.ctor$1("Null template id specified.");
        }
        if (!String.IsNullOrEmpty(id) && id.indexOf(" ") >= 0) {
            throw new System.Exception.ctor$1("Template id must NOT contain spaces.");
        }
        var result = null;
        if (!String.IsNullOrEmpty(src)) {
            src = src.trim();
            var name = ("template_" + src.Replace$1("://", "_").Replace$1(":", "_").Replace$1("/", "_").Replace$1("?", 
                "_").Replace$1("&", "_").Replace$1("=", "_").Replace$1(".", "_")).toLowerCase();
            result = (function() {
                var $obj = new System.MarkupTemplate.ctor$1(id);
                $obj.set_doc(name);
                $obj.set_src(src);
                $obj.set_exec(exec);
                $obj.set_options(options);
                return $obj;
            }).call(this);
            result.mode = 2;
        }
        else {
            result = (function() {
                var $obj = new System.MarkupTemplate.ctor$1(id);
                $obj.set_exec(exec);
                $obj.set_options(options);
                return $obj;
            }).call(this);
            result.mode = 1;
        }
        return result;
    };
    $t.get_helpers = function Template_get_helpers() {
        return window.Templates.helpers;
    };
});
$d.define(System.Template.tools, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [2, null, [["registerHelper", t.registerHelper, 22, 38, [["name", 20, 0], ["helper", 4, 1]]], ["unregisterHelper", t.unregisterHelper, 22, 38, [["name", 20, 0]]], ["registerPartial", t.registerPartial, 22, 38, [["name", 20, 0], ["template", 20, 1]]], ["unregisterPartial", t.unregisterPartial, 22, 38, [["name", 20, 0]]], ["parse", t.parse, 19, 20, [["html", 20, 0], ["exec", 1, 1, 4096, null]]], ["compile", t.compile, 19, System.Object, [["id", 20, 0], ["html", 20, 1], ["exec", 1, 2, 4096, null]]]]]; };
    $t.registerHelper = function tools_registerHelper(name, helper) {
        window.Templates.registerHelper(name, helper);
    };
    $t.unregisterHelper = function tools_unregisterHelper(name) {
        window.Templates.unregisterHelper(name);
    };
    $t.registerPartial = function tools_registerPartial(name, template) {
        window.Templates.registerPartial(name, template);
    };
    $t.unregisterPartial = function tools_unregisterPartial(name) {
        window.Templates.unregisterPartial(name);
    };
    $t.parse = function tools_parse(html, exec) {
        if (exec != null) {
            return window.Templates.parse(html, exec);
        }
        else {
            return window.Templates.parse(html);
        }
    };
    $t.compile = function tools_compile(id, html, exec) {
        if (!String.IsNullOrEmpty(id) && id.indexOf(" ") >= 0) {
            throw new System.Exception.ctor$1("Template id must NOT contain spaces.");
        }
        if (System.Template().caching && !String.IsNullOrEmpty(id)) {
            if (System.Template().cache[id] != null) {
                return System.Template().cache[id];
            }
        }
        var result = null;
        if (exec != null) {
            result = window.Templates.compile(html, exec);
        }
        else {
            result = window.Templates.compile(html);
        }
        if (System.Template().caching && !String.IsNullOrEmpty(id)) {
            if (result != null) {
                System.Template().cache[id] = result;
            }
        }
        return result;
    };
});
$d.define(System.MarkupTemplate, null, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["_id", 20, 1], ["_exec", 1, 1], ["_options", 1, 1], ["handler", System.Object, 1], ["doc", 20, 1], ["src", 20, 1], ["mode", System.MarkupMode, 3]], [["get_id", p.get_id, 6, 20], ["set_id", p.set_id, 3, 38, [["value", 20, 0]]], ["get_exec", p.get_exec, 6, 1], ["set_exec", p.set_exec, 3, 38, [["value", 1, 0]]], ["get_options", p.get_options, 6, 1], ["set_options", p.set_options, 3, 38, [["value", 1, 0]]], ["type", p.type, 6, 20], ["compiled", p.compiled, 6, 39], ["import", p.import, 3, 38, [["template", System.Object, 0]]], ["compile", p.compile, 3, 38, [["html", 20, 0]]], ["render", p.render, 3, 20, [["context", 1, 0]]], ["get_handler", p.get_handler, 3, System.Object], ["set_handler", p.set_handler, 3, 38, [["value", System.Object, 0]]], ["get_doc", p.get_doc, 3, 20], ["set_doc", p.set_doc, 3, 38, [["value", 20, 0]]], ["get_src", p.get_src, 3, 20], ["set_src", p.set_src, 3, 38, [["value", 20, 0]]], ["Dispose", p.Dispose, 6]], [["ctor", t.ctor, 3], ["ctor$1", t.ctor$1, 3, [["name", 20, 0]]]], [["id", 20, 0, 1], ["exec", 1, 2, 3], ["options", 1, 4, 5], ["handler", System.Object, 11, 12], ["doc", 20, 13, 14], ["src", 20, 15, 16]]]; };
    $t.$ator = function() {
        this._id = null;
        this._exec = null;
        this._options = null;
        this.mode = 0;
        Object.defineProperty(this, "id", { get: this.get_id, set: this.set_id });
        Object.defineProperty(this, "exec", { get: this.get_exec, set: this.set_exec });
        Object.defineProperty(this, "options", { get: this.get_options, set: this.set_options });
        this.handler = null;
        this.doc = null;
        this.src = null;
    };
    $p.get_id = function MarkupTemplate_get_id() {
        return this._id;
    };
    $p.set_id = function MarkupTemplate_set_id(value) {
        this._id = value;
        return value;
    };
    $p.get_exec = function MarkupTemplate_get_exec() {
        return this._exec;
    };
    $p.set_exec = function MarkupTemplate_set_exec(value) {
        this._exec = value;
        return value;
    };
    $p.get_options = function MarkupTemplate_get_options() {
        return this._options;
    };
    $p.set_options = function MarkupTemplate_set_options(value) {
        this._options = value;
        return value;
    };
    $p.type = function MarkupTemplate_type() {
        return $d.boxEnum(System.MarkupMode, this.mode).toString();
    };
    $p.compiled = function MarkupTemplate_compiled() {
        return (this.get_handler() != null);
    };
    $t.ctor = function MarkupTemplate() {
        $t.$baseType.ctor.call(this);
        this.set_id(null);
        this.set_doc(null);
        this.set_src(null);
        this.set_handler(null);
        this.set_options(null);
    };
    $t.ctor$1 = function MarkupTemplate(name) {
        $t.$baseType.ctor.call(this);
        this.set_id(name);
        this.set_doc(null);
        this.set_src(null);
        this.set_handler(null);
        this.set_options(null);
    };
    $p.import = function MarkupTemplate_import(template) {
        this.set_handler(template);
    };
    $p.compile = function MarkupTemplate_compile(html) {
        if (this.get_exec() != null) {
            this.set_handler(System.Template.tools.compile(this.get_id(), html, this.get_exec()));
        }
        else {
            this.set_handler(System.Template.tools.compile(this.get_id(), html, null));
        }
    };
    $p.render = function MarkupTemplate_render(context) {
        if (this.get_handler() == null) {
            throw new System.Exception.ctor$1("Compiled template handler not initialized. You must call template compile before rendering.");
        }
        var renderer = this.get_handler();
        if (this.get_options() != null) {
            return renderer(context, this.get_options());
        }
        else {
            return renderer(context);
        }
    };
    $p.get_handler = function MarkupTemplate_get_handler() { return this.handler; };
    $p.set_handler = function MarkupTemplate_set_handler(value) { this.handler = value;return value; };
    $p.get_doc = function MarkupTemplate_get_doc() { return this.doc; };
    $p.set_doc = function MarkupTemplate_set_doc(value) { this.doc = value;return value; };
    $p.get_src = function MarkupTemplate_get_src() { return this.src; };
    $p.set_src = function MarkupTemplate_set_src(value) { this.src = value;return value; };
    $p.Dispose = function MarkupTemplate_Dispose() {
        this.set_id(null);
        this.set_doc(null);
        this.set_src(null);
        this.set_handler(null);
        this.set_options(null);
    };
    $p.System$IDisposable$Dispose = $p.Dispose;
});
System.MarkupMode = $d.typeEnum("System.MarkupMode", 45, $asm, 256, ["Inline", "ScriptTag", "AjaxScriptTag"], [0, 1, 2]);
System.IViewController = $d.type("System.IViewController", 66, $asm, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [161, null, [["Initialize", null, 6, 38, [["container", HTMLElement, 0], ["parameter", 1, 1], ["top", 39, 2]]]]]; };
});
$d.define(System.ViewController, null, function($t, $p) {
    $t.$intfs = [System.IViewController, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [129, [["initialized", 39, 1], ["root", 39, 1], ["children", System.Collections.Generic.List$1(System.IViewController, 33388), 1], ["template", System.MarkupTemplate, 1], ["context", 1, 1], ["bus", System.Gateway.Events.EventBus, 1], ["change", System.ComponentModel.ChangeListener, 1]], [["get_root", p.get_root, 6, 39], ["set_root", p.set_root, 1, 38, [["value", 39, 0]]], ["get_element", p.get_element, 6, HTMLElement], ["set_element", p.set_element, 1, 38, [["value", HTMLElement, 0]]], ["get_children", p.get_children, 6, System.Collections.Generic.List$1(System.IViewController, 33388)], ["set_children", p.set_children, 1, 38, [["value", System.Collections.Generic.List$1(System.IViewController, 33388), 0]]], ["get_template", p.get_template, 6, System.MarkupTemplate], ["set_template", p.set_template, 4, 38, [["value", System.MarkupTemplate, 0]]], ["get_context", p.get_context, 6, 1], ["set_context", p.set_context, 4, 38, [["value", 1, 0]]], ["get_change", p.get_change, 6, System.ComponentModel.ChangeListener], ["set_change", p.set_change, 1, 38, [["value", System.ComponentModel.ChangeListener, 0]]], ["Initialize", p.Initialize, 6, 38, [["container", HTMLElement, 0], ["parameter", 1, 1], ["top", 39, 2]]], ["OnChanged", p.OnChanged, 1, 38, [["sender", 1, 0], ["e", System.ComponentModel.PropertyChangedEventArgs, 1]]], ["OnInitialize", p.OnInitialize, 4, 38, [["parameter", 1, 0]]], ["OnFinalized", p.OnFinalized, 4], ["Dispose", p.Dispose, 6], ["OnDispose", p.OnDispose, 4]], [["ctor", t.ctor, 4]], [["root", 39, 0, 1], ["element", HTMLElement, 2, 3], ["children", System.Collections.Generic.List$1(System.IViewController, 33388), 4, 5], ["template", System.MarkupTemplate, 6, 7], ["context", 1, 8, 9], ["change", System.ComponentModel.ChangeListener, 10, 11]]]; };
    $t.$ator = function() {
        this.initialized = false;
        this.bus = null;
        this.root = false;
        this.element = null;
        this.children = null;
        this.template = null;
        this.context = null;
        this.change = null;
    };
    $p.get_root = function ViewController_get_root() { return this.root; };
    $p.set_root = function ViewController_set_root(value) { this.root = value;return value; };
    $p.get_element = function ViewController_get_element() { return this.element; };
    $p.set_element = function ViewController_set_element(value) { this.element = value;return value; };
    $p.get_children = function ViewController_get_children() { return this.children; };
    $p.set_children = function ViewController_set_children(value) { this.children = value;return value; };
    $p.get_template = function ViewController_get_template() { return this.template; };
    $p.set_template = function ViewController_set_template(value) { this.template = value;return value; };
    $p.get_context = function ViewController_get_context() { return this.context; };
    $p.set_context = function ViewController_set_context(value) { this.context = value;return value; };
    $p.get_change = function ViewController_get_change() { return this.change; };
    $p.set_change = function ViewController_set_change(value) { this.change = value;return value; };
    $t.ctor = function ViewController() {
        $t.$baseType.ctor.call(this);
        this.bus = null;
        this.set_root(false);
        this.set_change(null);
        this.set_element(null);
        this.set_context(null);
        this.set_children(null);
        this.set_template(null);
        this.initialized = false;
    };
    $p.Initialize = function ViewController_Initialize(container, parameter, top) {
        if (this.initialized == false) {
            this.initialized = true;
            this.set_root(top);
            this.set_element(container);
            if (this.get_template() != null) {
                System.Root().get_ui().markup(this.get_template(), this.get_element(), this.get_context());
            }
            if (this.get_context() != null && $d.is(this.get_context(), System.ComponentModel.INotifyPropertyChanged)) {
                this.bus = new System.Gateway.Events.EventBus.ctor();
                this.set_change(System.ComponentModel.ChangeListener.Create($d.cast(this.get_context(), 
                    System.ComponentModel.INotifyPropertyChanged)));
                this.get_change().add_PropertyChanged($d.delegate(this.OnChanged, this));
            }
            this.OnInitialize(parameter);
            this.set_children(System.UIManagerExtensions.parseHtmlDataAttributes(System.Root().get_ui(), 
                this.get_element(), this.get_context(), this.bus));
            this.OnFinalized();
        }
        else {
            throw new System.Exception.ctor$1("View controller already initialized");
        }
    };
    $p.OnChanged = function ViewController_OnChanged(sender, e) {
        if (this.bus != null && this.get_context() != null && $d.is(this.get_context(), System.ComponentModel.INotifyPropertyChanged)) {
            var change_args = e;
            var change_bus = this.bus;
            var change_context = $d.cast(this.get_context(), System.ComponentModel.INotifyPropertyChanged);
            System.Root.delay(5, $d.delegate(function() {
                var name = change_args.get_PropertyName().trim();
                if (name.EndsWith("[]")) {
                    var each = name.toLowerCase() + ":foreach";
                    change_bus.Notify(each);
                }
                else {
                    var msg = name.toLowerCase() + ":changed";
                    var obj = System.Root.getKeypath(System.Object, change_context, name);
                    change_bus.Notify$1(msg, obj);
                }
            }, this));
        }
    };
    $p.OnInitialize = function ViewController_OnInitialize(parameter) {};
    $p.OnFinalized = function ViewController_OnFinalized() {};
    $p.Dispose = function ViewController_Dispose() {
        if (this.get_children() != null && this.get_children().get_Count() > 0) {
            var $iter = this.get_children();
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var child = $enumerator.System$Collections$IEnumerator$get_Current();
                try {
                    child.System$IDisposable$Dispose();
                }
                catch ($e) {
                    $e = System.Exception.Wrap($e);
                    System.Trace.Info$1("DISPOSE WARNING: {0}", $e.get_Message());
                }
            }
            try {
                this.get_children().Clear();
            }
            catch ($e1) {
                $e1 = System.Exception.Wrap($e1);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e1.get_Message());
            }
        }
        try {
            this.OnDispose();
        }
        catch ($e2) {
            $e2 = System.Exception.Wrap($e2);
            System.Trace.Info$1("DISPOSE WARNING: {0}", $e2.get_Message());
        }
        if (this.get_template() != null) {
            try {
                this.get_template().Dispose();
            }
            catch ($e3) {
                $e3 = System.Exception.Wrap($e3);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e3.get_Message());
            }
        }
        if (this.bus != null) {
            try {
                this.bus.Dispose();
            }
            catch ($e4) {
                $e4 = System.Exception.Wrap($e4);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e4.get_Message());
            }
        }
        if (this.get_change() != null) {
            try {
                this.get_change().remove_PropertyChanged($d.delegate(this.OnChanged, this));
            }
            catch ($e5) {
                $e5 = System.Exception.Wrap($e5);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e5.get_Message());
            }
            try {
                this.get_change().Dispose();
            }
            catch ($e6) {
                $e6 = System.Exception.Wrap($e6);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e6.get_Message());
            }
        }
        if (this.get_root() == true) {
            try {
                System.Root.unbindElement(this.get_element());
            }
            catch ($e7) {
                $e7 = System.Exception.Wrap($e7);
                System.Trace.Info$1("DISPOSE WARNING: {0}", $e7.get_Message());
            }
        }
        this.set_children(null);
        this.set_template(null);
        this.set_context(null);
        this.set_element(null);
        this.set_change(null);
        this.bus = null;
    };
    $p.OnDispose = function ViewController_OnDispose() {};
    $p.System$IViewController$Initialize = $p.Initialize;
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.ViewController$1, System.ViewController, function($t, $p, T) {
    $t.$intfs = [System.IViewController, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [129, null, [["get_context", p.get_context$1, 6, T], ["set_context", p.set_context$1, 4, 38, [["value", T, 0]]]], [["ctor", t.ctor, 4]], [["context", T, 0, 1]]]; };
    $t.ctor = function ViewController$1() {
        $t.$baseType.ctor.call(this);
    };
    $p.get_context$1 = function ViewController$1_get_context$1() {
        return $t.$baseType.prototype.get_context.call(this);
    };
    $p.set_context$1 = function ViewController$1_set_context$1(value) {
        $t.$baseType.prototype.set_context.call(this, value);
        return value;
    };
}, [$d.typeParam("T", System.Gateway.Mvvm.Model)]);
$d.define(System.PageDialog, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["MODAL_OVERLAY_INDEX", 45, 86, 1001], ["MODAL_DIALOG_INDEX", 45, 86, 1002], ["MODAL_CONTENT_INDEX", 45, 86, 1003], ["dialogs", System.Collections.Generic.List$1(System.OpenDialogOptions, 34444), 17]], [[".cctor", t.cctor, 17], ["get_dialogs", t.get_dialogs, 22, System.Collections.Generic.List$1(System.OpenDialogOptions, 34444)], ["set_dialogs", t.set_dialogs, 20, 38, [["value", System.Collections.Generic.List$1(System.OpenDialogOptions, 34444), 0]]], ["open", p.open, 6, 38, [["options", System.OpenDialogOptions, 0]]], ["close", p.close, 6], ["close", p.close$1, 6, 38, [["options", System.OpenDialogOptions, 0]]]], [["ctor", t.ctor, 6]], [["dialogs", System.Collections.Generic.List$1(System.OpenDialogOptions, 34444), 1, 2]]]; };
    $t.cctor = function() {
        $t.MODAL_OVERLAY_INDEX = 1001;
        $t.MODAL_DIALOG_INDEX = 1002;
        $t.MODAL_CONTENT_INDEX = 1003;
        $t.dialogs = null;
        $t.set_dialogs(new (System.Collections.Generic.List$1(System.OpenDialogOptions, 34444).ctor)());
    };
    $t.ctor = function PageDialog() {
        $t.$baseType.ctor.call(this);
    };
    $t.get_dialogs = function PageDialog_get_dialogs() { return $t().dialogs; };
    $t.set_dialogs = function PageDialog_set_dialogs(value) { $t().dialogs = value;return value; };
    $p.open = function PageDialog_open(options) {
        if (options == null) {
            throw new System.ArgumentNullException.ctor$1("options");
        }
        if (options.get_dialog() != null) {
            System.PageDialog().get_dialogs().Add(options);
            if (options.get_effects() != null) {
                if (options.get_effects().get_isScaled()) {
                    System.Root.addClass(document.documentElement, System.UIManager().MODAL_DIALOG_CONTENT_SCALED);
                }
                if (options.get_effects().get_isPerspective()) {
                    System.Root.addClass(document.documentElement, System.UIManager().MODAL_DIALOG_PERSPECTIVE);
                }
            }
            if (!String.IsNullOrEmpty(options.overlayColor)) {
                options.get_overlay().style.background = options.overlayColor;
            }
            var modal_content = null;
            var content_element = options.get_dialog().querySelector(System.UIManager().MODAL_DIALOG_CONTENT_SELECT);
            if (content_element != null) {
                modal_content = content_element;
            }
            var ratio = "px";
            var width = options.width, height = options.height;
            if (options.get_effects().get_isWindow()) {
                ratio = "%";
                width = 100;
                height = 100;
            }
            var styles = String.Format("width: {0}{1}; height: {2}{3};", $d.array(System.Object, [width, 
                ratio, height, ratio]));
            if (options.width > 0 || options.height > 0) {
                System.Root.setStyles(options.get_dialog(), styles);
                if (modal_content != null) {
                    System.Root.setStyles(modal_content, styles);
                }
            }
            else if (!String.IsNullOrEmpty(options.size)) {
                System.Root.addClass(options.get_dialog(), options.size);
                if (modal_content != null) {
                    System.Root.addClass(modal_content, options.size);
                }
            }
            if (!String.IsNullOrEmpty(options.background)) {
                if (modal_content != null) {
                    modal_content.style.background = options.background;
                }
            }
            if (options.open != null) {
                options.open();
            }
            System.Root.delay(50, $d.delegate(function() {
                if (options.get_content() != null) {
                    DuoCode.Dom.HtmlDuoExtensions.iterateNodes(options.get_content(), $d.delegate(function(node) {
                        if (node != null && $d.is(node, HTMLElement)) {
                            var el = node;
                            if (el != null) {
                                if (el.hasAttribute(System.PageView().DATA_DISMISS)) {
                                    var data_dismiss_attribute = el.getAttribute(System.PageView().DATA_DISMISS);
                                    el.removeAttribute(System.PageView().DATA_DISMISS);
                                    if (!String.IsNullOrEmpty(data_dismiss_attribute)) {
                                        if (data_dismiss_attribute.toLowerCase() == "dialog") {
                                            el.onclick = $d.delegate(function(mouse) {
                                                System.Root().get_ui().get_dialog().close$1(options);
                                                return false;
                                            }, this);
                                        }
                                    }
                                }
                            }
                        }
                    }, this));
                }
                System.Root.addClass(options.get_dialog(), System.UIManager().MODAL_SHOW);
                var duration = (options.get_effects() != null && options.get_effects().get_duration() > 50) ? options.get_effects().get_duration() : 50;
                System.Root.delay(duration, $d.delegate(function() {
                    if (options.complete != null) {
                        options.complete();
                    }
                }, this));
            }, this));
        }
    };
    $p.close = function PageDialog_close() {
        var dialog_count = System.PageDialog().get_dialogs().get_Count();
        if (dialog_count > 0) {
            var dialog_index = (dialog_count - 1);
            var dialog_options = System.PageDialog().get_dialogs().get_Item(dialog_index);
            if (dialog_options != null) {
                this.close$1(dialog_options);
            }
        }
    };
    $p.close$1 = function PageDialog_close(options) {
        if (options == null) {
            throw new System.ArgumentNullException.ctor$1("options");
        }
        System.PageDialog().get_dialogs().Remove(options);
        if (options.get_dialog() != null) {
            System.Root.removeClass(options.get_dialog(), System.UIManager().MODAL_SHOW);
        }
        if (options.get_effects() != null) {
            if (options.get_effects().get_isScaled()) {
                System.Root.removeClass(document.documentElement, System.UIManager().MODAL_DIALOG_CONTENT_SCALED);
            }
            if (options.get_effects().get_isPerspective()) {
                System.Root.removeClass(document.documentElement, System.UIManager().MODAL_DIALOG_PERSPECTIVE);
            }
        }
        var duration = (options.get_effects() != null && options.get_effects().get_duration() > 50) ? options.get_effects().get_duration() : 50;
        System.Root.delay(duration, $d.delegate(function() {
            try {
                if (options.close != null) {
                    options.close();
                }
            }
            finally {
                options.Dispose();
            }
        }, this));
    };
});
$d.define(System.ModalDialogOptions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["background", 20, 6], ["overlayColor", 20, 6], ["overlayClose", 39, 6], ["escKey", 39, 6], ["zfactor", 39, 6], ["open", System.Action, 6], ["complete", System.Action, 6], ["close", System.Action, 6]], null, [["ctor", t.ctor, 6]]]; };
    $t.$ator = function() {
        this.background = null;
        this.overlayColor = null;
        this.overlayClose = false;
        this.escKey = true;
        this.zfactor = true;
        this.open = null;
        this.complete = null;
        this.close = null;
    };
    $t.ctor = function ModalDialogOptions() {
        $t.$baseType.ctor.call(this);
    };
});
$d.define(System.OpenDialogOptions, null, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["animation", System.ModalAnimation, 1], ["effects", System.ModalAnimationSet, 1], ["view", System.IViewController, 1], ["size", 20, 6], ["width", 45, 6], ["height", 45, 6], ["background", 20, 6], ["overlayColor", 20, 6], ["overlayClose", 39, 6], ["escKey", 39, 6], ["zfactor", 39, 6], ["open", System.Action, 6], ["complete", System.Action, 6], ["close", System.Action, 6]], [["get_body", p.get_body, 6, HTMLElement], ["set_body", p.set_body, 1, 38, [["value", HTMLElement, 0]]], ["get_dialog", p.get_dialog, 6, HTMLElement], ["set_dialog", p.set_dialog, 1, 38, [["value", HTMLElement, 0]]], ["get_content", p.get_content, 6, HTMLElement], ["set_content", p.set_content, 1, 38, [["value", HTMLElement, 0]]], ["get_overlay", p.get_overlay, 6, HTMLElement], ["set_overlay", p.set_overlay, 1, 38, [["value", HTMLElement, 0]]], ["get_animation", p.get_animation, 6, System.ModalAnimation], ["set_animation", p.set_animation, 1, 38, [["value", System.ModalAnimation, 0]]], ["get_effects", p.get_effects, 6, System.ModalAnimationSet], ["set_effects", p.set_effects, 1, 38, [["value", System.ModalAnimationSet, 0]]], ["get_view", p.get_view, 6, System.IViewController], ["set_view", p.set_view, 6, 38, [["value", System.IViewController, 0]]], ["Dispose", p.Dispose, 6]], [["ctor", t.ctor, 6, [["animation", System.ModalAnimation, 0, 4096, 0]]]], [["body", HTMLElement, 0, 1], ["dialog", HTMLElement, 2, 3], ["content", HTMLElement, 4, 5], ["overlay", HTMLElement, 6, 7], ["animation", System.ModalAnimation, 8, 9], ["effects", System.ModalAnimationSet, 10, 11], ["view", System.IViewController, 12, 13]]]; };
    $t.$ator = function() {
        this.size = null;
        this.width = 0;
        this.height = 0;
        this.background = null;
        this.overlayColor = null;
        this.overlayClose = false;
        this.escKey = true;
        this.zfactor = true;
        this.open = null;
        this.complete = null;
        this.close = null;
        this.body = null;
        this.dialog = null;
        this.content = null;
        this.overlay = null;
        this.animation = 0;
        this.effects = null;
        this.view = null;
    };
    $p.get_body = function OpenDialogOptions_get_body() { return this.body; };
    $p.set_body = function OpenDialogOptions_set_body(value) { this.body = value;return value; };
    $p.get_dialog = function OpenDialogOptions_get_dialog() { return this.dialog; };
    $p.set_dialog = function OpenDialogOptions_set_dialog(value) { this.dialog = value;return value; };
    $p.get_content = function OpenDialogOptions_get_content() { return this.content; };
    $p.set_content = function OpenDialogOptions_set_content(value) { this.content = value;return value; };
    $p.get_overlay = function OpenDialogOptions_get_overlay() { return this.overlay; };
    $p.set_overlay = function OpenDialogOptions_set_overlay(value) { this.overlay = value;return value; };
    $p.get_animation = function OpenDialogOptions_get_animation() { return this.animation; };
    $p.set_animation = function OpenDialogOptions_set_animation(value) { this.animation = value;return value; };
    $p.get_effects = function OpenDialogOptions_get_effects() { return this.effects; };
    $p.set_effects = function OpenDialogOptions_set_effects(value) { this.effects = value;return value; };
    $p.get_view = function OpenDialogOptions_get_view() { return this.view; };
    $p.set_view = function OpenDialogOptions_set_view(value) { this.view = value;return value; };
    $t.ctor = function OpenDialogOptions(animation) {
        $t.$baseType.ctor.call(this);
        if (!System.PageView().isInitialized) {
            System.PageView.init(false, false, -100, null, document.body, null, true);
        }
        this.set_view(null);
        this.set_animation(animation);
        this.set_effects(System.PageView.getModalAnimationSet(this.get_animation()));
        var dialog_classes = System.UIManager().MODAL_DIALOG;
        if (!String.IsNullOrEmpty(this.get_effects().get_effect())) {
            dialog_classes = (dialog_classes + " " + this.get_effects().get_effect());
        }
        this.set_overlay(System.Root.create$1(HTMLDivElement, "div"));
        System.Root.setClasses(this.get_overlay(), System.UIManager().MODAL_DIALOG_OVERLAY);
        this.set_dialog(System.Root.create$1(HTMLDivElement, "div"));
        System.Root.setClasses(this.get_dialog(), dialog_classes);
        this.set_content(System.Root.create$1(HTMLDivElement, "div"));
        System.Root.setClasses(this.get_content(), System.UIManager().MODAL_DIALOG_CONTENT);
        this.get_dialog().appendChild(this.get_content());
        var root_container = System.Root.get(System.UIManager().ROOT_CONTAINER);
        if (System.App().get_FrameWindow() != null && System.App().get_FrameWindow().parentElement != null) {
            System.App().get_FrameWindow().parentElement.insertBefore(this.get_dialog(), System.App().get_FrameWindow());
            DuoCode.Dom.HtmlDuoExtensions.insertAfter(System.App().get_FrameWindow().parentElement, this.get_overlay(), 
                System.App().get_FrameWindow());
            this.set_body(root_container);
        }
        else if (root_container != null && root_container.parentElement != null) {
            root_container.parentElement.insertBefore(this.get_dialog(), root_container);
            DuoCode.Dom.HtmlDuoExtensions.insertAfter(root_container.parentElement, this.get_overlay(), 
                root_container);
            this.set_body(root_container);
        }
        else {
            document.body.appendChild(this.get_overlay());
            document.body.insertBefore(this.get_dialog(), this.get_overlay());
            this.set_body(document.body);
        }
        if (this.zfactor) {
            var index_factor = System.PageDialog().get_dialogs().get_Count() * 10;
            var overlay_index = (1001 + index_factor);
            this.get_overlay().style.zIndex = overlay_index.toString();
            var dialog_index = (1002 + index_factor);
            this.get_dialog().style.zIndex = dialog_index.toString();
            var content_index = (1003 + index_factor);
            this.get_content().style.zIndex = content_index.toString();
        }
    };
    $p.Dispose = function OpenDialogOptions_Dispose() {
        if (this.get_view() != null) {
            this.get_view().System$IDisposable$Dispose();
            this.set_view(null);
        }
        if (this.get_content() != null) {
            System.Root.removeElement(this.get_content());
            this.set_content(null);
        }
        if (this.get_dialog() != null) {
            System.Root.removeElement(this.get_dialog());
            this.set_dialog(null);
        }
        if (this.get_overlay() != null) {
            System.Root.removeElement(this.get_overlay());
            this.set_overlay(null);
        }
        this.set_body(null);
        this.set_effects(null);
    };
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.ContentLoader, null, function($t, $p) {
    $t.$intfs = [System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["waiter", System.AsyncWaiter, 1], ["links", System.Collections.Generic.List$1(System.LinkInfo, 20561), 1], ["scripts", System.Collections.Generic.List$1(System.ScriptInfo, 22535), 1], ["documents", System.Collections.Generic.List$1(System.DocumentInfo, 35138), 1], ["progress", System.Action$1(System.LoaderEvent, 59273), 1], ["DefaultTimeout", 45, 86, 60000]], [["get_waiter", p.get_waiter, 6, System.AsyncWaiter], ["set_waiter", p.set_waiter, 6, 38, [["value", System.AsyncWaiter, 0]]], ["get_links", p.get_links, 6, System.Collections.Generic.List$1(System.LinkInfo, 20561)], ["set_links", p.set_links, 1, 38, [["value", System.Collections.Generic.List$1(System.LinkInfo, 20561), 0]]], ["get_scripts", p.get_scripts, 6, System.Collections.Generic.List$1(System.ScriptInfo, 22535)], ["set_scripts", p.set_scripts, 1, 38, [["value", System.Collections.Generic.List$1(System.ScriptInfo, 22535), 0]]], ["get_documents", p.get_documents, 6, System.Collections.Generic.List$1(System.DocumentInfo, 35138)], ["set_documents", p.set_documents, 1, 38, [["value", System.Collections.Generic.List$1(System.DocumentInfo, 35138), 0]]], ["get_progress", p.get_progress, 6, System.Action$1(System.LoaderEvent, 59273)], ["set_progress", p.set_progress, 6, 38, [["value", System.Action$1(System.LoaderEvent, 59273), 0]]], ["addDocument", p.addDocument, 6, 38, [["id", 20, 0], ["href", 20, 1]]], ["addLink", p.addLink, 6, 38, [["id", 20, 0], ["href", 20, 1], ["type", 20, 2, 4096, "text/css"], ["rel", 20, 3, 4096, "stylesheet"]]], ["addScript", p.addScript, 6, 38, [["id", 20, 0], ["src", 20, 1], ["type", 20, 2, 4096, "text/javascript"]]], ["allLoaded", p.allLoaded, 6, 39], ["getCount", p.getCount, 6, 45], ["clear", p.clear, 6], ["Dispose", p.Dispose, 6]], [["ctor", t.ctor, 6]], [["waiter", System.AsyncWaiter, 0, 1], ["links", System.Collections.Generic.List$1(System.LinkInfo, 20561), 2, 3], ["scripts", System.Collections.Generic.List$1(System.ScriptInfo, 22535), 4, 5], ["documents", System.Collections.Generic.List$1(System.DocumentInfo, 35138), 6, 7], ["progress", System.Action$1(System.LoaderEvent, 59273), 8, 9]]]; };
    $t.cctor = function() {
        $t.DefaultTimeout = 60000;
    };
    $t.$ator = function() {
        this.waiter = null;
        this.links = null;
        this.scripts = null;
        this.documents = null;
        this.progress = null;
    };
    $p.get_waiter = function ContentLoader_get_waiter() { return this.waiter; };
    $p.set_waiter = function ContentLoader_set_waiter(value) { this.waiter = value;return value; };
    $p.get_links = function ContentLoader_get_links() { return this.links; };
    $p.set_links = function ContentLoader_set_links(value) { this.links = value;return value; };
    $p.get_scripts = function ContentLoader_get_scripts() { return this.scripts; };
    $p.set_scripts = function ContentLoader_set_scripts(value) { this.scripts = value;return value; };
    $p.get_documents = function ContentLoader_get_documents() { return this.documents; };
    $p.set_documents = function ContentLoader_set_documents(value) { this.documents = value;return value; };
    $p.get_progress = function ContentLoader_get_progress() { return this.progress; };
    $p.set_progress = function ContentLoader_set_progress(value) { this.progress = value;return value; };
    $t.ctor = function ContentLoader() {
        $t.$baseType.ctor.call(this);
        this.set_links(new (System.Collections.Generic.List$1(System.LinkInfo, 20561).ctor)());
        this.set_scripts(new (System.Collections.Generic.List$1(System.ScriptInfo, 22535).ctor)());
        this.set_documents(new (System.Collections.Generic.List$1(System.DocumentInfo, 35138).ctor)());
        this.set_waiter(null);
        this.set_progress(null);
    };
    $p.addDocument = function ContentLoader_addDocument(id, href) {
        if (String.IsNullOrEmpty(id)) {
            throw new System.ArgumentNullException.ctor$1("id");
        }
        if (String.IsNullOrEmpty(href)) {
            throw new System.ArgumentNullException.ctor$1("href");
        }
        if (!System.Root.has(id)) {
            if (!this.get_documents().Exists($d.delegate(function(l) {
                return l.get__id() == id;
            }, this))) {
                this.get_documents().Add((function() {
                    var $obj = new System.DocumentInfo.ctor();
                    $obj.set__id(id);
                    $obj.set__href(href);
                    $obj.set__loading(true);
                    return $obj;
                }).call(this));
            }
        }
    };
    $p.addLink = function ContentLoader_addLink(id, href, type, rel) {
        if (String.IsNullOrEmpty(id)) {
            throw new System.ArgumentNullException.ctor$1("id");
        }
        if (String.IsNullOrEmpty(href)) {
            throw new System.ArgumentNullException.ctor$1("href");
        }
        if (!System.Root.has(id)) {
            if (!this.get_links().Exists($d.delegate(function(l) {
                return l.get__id() == id;
            }, this))) {
                this.get_links().Add((function() {
                    var $obj = new System.LinkInfo.ctor();
                    $obj.set__id(id);
                    $obj.set__href(href);
                    $obj.set__type(type);
                    $obj.set__rel(rel);
                    $obj.set__loading(true);
                    return $obj;
                }).call(this));
            }
        }
    };
    $p.addScript = function ContentLoader_addScript(id, src, type) {
        if (String.IsNullOrEmpty(id)) {
            throw new System.ArgumentNullException.ctor$1("id");
        }
        if (String.IsNullOrEmpty(src)) {
            throw new System.ArgumentNullException.ctor$1("src");
        }
        if (!System.Root.has(id)) {
            if (!this.get_scripts().Exists($d.delegate(function(s) {
                return s.get__id() == id;
            }, this))) {
                this.get_scripts().Add((function() {
                    var $obj = new System.ScriptInfo.ctor();
                    $obj.set__id(id);
                    $obj.set__src(src);
                    $obj.set__type(type);
                    $obj.set__loading(true);
                    return $obj;
                }).call(this));
            }
        }
    };
    $p.allLoaded = function ContentLoader_allLoaded() {
        var still_loading = false;
        if (this.get_links() != null && this.get_links().get_Count() > 0) {
            var $iter = this.get_links();
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var link = $enumerator.System$Collections$IEnumerator$get_Current();
                if (link.get__loading() == true) {
                    still_loading = true;
                    break;
                }
            }
        }
        if (this.get_scripts() != null && this.get_scripts().get_Count() > 0) {
            var $iter1 = this.get_scripts();
            var $enumerator1 = $iter1.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator1.System$Collections$IEnumerator$MoveNext()) {
                var script = $enumerator1.System$Collections$IEnumerator$get_Current();
                if (script.get__loading() == true) {
                    still_loading = true;
                    break;
                }
            }
        }
        if (this.get_documents() != null && this.get_documents().get_Count() > 0) {
            var $iter2 = this.get_documents();
            var $enumerator2 = $iter2.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator2.System$Collections$IEnumerator$MoveNext()) {
                var doc = $enumerator2.System$Collections$IEnumerator$get_Current();
                if (doc.get__loading() == true) {
                    still_loading = true;
                    break;
                }
            }
        }
        return !still_loading;
    };
    $p.getCount = function ContentLoader_getCount() {
        return (this.get_links().get_Count() + this.get_scripts().get_Count() + this.get_documents().get_Count());
    };
    $p.clear = function ContentLoader_clear() {
        this.get_links().Clear();
        this.get_scripts().Clear();
        this.get_documents().Clear();
    };
    $p.Dispose = function ContentLoader_Dispose() {
        if (this.get_waiter() != null) {
            this.get_waiter().Dispose();
            this.set_waiter(null);
        }
        if (this.get_links() != null) {
            this.get_links().Clear();
            this.set_links(null);
        }
        if (this.get_scripts() != null) {
            this.get_scripts().Clear();
            this.set_scripts(null);
        }
        if (this.get_documents() != null) {
            this.get_documents().Clear();
            this.set_documents(null);
        }
    };
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.ScriptInfo, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_id", 20, 1], ["_src", 20, 1], ["_type", 20, 1], ["_loading", 39, 1]], [["get__id", p.get__id, 6, 20], ["set__id", p.set__id, 6, 38, [["value", 20, 0]]], ["get__src", p.get__src, 6, 20], ["set__src", p.set__src, 6, 38, [["value", 20, 0]]], ["get__type", p.get__type, 6, 20], ["set__type", p.set__type, 6, 38, [["value", 20, 0]]], ["get__loading", p.get__loading, 6, 39], ["set__loading", p.set__loading, 6, 38, [["value", 39, 0]]]], [["ctor", t.ctor, 6]], [["_id", 20, 0, 1], ["_src", 20, 2, 3], ["_type", 20, 4, 5], ["_loading", 39, 6, 7]]]; };
    $t.$ator = function() {
        this._id = null;
        this._src = null;
        this._type = null;
        this._loading = false;
    };
    $t.ctor = function ScriptInfo() {
        $t.$baseType.ctor.call(this);
    };
    $p.get__id = function ScriptInfo_get__id() { return this._id; };
    $p.set__id = function ScriptInfo_set__id(value) { this._id = value;return value; };
    $p.get__src = function ScriptInfo_get__src() { return this._src; };
    $p.set__src = function ScriptInfo_set__src(value) { this._src = value;return value; };
    $p.get__type = function ScriptInfo_get__type() { return this._type; };
    $p.set__type = function ScriptInfo_set__type(value) { this._type = value;return value; };
    $p.get__loading = function ScriptInfo_get__loading() { return this._loading; };
    $p.set__loading = function ScriptInfo_set__loading(value) { this._loading = value;return value; };
});
$d.define(System.LinkInfo, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_id", 20, 1], ["_href", 20, 1], ["_type", 20, 1], ["_rel", 20, 1], ["_loading", 39, 1]], [["get__id", p.get__id, 6, 20], ["set__id", p.set__id, 6, 38, [["value", 20, 0]]], ["get__href", p.get__href, 6, 20], ["set__href", p.set__href, 6, 38, [["value", 20, 0]]], ["get__type", p.get__type, 6, 20], ["set__type", p.set__type, 6, 38, [["value", 20, 0]]], ["get__rel", p.get__rel, 6, 20], ["set__rel", p.set__rel, 6, 38, [["value", 20, 0]]], ["get__loading", p.get__loading, 6, 39], ["set__loading", p.set__loading, 6, 38, [["value", 39, 0]]]], [["ctor", t.ctor, 6]], [["_id", 20, 0, 1], ["_href", 20, 2, 3], ["_type", 20, 4, 5], ["_rel", 20, 6, 7], ["_loading", 39, 8, 9]]]; };
    $t.$ator = function() {
        this._id = null;
        this._href = null;
        this._type = null;
        this._rel = null;
        this._loading = false;
    };
    $t.ctor = function LinkInfo() {
        $t.$baseType.ctor.call(this);
    };
    $p.get__id = function LinkInfo_get__id() { return this._id; };
    $p.set__id = function LinkInfo_set__id(value) { this._id = value;return value; };
    $p.get__href = function LinkInfo_get__href() { return this._href; };
    $p.set__href = function LinkInfo_set__href(value) { this._href = value;return value; };
    $p.get__type = function LinkInfo_get__type() { return this._type; };
    $p.set__type = function LinkInfo_set__type(value) { this._type = value;return value; };
    $p.get__rel = function LinkInfo_get__rel() { return this._rel; };
    $p.set__rel = function LinkInfo_set__rel(value) { this._rel = value;return value; };
    $p.get__loading = function LinkInfo_get__loading() { return this._loading; };
    $p.set__loading = function LinkInfo_set__loading(value) { this._loading = value;return value; };
});
$d.define(System.DocumentInfo, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_id", 20, 1], ["_href", 20, 1], ["_loading", 39, 1]], [["get__id", p.get__id, 6, 20], ["set__id", p.set__id, 6, 38, [["value", 20, 0]]], ["get__href", p.get__href, 6, 20], ["set__href", p.set__href, 6, 38, [["value", 20, 0]]], ["get__loading", p.get__loading, 6, 39], ["set__loading", p.set__loading, 6, 38, [["value", 39, 0]]]], [["ctor", t.ctor, 6]], [["_id", 20, 0, 1], ["_href", 20, 2, 3], ["_loading", 39, 4, 5]]]; };
    $t.$ator = function() {
        this._id = null;
        this._href = null;
        this._loading = false;
    };
    $t.ctor = function DocumentInfo() {
        $t.$baseType.ctor.call(this);
    };
    $p.get__id = function DocumentInfo_get__id() { return this._id; };
    $p.set__id = function DocumentInfo_set__id(value) { this._id = value;return value; };
    $p.get__href = function DocumentInfo_get__href() { return this._href; };
    $p.set__href = function DocumentInfo_set__href(value) { this._href = value;return value; };
    $p.get__loading = function DocumentInfo_get__loading() { return this._loading; };
    $p.set__loading = function DocumentInfo_set__loading(value) { this._loading = value;return value; };
});
$d.define(System.XmlContent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["Parse", t.Parse, 22, Document, [["content", 20, 0]]]]]; };
    $t.Parse = function XmlContent_Parse(content) {
        var result = null;
        if (!String.IsNullOrEmpty(content)) {
            var parser = new DOMParser();
            result = parser.parseFromString(content, System.Gateway.TextContent().XmlMimeType);
        }
        return result;
    };
});
$d.define(System.DocumentContent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["Request", 20, 1], ["Response", 20, 1], ["Status", 20, 1], ["Code", 45, 1], ["HtmlMimeType", 20, 86, "text/html"]], [["get_Content", p.get_Content, 6, Document], ["set_Content", p.set_Content, 6, 38, [["value", Document, 0]]], ["get_Request", p.get_Request, 6, 20], ["set_Request", p.set_Request, 6, 38, [["value", 20, 0]]], ["get_Response", p.get_Response, 6, 20], ["set_Response", p.set_Response, 6, 38, [["value", 20, 0]]], ["get_Status", p.get_Status, 6, 20], ["set_Status", p.set_Status, 6, 38, [["value", 20, 0]]], ["get_Code", p.get_Code, 6, 45], ["set_Code", p.set_Code, 6, 38, [["value", 45, 0]]]], [["ctor", t.ctor, 6], ["ctor$1", t.ctor$1, 6, [["content", Document, 0]]]], [["Content", Document, 0, 1], ["Request", 20, 2, 3], ["Response", 20, 4, 5], ["Status", 20, 6, 7], ["Code", 45, 8, 9]]]; };
    $t.cctor = function() {
        $t.HtmlMimeType = "text/html";
    };
    $t.$ator = function() {
        this.Content = null;
        this.Request = null;
        this.Response = null;
        this.Status = null;
        this.Code = 0;
    };
    $p.get_Content = function DocumentContent_get_Content() { return this.Content; };
    $p.set_Content = function DocumentContent_set_Content(value) { this.Content = value;return value; };
    $p.get_Request = function DocumentContent_get_Request() { return this.Request; };
    $p.set_Request = function DocumentContent_set_Request(value) { this.Request = value;return value; };
    $p.get_Response = function DocumentContent_get_Response() { return this.Response; };
    $p.set_Response = function DocumentContent_set_Response(value) { this.Response = value;return value; };
    $p.get_Status = function DocumentContent_get_Status() { return this.Status; };
    $p.set_Status = function DocumentContent_set_Status(value) { this.Status = value;return value; };
    $p.get_Code = function DocumentContent_get_Code() { return this.Code; };
    $p.set_Code = function DocumentContent_set_Code(value) { this.Code = value;return value; };
    $t.ctor = function DocumentContent() {
        $t.$baseType.ctor.call(this);
        this.set_Content(null);
        this.set_Request(String.Empty);
        this.set_Response(String.Empty);
        this.set_Status(String.Empty);
        this.set_Code(0);
    };
    $t.ctor$1 = function DocumentContent(content) {
        $t.$baseType.ctor.call(this);
        this.set_Content(content);
        this.set_Request(String.Empty);
        this.set_Response(String.Empty);
        this.set_Status(String.Empty);
        this.set_Code(0);
    };
});
$d.define(System.UIManagerExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["_directive", System.Gateway.Events.EventBus, 17], ["_directives", System.Collections.Generic.List$1(String, 54783), 17], ["_router", System.Gateway.Events.EventBus, 17], ["_routes", System.Collections.Generic.List$1(String, 54783), 17], ["_pageView", System.IViewController, 17], ["_handler", System.Action, 17], ["_custom", System.PageAnimationSet, 17], ["_animation", System.PageAnimation, 17], ["_modal_options", System.ModalDialogOptions, 17], ["_modal_effect", System.ModalAnimationSet, 17], ["_modal_animation", System.ModalAnimation, 17]], [["hasRequired", t.hasRequired, 22, 39, [["source", System.UIManager, 0]]], ["hasDialog", t.hasDialog, 22, 39, [["source", System.UIManager, 0]]], ["hasPerspectiveBackdrop", t.hasPerspectiveBackdrop, 22, 38, [["source", System.UIManager, 0]]], ["setPerspectiveBackdrop", t.setPerspectiveBackdrop, 22, 38, [["source", System.UIManager, 0]]], ["removePerspectiveBackdrop", t.removePerspectiveBackdrop, 22, 38, [["source", System.UIManager, 0]]], ["getViewPort", t.getViewPort, 22, HTMLElement, [["source", System.UIManager, 0]]], ["clearViewPort", t.clearViewPort, 22, 38, [["source", System.UIManager, 0]]], ["getPageView", t.getPageView, 22, System.IViewController, [["source", System.UIManager, 0]]], (function(T) { return ["setPageView", t.setPageView$2, 22, 39, [["source", System.UIManager, 0], ["animation", System.PageAnimation, 1, 4096, -100], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["setPageView", t.setPageView, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["animation", System.PageAnimation, 2, 4096, -100], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null]]], (function(T) { return ["setPageView", t.setPageView$3, 22, 39, [["source", System.UIManager, 0], ["parameter", 1, 1], ["animation", System.PageAnimation, 2, 4096, -100], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["setPageView", t.setPageView$1, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["parameter", 1, 2], ["animation", System.PageAnimation, 3, 4096, -100], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null]]], ["createPageContentView", t.createPageContentView, 17, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["url", 20, 2], ["parameter", 1, 3], ["animation", System.PageAnimation, 4, 4096, -100], ["exception", System.Action$1(System.Exception, 1439), 5, 4096, null]]], ["parseHtmlDataAttributes", t.parseHtmlDataAttributes, 22, System.Collections.Generic.List$1(System.IViewController, 33388), [["source", System.UIManager, 0], ["parent", HTMLElement, 1], ["context", 1, 2, 4096, null], ["bus", System.Gateway.Events.EventBus, 3, 4096, null]]], ["directive", t.directive, 22, 38, [["source", System.UIManager, 0], ["directive", 20, 1], ["handler", System.Action$1(System.DirectiveEvent, 58663), 2]]], ["getDefaultModalAnimation", t.getDefaultModalAnimation, 22, System.ModalAnimation, [["source", System.UIManager, 0]]], ["setDefaultModalAnimation", t.setDefaultModalAnimation, 22, 38, [["source", System.UIManager, 0], ["animation", System.ModalAnimation, 1]]], ["getDefaultModalOptions", t.getDefaultModalOptions, 22, System.ModalDialogOptions, [["source", System.UIManager, 0]]], ["setDefaultModalOptions", t.setDefaultModalOptions, 22, 38, [["source", System.UIManager, 0], ["options", System.ModalDialogOptions, 1]]], ["getCusomtModalEffect", t.getCusomtModalEffect, 22, System.ModalAnimationSet, [["source", System.UIManager, 0]]], ["setCustomModalEffect", t.setCustomModalEffect, 22, 38, [["source", System.UIManager, 0], ["custom", System.ModalAnimationSet, 1]]], ["closeDialogView", t.closeDialogView, 22, 38, [["source", System.UIManager, 0]]], (function(T) { return ["openDialogView", t.openDialogView$6, 22, 39, [["source", System.UIManager, 0], ["animation", System.ModalAnimation, 1, 4096, -100], ["options", System.ModalDialogOptions, 2, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 3, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["animation", System.ModalAnimation, 2, 4096, -100], ["options", System.ModalDialogOptions, 3, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null]]], (function(T) { return ["openDialogView", t.openDialogView$8, 22, 39, [["source", System.UIManager, 0], ["parameter", 1, 1], ["animation", System.ModalAnimation, 2, 4096, -100], ["options", System.ModalDialogOptions, 3, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView$2, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["parameter", 1, 2], ["animation", System.ModalAnimation, 3, 4096, -100], ["options", System.ModalDialogOptions, 4, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 5, 4096, null]]], (function(T) { return ["openDialogView", t.openDialogView$7, 22, 39, [["source", System.UIManager, 0], ["size", System.DialogSize, 1], ["animation", System.ModalAnimation, 2, 4096, -100], ["options", System.ModalDialogOptions, 3, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 4, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView$1, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["size", System.DialogSize, 2], ["animation", System.ModalAnimation, 3, 4096, -100], ["options", System.ModalDialogOptions, 4, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 5, 4096, null]]], (function(T) { return ["openDialogView", t.openDialogView$10, 22, 39, [["source", System.UIManager, 0], ["parameter", 1, 1], ["size", System.DialogSize, 2], ["animation", System.ModalAnimation, 3, 4096, -100], ["options", System.ModalDialogOptions, 4, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 5, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView$4, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["parameter", 1, 2], ["size", System.DialogSize, 3], ["animation", System.ModalAnimation, 4, 4096, -100], ["options", System.ModalDialogOptions, 5, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 6, 4096, null]]], (function(T) { return ["openDialogView", t.openDialogView$9, 22, 39, [["source", System.UIManager, 0], ["width", 45, 1], ["height", 45, 2], ["animation", System.ModalAnimation, 3, 4096, -100], ["options", System.ModalDialogOptions, 4, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 5, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView$3, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["width", 45, 2], ["height", 45, 3], ["animation", System.ModalAnimation, 4, 4096, -100], ["options", System.ModalDialogOptions, 5, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 6, 4096, null]]], (function(T) { return ["openDialogView", t.openDialogView$11, 22, 39, [["source", System.UIManager, 0], ["parameter", 1, 1], ["width", 45, 2], ["height", 45, 3], ["animation", System.ModalAnimation, 4, 4096, -100], ["options", System.ModalDialogOptions, 5, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 6, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["openDialogView", t.openDialogView$5, 22, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["parameter", 1, 2], ["width", 45, 3], ["height", 45, 4], ["animation", System.ModalAnimation, 5, 4096, -100], ["options", System.ModalDialogOptions, 6, 4096, null], ["exception", System.Action$1(System.Exception, 1439), 7, 4096, null]]], ["createPageDialogView", t.createPageDialogView, 17, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["url", 20, 2], ["parameter", 1, 3], ["animation", System.ModalAnimation, 4], ["options", System.ModalDialogOptions, 5], ["exception", System.Action$1(System.Exception, 1439), 6]]], ["createPageDialogView", t.createPageDialogView$1, 17, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["url", 20, 2], ["parameter", 1, 3], ["size", System.DialogSize, 4], ["animation", System.ModalAnimation, 5], ["options", System.ModalDialogOptions, 6], ["exception", System.Action$1(System.Exception, 1439), 7]]], ["createPageDialogView", t.createPageDialogView$2, 17, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["url", 20, 2], ["parameter", 1, 3], ["width", 45, 4], ["height", 45, 5], ["animation", System.ModalAnimation, 6], ["options", System.ModalDialogOptions, 7], ["exception", System.Action$1(System.Exception, 1439), 8]]], ["createPageDialogView", t.createPageDialogView$3, 17, 39, [["source", System.UIManager, 0], ["type", 20, 1], ["url", 20, 2], ["parameter", 1, 3], ["size", 20, 4], ["width", 45, 5], ["height", 45, 6], ["animation", System.ModalAnimation, 7], ["options", System.ModalDialogOptions, 8], ["exception", System.Action$1(System.Exception, 1439), 9]]], ["getDefaultPageAnimation", t.getDefaultPageAnimation, 22, System.PageAnimation, [["source", System.UIManager, 0]]], ["setDefaultPageAnimation", t.setDefaultPageAnimation, 22, 38, [["source", System.UIManager, 0], ["animation", System.PageAnimation, 1]]], ["getCusomtPageAnimation", t.getCusomtPageAnimation, 22, System.PageAnimationSet, [["source", System.UIManager, 0]]], ["setCustomPageAnimation", t.setCustomPageAnimation, 22, 38, [["source", System.UIManager, 0], ["custom", System.PageAnimationSet, 1]]], ["getAnimationEndEvent", t.getAnimationEndEvent, 22, System.Action, [["source", System.UIManager, 0]]], ["setAnimationEndEvent", t.setAnimationEndEvent, 22, 38, [["source", System.UIManager, 0], ["handler", System.Action, 1]]], ["reset", t.reset, 22, 38, [["source", System.UIManager, 0]]], ["navigate", t.navigate, 22, 38, [["source", System.UIManager, 0], ["path", 20, 1], ["history", System.RouteHistory, 2, 4096, 0]]], ["route", t.route, 22, 38, [["source", System.UIManager, 0], ["path", 20, 1], ["handler", System.Action$1(System.RouteEvent, 63425), 2]]], ["missing", t.missing, 22, 38, [["source", System.UIManager, 0], ["handler", System.Action$1(System.RouteEvent, 63425), 1]]], [".cctor", t.cctor, 17]]]; };
    $t.cctor = function() {
        $t._directive = new System.Gateway.Events.EventBus.ctor();
        $t._directives = new (System.Collections.Generic.List$1(String, 54783).ctor)();
        $t._router = null;
        $t._routes = new (System.Collections.Generic.List$1(String, 54783).ctor)();
        $t._pageView = null;
        $t._handler = null;
        $t._custom = null;
        $t._animation = -100;
        $t._modal_options = null;
        $t._modal_effect = null;
        $t._modal_animation = -100;
    };
    $t.hasRequired = function UIManagerExtensions_hasRequired(source) {
        var hasPtPage = System.PageAnimationSet.hasSelector(System.UIManager().CONTENT_VIEW);
        var hasPtPageCurrent = System.PageAnimationSet.hasSelector(System.UIManager().CONTENT_VIEW_CURRENT);
        var hasPtPageOnTop = System.PageAnimationSet.hasSelector(System.UIManager().CONTENT_VIEW_ONTOP);
        return (hasPtPage && hasPtPageCurrent && hasPtPageOnTop);
    };
    $t.hasDialog = function UIManagerExtensions_hasDialog(source) {
        var hasPtShow = System.PageAnimationSet.hasSelector(System.UIManager().MODAL_SHOW);
        var hasPtPage = System.PageAnimationSet.hasSelector(System.UIManager().MODAL_DIALOG);
        var hasPtPageOverlay = System.PageAnimationSet.hasSelector(System.UIManager().MODAL_DIALOG_OVERLAY);
        var hasPtPageContent = System.PageAnimationSet.hasSelector(System.UIManager().MODAL_DIALOG_CONTENT);
        return (hasPtShow && hasPtPage && hasPtPageOverlay && hasPtPageContent);
    };
    $t.hasPerspectiveBackdrop = function UIManagerExtensions_hasPerspectiveBackdrop(source) {
        System.Root.hasClass(System.UIManagerExtensions.getViewPort(System.Root().get_ui()), System.UIManager().CONTENT_VIEW_PERSPECTIVE);
    };
    $t.setPerspectiveBackdrop = function UIManagerExtensions_setPerspectiveBackdrop(source) {
        System.Root.addClass(System.UIManagerExtensions.getViewPort(System.Root().get_ui()), System.UIManager().CONTENT_VIEW_PERSPECTIVE);
    };
    $t.removePerspectiveBackdrop = function UIManagerExtensions_removePerspectiveBackdrop(source) {
        System.Root.removeClass(System.UIManagerExtensions.getViewPort(System.Root().get_ui()), System.UIManager().CONTENT_VIEW_PERSPECTIVE);
    };
    $t.getViewPort = function UIManagerExtensions_getViewPort(source) {
        return System.Root.get(System.UIManager().ROOT_CONTAINER) || document.body;
    };
    $t.clearViewPort = function UIManagerExtensions_clearViewPort(source) {
        System.Root.emptyContent(System.UIManagerExtensions.getViewPort(System.Root().get_ui()));
    };
    $t.getPageView = function UIManagerExtensions_getPageView(source) {
        return $t()._pageView;
    };
    $t.setPageView$2 = function UIManagerExtensions_setPageView(T, source, animation, exception) {
        return System.UIManagerExtensions.createPageContentView(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, null, animation, exception);
    };
    $t.setPageView = function UIManagerExtensions_setPageView(source, type, animation, exception) {
        return System.UIManagerExtensions.createPageContentView(System.Root().get_ui(), type, null, null, 
            animation, exception);
    };
    $t.setPageView$3 = function UIManagerExtensions_setPageView(T, source, parameter, animation, exception) {
        return System.UIManagerExtensions.createPageContentView(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, parameter, animation, exception);
    };
    $t.setPageView$1 = function UIManagerExtensions_setPageView(source, type, parameter, animation, exception) {
        return System.UIManagerExtensions.createPageContentView(System.Root().get_ui(), type, null, parameter, 
            animation, exception);
    };
    $t.createPageContentView = function UIManagerExtensions_createPageContentView(source, type, url, parameter, animation, exception) {
        if (System.PageView().isAnimating)
            return false;
        if ($t()._pageView != null) {
            $t()._pageView.System$IDisposable$Dispose();
            $t()._pageView = null;
        }
        return System.Root().get_ui().createContentView(type, System.UIManagerExtensions.getViewPort(System.Root().get_ui()), 
            url, true, true, parameter, animation, $d.delegate(function(view) {
                $t()._pageView = view;
            }, this), $d.delegate(function(error) {
                if (exception != null) {
                    exception(error);
                }
                else if (System.Errors().DefaultException != null) {
                    System.Errors().DefaultException(error);
                }
                else {
                    throw $d.signEx(error);
                }
            }, this));
    };
    $t.parseHtmlDataAttributes = function UIManagerExtensions_parseHtmlDataAttributes(source, parent, context, bus) {
        var children = null;
        if (parent != null) {
            DuoCode.Dom.HtmlDuoExtensions.iterateNodes(parent, $d.delegate(function(node) {
                if (node != null && $d.is(node, HTMLElement)) {
                    var el = node;
                    if (el != null) {
                        var dymanic_dom_element = el;
                        var has_toggle = el.hasAttribute(System.PageView().DATA_TOGGLE);
                        var has_binding = el.hasAttribute(System.PageView().DATA_BINDING);
                        var has_command = el.hasAttribute(System.PageView().DATA_COMMAND);
                        var has_content = el.hasAttribute(System.PageView().DATA_CONTENT);
                        var has_directive = el.hasAttribute(System.PageView().DATA_DIRECTIVE);
                        if (has_toggle || has_binding || has_command || has_content || has_directive) {
                            var data_parameter_attribute = null;
                            if (el.hasAttribute(System.PageView().DATA_PARAMETER)) {
                                data_parameter_attribute = el.getAttribute(System.PageView().DATA_PARAMETER);
                                el.removeAttribute(System.PageView().DATA_PARAMETER);
                                if (!String.IsNullOrEmpty(data_parameter_attribute)) {
                                    data_parameter_attribute = data_parameter_attribute.trim();
                                }
                            }
                            var data_target_attribute = String.Empty;
                            if (el.hasAttribute(System.PageView().DATA_TARGET)) {
                                data_target_attribute = el.getAttribute(System.PageView().DATA_TARGET);
                                el.removeAttribute(System.PageView().DATA_TARGET);
                                if (!String.IsNullOrEmpty(data_target_attribute)) {
                                    data_target_attribute = data_target_attribute.trim();
                                }
                            }
                            if (has_directive) {
                                var data_directive_attribute = el.getAttribute(System.PageView().DATA_DIRECTIVE);
                                if (!String.IsNullOrEmpty(data_directive_attribute)) {
                                    data_directive_attribute = data_directive_attribute.toLowerCase().trim();
                                    el.removeAttribute(System.PageView().DATA_DIRECTIVE);
                                    var directive_event = new System.DirectiveEvent.ctor(data_directive_attribute, 
                                        el);
                                    if ($t()._directives.Contains(data_directive_attribute)) {
                                        $t()._directive.Notify$2(System.DirectiveEvent, data_directive_attribute, 
                                            directive_event);
                                    }
                                }
                            }
                            if (has_toggle) {
                                var data_toggle_attribute = el.getAttribute(System.PageView().DATA_TOGGLE);
                                if (!String.IsNullOrEmpty(data_toggle_attribute)) {
                                    data_toggle_attribute = data_toggle_attribute.trim().toLowerCase();
                                    el.removeAttribute(System.PageView().DATA_TOGGLE);
                                    if (!String.IsNullOrEmpty(data_target_attribute)) {
                                        var data_animation_attribute = null;
                                        if (el.hasAttribute(System.PageView().DATA_ANIMATION)) {
                                            data_animation_attribute = el.getAttribute(System.PageView().DATA_ANIMATION);
                                            el.removeAttribute(System.PageView().DATA_ANIMATION);
                                        }
                                        if (data_toggle_attribute == "page") {
                                            var page_animation = -100;
                                            if (!String.IsNullOrEmpty(data_animation_attribute)) {
                                                try {
                                                    page_animation = $d.cast(System.Enum.Parse($d.typeOf(System.PageAnimation), 
                                                        data_animation_attribute), System.PageAnimation);
                                                }
                                                catch ($e) {
                                                    page_animation = -100;
                                                }
                                            }
                                            System.Root.jquery$1(el).on("click", $d.delegate(function(arg1_1, arg1_2) {
                                                System.UIManagerExtensions.setPageView$1(System.Root().get_ui(), 
                                                    data_target_attribute, data_parameter_attribute, 
                                                    page_animation, null);
                                                return false;
                                            }, this));
                                        }
                                        else if (data_toggle_attribute == "dialog") {
                                            var modal_animation = -100;
                                            if (!String.IsNullOrEmpty(data_animation_attribute)) {
                                                try {
                                                    modal_animation = $d.cast(System.Enum.Parse($d.typeOf(System.ModalAnimation), 
                                                        data_animation_attribute), System.ModalAnimation);
                                                }
                                                catch ($e1) {
                                                    modal_animation = -100;
                                                }
                                            }
                                            System.Root.jquery$1(el).on("click", $d.delegate(function(arg2_1, arg2_2) {
                                                System.UIManagerExtensions.openDialogView$2(System.Root().get_ui(), 
                                                    data_target_attribute, data_parameter_attribute, 
                                                    modal_animation, null, null);
                                                return false;
                                            }, this));
                                        }
                                    }
                                }
                            }
                            else if (has_command) {
                                var data_command_attribute = el.getAttribute(System.PageView().DATA_COMMAND);
                                if (!String.IsNullOrEmpty(data_command_attribute)) {
                                    data_command_attribute = data_command_attribute.trim();
                                    el.removeAttribute(System.PageView().DATA_COMMAND);
                                    var data_command_parameter_attribute = null;
                                    var data_command_name_attribute = data_command_attribute;
                                    if (data_command_name_attribute.indexOf(":") >= 0) {
                                        var data_command_parts = data_command_name_attribute.Split($d.array(System.Char, 
                                            [58 /*':'*/]));
                                        data_command_name_attribute = data_command_parts[0];
                                        if (data_command_parts.length > 1) {
                                            data_command_parameter_attribute = data_command_parts[1];
                                        }
                                    }
                                    if (!String.IsNullOrEmpty(data_command_name_attribute)) {
                                        data_command_name_attribute = data_command_name_attribute.trim();
                                    }
                                    if (!String.IsNullOrEmpty(data_command_parameter_attribute)) {
                                        data_command_parameter_attribute = data_command_parameter_attribute.trim();
                                    }
                                    if (context != null && bus != null) {
                                        var relay_command_object = System.Root.getKeypath(System.Object, 
                                            context, data_command_name_attribute);
                                        if ($d.is(relay_command_object, System.Windows.Input.ICommand)) {
                                            var relay_command = relay_command_object;
                                            System.Root.jquery$1(el).on("click", $d.delegate(function(arg3_1, arg3_2) {
                                                var relay_command_parameter = null;
                                                if (!String.IsNullOrEmpty(data_command_parameter_attribute)) {
                                                    relay_command_parameter = System.Root.getKeypath(System.Object, 
                                                        context, data_command_parameter_attribute);
                                                }
                                                relay_command.System$Windows$Input$ICommand$Execute(relay_command_parameter);
                                                return false;
                                            }, this));
                                        }
                                    }
                                }
                            }
                            if (has_binding) {
                                var data_binding_attribute = el.getAttribute(System.PageView().DATA_BINDING);
                                if (!String.IsNullOrEmpty(data_binding_attribute)) {
                                    data_binding_attribute = data_binding_attribute.trim();
                                    el.removeAttribute(System.PageView().DATA_BINDING);
                                    if (data_binding_attribute.indexOf(":") >= 0) {
                                        var data_binding_parts = data_binding_attribute.Split($d.array(System.Char, 
                                            [58 /*':'*/]));
                                        var data_dom_attribute = data_binding_parts[0];
                                        var data_model_attribute = data_binding_parts[1];
                                        if (!String.IsNullOrEmpty(data_dom_attribute) && !String.IsNullOrEmpty(data_model_attribute)) {
                                            data_dom_attribute = data_dom_attribute.trim();
                                            data_model_attribute = data_model_attribute.trim();
                                            var data_twoway_attribute = "none";
                                            if (el.hasAttribute(System.PageView().DATA_TWOWAY)) {
                                                data_twoway_attribute = el.getAttribute(System.PageView().DATA_TWOWAY);
                                                el.removeAttribute(System.PageView().DATA_TWOWAY);
                                                if (!String.IsNullOrEmpty(data_twoway_attribute)) {
                                                    data_twoway_attribute = data_twoway_attribute.trim().toLowerCase();
                                                }
                                            }
                                            if (context != null && bus != null) {
                                                if (data_dom_attribute.Equals$2("foreach", 5)) {
                                                    var html = String.Empty;
                                                    var child_count = el.childElementCount;
                                                    if (child_count > 0) {
                                                        for (var xx = 0; xx < child_count; xx++) {
                                                            var el_child = el.children[xx];
                                                            if (el_child.tagName.Equals$2("script", 5)) {
                                                                if (el_child.hasAttribute("type")) {
                                                                    var el_child_type = el_child.getAttribute("type");
                                                                    if (el_child_type.Equals$2("text/template", 
                                                                        5)) {
                                                                        html = el_child.innerHTML;
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    if (!String.IsNullOrEmpty(html)) {
                                                        var template = System.Template.create(el.id, 
                                                            html, null, null);
                                                        System.Root().get_ui().markup(template, el, context);
                                                        var foreach_model_message = data_model_attribute.toLowerCase() + "[]:foreach";
                                                        bus.Register(foreach_model_message, $d.delegate(function() {
                                                            System.Root().get_ui().markup(template, el, 
                                                                context);
                                                        }, this));
                                                    }
                                                    else {
                                                        console.warn(String.Format("Data Binding ({0}: {1}) requires a #template block", 
                                                            $d.array(System.Object, [data_dom_attribute, 
                                                                data_model_attribute])));
                                                    }
                                                }
                                                else {
                                                    var getter = System.Root.getKeypath(System.Object, 
                                                        context, data_model_attribute);
                                                    if (dymanic_dom_element[data_dom_attribute] != getter) {
                                                        dymanic_dom_element[data_dom_attribute] = getter;
                                                    }
                                                    var data_model_message = data_model_attribute.toLowerCase() + ":changed";
                                                    bus.Register$1(System.Object, data_model_message, 
                                                        $d.delegate(function(data) {
                                                            if (dymanic_dom_element[data_dom_attribute] != data) {
                                                                dymanic_dom_element[data_dom_attribute] = data;
                                                            }
                                                        }, this));
                                                    if (data_twoway_attribute == "change") {
                                                        System.Root.jquery$1(el).on("change", $d.delegate(function(arg4_1, arg4_2) {
                                                            var dom_change_data = dymanic_dom_element[data_dom_attribute];
                                                            if (dom_change_data != null) {
                                                                var last_change_marker = data_model_attribute.LastIndexOf(46 /*'.'*/);
                                                                if (last_change_marker >= 0) {
                                                                    var keypath_change = data_model_attribute.Substring$1(0, 
                                                                        last_change_marker);
                                                                    var keyprop_change = data_model_attribute.Substring(last_change_marker + 1);
                                                                    var keypath_change_object = System.Root.getKeypath(System.Object, 
                                                                        context, keypath_change);
                                                                    var keypath_change_property = $d.getTypeFromInst(keypath_change_object).GetProperty(keyprop_change);
                                                                    keypath_change_property.SetValue(keypath_change_object, 
                                                                        dom_change_data);
                                                                }
                                                                else {
                                                                    var context_change_property = $d.getTypeFromInst(context).GetProperty(data_model_attribute);
                                                                    context_change_property.SetValue(context, 
                                                                        dom_change_data);
                                                                }
                                                            }
                                                            return false;
                                                        }, this));
                                                    }
                                                    else if (data_twoway_attribute == "keyup") {
                                                        System.Root.jquery$1(el).on("keyup", $d.delegate(function(arg5_1, arg5_2) {
                                                            var dom_keyup_data = dymanic_dom_element[data_dom_attribute];
                                                            if (dom_keyup_data != null) {
                                                                var last_keyup_marker = data_model_attribute.LastIndexOf(46 /*'.'*/);
                                                                if (last_keyup_marker >= 0) {
                                                                    var keypath_keyup = data_model_attribute.Substring$1(0, 
                                                                        last_keyup_marker);
                                                                    var keyprop_keyup = data_model_attribute.Substring(last_keyup_marker + 1);
                                                                    var keypath_keyup_object = System.Root.getKeypath(System.Object, 
                                                                        context, keypath_keyup);
                                                                    var keypath_keyup_property = $d.getTypeFromInst(keypath_keyup_object).GetProperty(keyprop_keyup);
                                                                    keypath_keyup_property.SetValue(keypath_keyup_object, 
                                                                        dom_keyup_data);
                                                                }
                                                                else {
                                                                    var context_keyup_property = $d.getTypeFromInst(context).GetProperty(data_model_attribute);
                                                                    context_keyup_property.SetValue(context, 
                                                                        dom_keyup_data);
                                                                }
                                                            }
                                                            return false;
                                                        }, this));
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (has_content) {
                                var data_content_attribute = el.getAttribute(System.PageView().DATA_CONTENT);
                                if (!String.IsNullOrEmpty(data_content_attribute)) {
                                    data_content_attribute = data_content_attribute.toLowerCase().trim();
                                    el.removeAttribute(System.PageView().DATA_CONTENT);
                                    if (data_content_attribute == "view") {
                                        var view_callback = $d.delegate(function(view) {
                                            if (children == null)
                                                children = new (System.Collections.Generic.List$1(System.IViewController, 
                                                    33388).ctor)();
                                            children.Add(view);
                                            el.setAttribute("data-content-view", data_target_attribute);
                                        }, this);
                                        var view_errors = $d.delegate(function(error) {
                                            if (System.Errors().DefaultException != null) {
                                                System.Errors().DefaultException(error);
                                            }
                                            else {
                                                throw $d.signEx(error);
                                            }
                                        }, this);
                                        System.Root().get_ui().setContentView(data_target_attribute, 
                                            el, view_callback, view_errors, data_parameter_attribute);
                                    }
                                    else if (data_content_attribute == "stack") {
                                        var view_callback = $d.delegate(function(view) {
                                            if (children == null)
                                                children = new (System.Collections.Generic.List$1(System.IViewController, 
                                                    33388).ctor)();
                                            children.Add(view);
                                            el.setAttribute("data-content-stack", "System.StackViewController");
                                        }, this);
                                        var view_errors = $d.delegate(function(error) {
                                            if (System.Errors().DefaultException != null) {
                                                System.Errors().DefaultException(error);
                                            }
                                            else {
                                                throw $d.signEx(error);
                                            }
                                        }, this);
                                        System.Root().get_ui().setContentView("System.StackViewController", 
                                            el, view_callback, view_errors, data_parameter_attribute);
                                    }
                                }
                            }
                        }
                    }
                }
            }, this));
        }
        return children;
    };
    $t.directive = function UIManagerExtensions_directive(source, directive, handler) {
        if (String.IsNullOrEmpty(directive)) {
            throw new System.ArgumentNullException.ctor$1("directive");
        }
        if (handler == null) {
            throw new System.ArgumentNullException.ctor$1("handler");
        }
        var route_directive = directive.toLowerCase().trim();
        if (!$t()._directives.Contains(route_directive)) {
            $t()._directives.Add(route_directive);
            $t()._directive.Register$1(System.DirectiveEvent, route_directive, handler);
        }
    };
    $t.getDefaultModalAnimation = function UIManagerExtensions_getDefaultModalAnimation(source) {
        return System.UIManagerExtensions()._modal_animation;
    };
    $t.setDefaultModalAnimation = function UIManagerExtensions_setDefaultModalAnimation(source, animation) {
        System.UIManagerExtensions()._modal_animation = animation;
    };
    $t.getDefaultModalOptions = function UIManagerExtensions_getDefaultModalOptions(source) {
        return System.UIManagerExtensions()._modal_options;
    };
    $t.setDefaultModalOptions = function UIManagerExtensions_setDefaultModalOptions(source, options) {
        System.UIManagerExtensions()._modal_options = options;
    };
    $t.getCusomtModalEffect = function UIManagerExtensions_getCusomtModalEffect(source) {
        return System.UIManagerExtensions()._modal_effect;
    };
    $t.setCustomModalEffect = function UIManagerExtensions_setCustomModalEffect(source, custom) {
        System.UIManagerExtensions()._modal_effect = custom;
    };
    $t.closeDialogView = function UIManagerExtensions_closeDialogView(source) {
        System.Root().get_ui().get_dialog().close();
    };
    $t.openDialogView$6 = function UIManagerExtensions_openDialogView(T, source, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, null, animation, options, exception);
    };
    $t.openDialogView = function UIManagerExtensions_openDialogView(source, type, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView(System.Root().get_ui(), type, null, null, 
            animation, options, exception);
    };
    $t.openDialogView$8 = function UIManagerExtensions_openDialogView(T, source, parameter, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, parameter, animation, options, exception);
    };
    $t.openDialogView$2 = function UIManagerExtensions_openDialogView(source, type, parameter, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView(System.Root().get_ui(), type, null, parameter, 
            animation, options, exception);
    };
    $t.openDialogView$7 = function UIManagerExtensions_openDialogView(T, source, size, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$1(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, null, size, animation, options, exception);
    };
    $t.openDialogView$1 = function UIManagerExtensions_openDialogView(source, type, size, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$1(System.Root().get_ui(), type, null, 
            null, size, animation, options, exception);
    };
    $t.openDialogView$10 = function UIManagerExtensions_openDialogView(T, source, parameter, size, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$1(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, parameter, size, animation, options, exception);
    };
    $t.openDialogView$4 = function UIManagerExtensions_openDialogView(source, type, parameter, size, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$1(System.Root().get_ui(), type, null, 
            parameter, size, animation, options, exception);
    };
    $t.openDialogView$9 = function UIManagerExtensions_openDialogView(T, source, width, height, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$2(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, null, width, height, animation, options, exception);
    };
    $t.openDialogView$3 = function UIManagerExtensions_openDialogView(source, type, width, height, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$2(System.Root().get_ui(), type, null, 
            null, width, height, animation, options, exception);
    };
    $t.openDialogView$11 = function UIManagerExtensions_openDialogView(T, source, parameter, width, height, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$2(System.Root().get_ui(), $d.typeOf(T).get_FullName(), 
            null, parameter, width, height, animation, options, exception);
    };
    $t.openDialogView$5 = function UIManagerExtensions_openDialogView(source, type, parameter, width, height, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$2(System.Root().get_ui(), type, null, 
            parameter, width, height, animation, options, exception);
    };
    $t.createPageDialogView = function UIManagerExtensions_createPageDialogView(source, type, url, parameter, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$3(System.Root().get_ui(), type, url, parameter, 
            String.Empty, 0, 0, animation, options, exception);
    };
    $t.createPageDialogView$1 = function UIManagerExtensions_createPageDialogView(source, type, url, parameter, size, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$3(System.Root().get_ui(), type, url, parameter, 
            System.PageView.getModalDialogSize(size), 0, 0, animation, options, exception);
    };
    $t.createPageDialogView$2 = function UIManagerExtensions_createPageDialogView(source, type, url, parameter, width, height, animation, options, exception) {
        return System.UIManagerExtensions.createPageDialogView$3(System.Root().get_ui(), type, url, parameter, 
            String.Empty, width, height, animation, options, exception);
    };
    $t.createPageDialogView$3 = function UIManagerExtensions_createPageDialogView(source, type, url, parameter, size, width, height, animation, options, exception) {
        if (System.PageView().isAnimating)
            return false;
        var modal_options = (options == null) ? System.UIManagerExtensions.getDefaultModalOptions(System.Root().get_ui()) : options;
        var modal_animation = (animation == -100) ? System.UIManagerExtensions.getDefaultModalAnimation(System.Root().get_ui()) : animation;
        var dialog_options = (function() {
            var $obj = new System.OpenDialogOptions.ctor(modal_animation);
            $obj.size = size;
            $obj.width = width;
            $obj.height = height;
            $obj.open = $d.delegate(function() {
                if (modal_options != null && modal_options.open != null) {
                    modal_options.open();
                }
            }, this);
            $obj.complete = $d.delegate(function() {
                if (modal_options != null && modal_options.complete != null) {
                    modal_options.complete();
                }
            }, this);
            $obj.close = $d.delegate(function() {
                if (modal_options != null && modal_options.close != null) {
                    modal_options.close();
                }
            }, this);
            return $obj;
        }).call(this);
        if (modal_options != null) {
            dialog_options.background = modal_options.background;
            dialog_options.overlayColor = modal_options.overlayColor;
            dialog_options.overlayClose = modal_options.overlayClose;
            dialog_options.zfactor = modal_options.zfactor;
            dialog_options.escKey = modal_options.escKey;
        }
        var result = System.Root().get_ui().createContentView(type, dialog_options.get_content(), url, 
            false, true, parameter, -10, $d.delegate(function(view) {
                dialog_options.set_view(view);
            }, this), $d.delegate(function(error) {
                if (exception != null) {
                    exception(error);
                }
                else if (System.Errors().DefaultException != null) {
                    System.Errors().DefaultException(error);
                }
                else {
                    throw $d.signEx(error);
                }
            }, this));
        if (result) {
            System.Root().get_ui().get_dialog().open(dialog_options);
        }
        return result;
    };
    $t.getDefaultPageAnimation = function UIManagerExtensions_getDefaultPageAnimation(source) {
        return System.UIManagerExtensions()._animation;
    };
    $t.setDefaultPageAnimation = function UIManagerExtensions_setDefaultPageAnimation(source, animation) {
        System.UIManagerExtensions()._animation = animation;
    };
    $t.getCusomtPageAnimation = function UIManagerExtensions_getCusomtPageAnimation(source) {
        return System.UIManagerExtensions()._custom;
    };
    $t.setCustomPageAnimation = function UIManagerExtensions_setCustomPageAnimation(source, custom) {
        System.UIManagerExtensions()._custom = custom;
    };
    $t.getAnimationEndEvent = function UIManagerExtensions_getAnimationEndEvent(source) {
        return System.UIManagerExtensions()._handler;
    };
    $t.setAnimationEndEvent = function UIManagerExtensions_setAnimationEndEvent(source, handler) {
        System.UIManagerExtensions()._handler = handler;
    };
    $t.reset = function UIManagerExtensions_reset(source) {
        window.location.replace("#");
    };
    $t.navigate = function UIManagerExtensions_navigate(source, path, history) {
        if (String.IsNullOrEmpty(path)) {
            throw new System.ArgumentNullException.ctor$1("path");
        }
        if (!path.StartsWith("/")) {
            throw new System.Exception.ctor$1("Navigate must start with '/' in route path: " + path);
        }
        System.Root.delay(50, $d.delegate(function() {
            var location_path = ("#" + path);
            if (history == 0) {
                window.location.href = location_path;
            }
            else {
                window.location.replace(location_path);
            }
        }, this));
    };
    $t.route = function UIManagerExtensions_route(source, path, handler) {
        if (String.IsNullOrEmpty(path)) {
            throw new System.ArgumentNullException.ctor$1("path");
        }
        if (handler == null) {
            throw new System.ArgumentNullException.ctor$1("handler");
        }
        if (!path.StartsWith("/")) {
            throw new System.Exception.ctor$1("Route must start with '/' in register path: " + path);
        }
        if (path.indexOf("?") >= 0) {
            throw new System.Exception.ctor$1("Do not include query string operator '?' in register path: " + path);
        }
        if (path.indexOf("&") >= 0) {
            throw new System.Exception.ctor$1("Do not include query string operator '&' in register path: " + path);
        }
        if ($t()._router == null) {
            $t()._router = new System.Gateway.Events.EventBus.ctor();
            window.onhashchange = $d.delegate(function(e) {
                var location_hash = location.hash;
                if (location_hash.StartsWith("#/")) {
                    try {
                        e.preventDefault();
                    }
                    catch ($e) {}
                    try {
                        e.stopImmediatePropagation();
                    }
                    catch ($e1) {}
                    var hash_path = location_hash.trim();
                    var hash_query = String.Empty;
                    var hash_parameters = null;
                    var query_index = location_hash.indexOf("?");
                    if (query_index >= 0) {
                        hash_path = location_hash.Substring$1(0, query_index);
                        hash_query = location_hash.Substring(query_index);
                        if (!String.IsNullOrEmpty(hash_query)) {
                            var query_buffer = String.Empty;
                            var query_data = hash_query.Replace$1("?", "");
                            if (query_data.indexOf("&") >= 0) {
                                var p_parts = query_data.Split($d.array(System.Char, [38 /*'&'*/]));
                                for (var $i = 0, $length = p_parts.length; $i < $length; $i++) {
                                    var part_data = p_parts[$i];
                                    if (part_data.indexOf("=") >= 0) {
                                        var p_q_parts = part_data.Split($d.array(System.Char, [61 /*'='*/]));
                                        query_buffer += String.Format("\"{0}\":\"{1}\", ", $d.array(System.Object, 
                                            [p_q_parts[0], p_q_parts[1]]));
                                    }
                                }
                            }
                            else {
                                if (query_data.indexOf("=") >= 0) {
                                    var q_parts = query_data.Split($d.array(System.Char, [61 /*'='*/]));
                                    query_buffer += String.Format("\"{0}\":\"{1}\"", $d.array(System.Object, 
                                        [q_parts[0], q_parts[1]]));
                                }
                            }
                            if (!String.IsNullOrEmpty(query_buffer)) {
                                query_buffer = query_buffer.trim();
                                if (query_buffer.EndsWith(",")) {
                                    query_buffer = query_buffer.Substring$1(0, (query_buffer.length - 1));
                                }
                                hash_parameters = JSON.parse(("{ " + query_buffer + " }"));
                            }
                        }
                    }
                    var route_key = hash_path.toLowerCase().trim();
                    var route_event = new System.RouteEvent.ctor(hash_path, hash_query, hash_parameters);
                    if ($t()._routes.Contains(route_key)) {
                        $t()._router.Notify$2(System.RouteEvent, route_key, route_event);
                    }
                    else {
                        if (System.RoutePath().get_NotFound() != null) {
                            System.RoutePath().get_NotFound()(route_event);
                        }
                    }
                }
                return true;
            }, this);
        }
        var route_path = ("#" + path.toLowerCase().trim());
        if (!$t()._routes.Contains(route_path)) {
            $t()._routes.Add(route_path);
            $t()._router.Register$1(System.RouteEvent, route_path, handler);
        }
    };
    $t.missing = function UIManagerExtensions_missing(source, handler) {
        System.RoutePath().set_NotFound(handler);
    };
});
$d.define(System.LoaderEvent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["id", 20, 1], ["url", 20, 1], ["type", 20, 1], ["num", 45, 1], ["total", 45, 1]], [["get_id", p.get_id, 6, 20], ["set_id", p.set_id, 1, 38, [["value", 20, 0]]], ["get_url", p.get_url, 6, 20], ["set_url", p.set_url, 1, 38, [["value", 20, 0]]], ["get_type", p.get_type, 6, 20], ["set_type", p.set_type, 1, 38, [["value", 20, 0]]], ["get_num", p.get_num, 6, 45], ["set_num", p.set_num, 1, 38, [["value", 45, 0]]], ["get_total", p.get_total, 6, 45], ["set_total", p.set_total, 1, 38, [["value", 45, 0]]]], [["ctor", t.ctor, 6, [["i", 20, 0], ["u", 20, 1], ["t", 20, 2], ["nn", 45, 3], ["tt", 45, 4]]]], [["id", 20, 0, 1], ["url", 20, 2, 3], ["type", 20, 4, 5], ["num", 45, 6, 7], ["total", 45, 8, 9]]]; };
    $t.$ator = function() {
        this.id = null;
        this.url = null;
        this.type = null;
        this.num = 0;
        this.total = 0;
    };
    $p.get_id = function LoaderEvent_get_id() { return this.id; };
    $p.set_id = function LoaderEvent_set_id(value) { this.id = value;return value; };
    $p.get_url = function LoaderEvent_get_url() { return this.url; };
    $p.set_url = function LoaderEvent_set_url(value) { this.url = value;return value; };
    $p.get_type = function LoaderEvent_get_type() { return this.type; };
    $p.set_type = function LoaderEvent_set_type(value) { this.type = value;return value; };
    $p.get_num = function LoaderEvent_get_num() { return this.num; };
    $p.set_num = function LoaderEvent_set_num(value) { this.num = value;return value; };
    $p.get_total = function LoaderEvent_get_total() { return this.total; };
    $p.set_total = function LoaderEvent_set_total(value) { this.total = value;return value; };
    $t.ctor = function LoaderEvent(i, u, t, nn, tt) {
        $t.$baseType.ctor.call(this);
        this.set_id(i);
        this.set_url(u);
        this.set_type(t);
        this.set_num(nn);
        this.set_total(tt);
    };
});
$d.define(System.DirectiveEvent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["directive", 20, 1]], [["get_directive", p.get_directive, 6, 20], ["set_directive", p.set_directive, 1, 38, [["value", 20, 0]]], ["get_element", p.get_element, 6, HTMLElement], ["set_element", p.set_element, 1, 38, [["value", HTMLElement, 0]]]], [["ctor", t.ctor, 6, [["d", 20, 0], ["e", HTMLElement, 1]]]], [["directive", 20, 0, 1], ["element", HTMLElement, 2, 3]]]; };
    $t.$ator = function() {
        this.directive = null;
        this.element = null;
    };
    $p.get_directive = function DirectiveEvent_get_directive() { return this.directive; };
    $p.set_directive = function DirectiveEvent_set_directive(value) { this.directive = value;return value; };
    $p.get_element = function DirectiveEvent_get_element() { return this.element; };
    $p.set_element = function DirectiveEvent_set_element(value) { this.element = value;return value; };
    $t.ctor = function DirectiveEvent(d, e) {
        $t.$baseType.ctor.call(this);
        this.set_directive(d);
        this.set_element(e);
    };
});
$d.define(System.RouteEvent, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["path", 20, 1], ["query", 20, 1], ["parameters", 20, 1]], [["get_path", p.get_path, 6, 20], ["set_path", p.set_path, 1, 38, [["value", 20, 0]]], ["get_query", p.get_query, 6, 20], ["set_query", p.set_query, 1, 38, [["value", 20, 0]]], ["get_parameters", p.get_parameters, 6, 20], ["set_parameters", p.set_parameters, 1, 38, [["value", 20, 0]]]], [["ctor", t.ctor, 6, [["p", 20, 0], ["q", 20, 1], ["x", System.Object, 2, 4096, null]]]], [["path", 20, 0, 1], ["query", 20, 2, 3], ["parameters", 20, 4, 5]]]; };
    $t.$ator = function() {
        this.path = null;
        this.query = null;
        this.parameters = null;
    };
    $p.get_path = function RouteEvent_get_path() { return this.path; };
    $p.set_path = function RouteEvent_set_path(value) { this.path = value;return value; };
    $p.get_query = function RouteEvent_get_query() { return this.query; };
    $p.set_query = function RouteEvent_set_query(value) { this.query = value;return value; };
    $p.get_parameters = function RouteEvent_get_parameters() { return this.parameters; };
    $p.set_parameters = function RouteEvent_set_parameters(value) { this.parameters = value;return value; };
    $t.ctor = function RouteEvent(p, q, x) {
        $t.$baseType.ctor.call(this);
        this.set_path(p);
        this.set_query(q);
        this.set_parameters(x);
    };
});
System.RouteHistory = $d.typeEnum("System.RouteHistory", 45, $asm, 257, ["Enabled", "Disabled"], [0, 1]);
$d.define(System.RoutePath, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["NotFound", System.Action$1(System.RouteEvent, 63425), 17]], [["get_NotFound", t.get_NotFound, 22, System.Action$1(System.RouteEvent, 63425)], ["set_NotFound", t.set_NotFound, 22, 38, [["value", System.Action$1(System.RouteEvent, 63425), 0]]]], null, [["NotFound", System.Action$1(System.RouteEvent, 63425), 0, 1]]]; };
    $t.cctor = function() {
        $t.NotFound = null;
    };
    $t.get_NotFound = function RoutePath_get_NotFound() { return $t().NotFound; };
    $t.set_NotFound = function RoutePath_set_NotFound(value) { $t().NotFound = value;return value; };
});
$d.define(System.UIManager, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["ROOT_CONTAINER", 20, 86, "root"], ["VIEWPORT_CLASS", 20, 86, "viewport"], ["CONTENT_VIEW", 20, 86, "ct-view"], ["CONTENT_VIEW_ONTOP", 20, 86, "ct-view-ontop"], ["CONTENT_VIEW_CURRENT", 20, 86, "ct-view-current"], ["CONTENT_VIEW_PERSPECTIVE", 20, 86, "ct-perspective"], ["MODAL_SHOW", 20, 86, "md-show"], ["MODAL_DIALOG", 20, 86, "md-modal"], ["MODAL_DIALOG_CONTENT", 20, 86, "md-content"], ["MODAL_DIALOG_CONTENT_SELECT", 20, 86, ".md-content"], ["MODAL_DIALOG_CONTENT_SCALED", 20, 86, "md-scaled"], ["MODAL_DIALOG_OVERLAY", 20, 86, "md-overlay"], ["MODAL_DIALOG_OVERLAY_SELECT", 20, 86, ".md-overlay"], ["MODAL_DIALOG_PERSPECTIVE", 20, 86, "md-perspective"], ["autoSplash", 39, 6], ["onAlertMessage", System.UIManager.AlertDelegate, 1], ["onRenderMarkup", System.UIManager.MarkupDeleagte, 1], ["onSplashContainer", System.UIManager.SplashDelegate, 1], ["onUnsplashContainer", System.Action, 1], ["dialog", System.PageDialog, 1]], [["get_onAlertMessage", p.get_onAlertMessage, 6, System.UIManager.AlertDelegate], ["set_onAlertMessage", p.set_onAlertMessage, 6, 38, [["value", System.UIManager.AlertDelegate, 0]]], ["get_onRenderMarkup", p.get_onRenderMarkup, 6, System.UIManager.MarkupDeleagte], ["set_onRenderMarkup", p.set_onRenderMarkup, 6, 38, [["value", System.UIManager.MarkupDeleagte, 0]]], ["get_onSplashContainer", p.get_onSplashContainer, 6, System.UIManager.SplashDelegate], ["set_onSplashContainer", p.set_onSplashContainer, 6, 38, [["value", System.UIManager.SplashDelegate, 0]]], ["get_onUnsplashContainer", p.get_onUnsplashContainer, 6, System.Action], ["set_onUnsplashContainer", p.set_onUnsplashContainer, 6, 38, [["value", System.Action, 0]]], ["get_dialog", p.get_dialog, 6, System.PageDialog], ["set_dialog", p.set_dialog, 1, 38, [["value", System.PageDialog, 0]]], ["alert", p.alert, 6, 38, [["message", 20, 0], ["type", 20, 1, 4096, null], ["caption", 20, 2, 4096, null], ["callback", 4, 3, 4096, null]]], ["markup", p.markup$1, 6, 38, [["html", 20, 0], ["element", HTMLElement, 1], ["context", 1, 2, 4096, null], ["options", 1, 3, 4096, null], ["exec", 1, 4, 4096, null], ["id", 20, 5, 4096, null]]], ["markup", p.markup, 6, 38, [["template", System.MarkupTemplate, 0], ["element", HTMLElement, 1], ["context", 1, 2]]], ["get_splasher", t.get_splasher, 22, HTMLDivElement], ["set_splasher", t.set_splasher, 17, 38, [["value", HTMLDivElement, 0]]], ["splash", p.splash, 6, 38, [["container", HTMLElement, 0, 4096, null], ["clear", 39, 1, 4096, false]]], ["unsplash", p.unsplash, 6], (function(T) { return ["setContentView", p.setContentView$3, 6, 39, [["container_id", 20, 0], ["success", System.Action$1(System.IViewController, 33388), 1], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["parameter", 1, 3, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["setContentViewAsync", p.setContentViewAsync$3, 6, System.Threading.Tasks.Task$1(System.IViewController, 33388), [["container_id", 20, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["parameter", 1, 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["setContentView", p.setContentView$1, 6, 39, [["type", 20, 0], ["container_id", 20, 1], ["success", System.Action$1(System.IViewController, 33388), 2], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["parameter", 1, 4, 4096, null]]], ["setContentViewAsync", p.setContentViewAsync$1, 6, System.Threading.Tasks.Task$1(System.IViewController, 33388), [["type", 20, 0], ["container_id", 20, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["parameter", 1, 3, 4096, null]]], (function(T) { return ["setContentView", p.setContentView$2, 6, 39, [["container", HTMLElement, 0], ["success", System.Action$1(System.IViewController, 33388), 1], ["failure", System.Action$1(System.Exception, 1439), 2, 4096, null], ["parameter", 1, 3, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["setContentViewAsync", p.setContentViewAsync$2, 6, System.Threading.Tasks.Task$1(System.IViewController, 33388), [["container", HTMLElement, 0], ["exception", System.Action$1(System.Exception, 1439), 1, 4096, null], ["parameter", 1, 2, 4096, null]], null, [T]]; }).call(this, $d.typeParam("T")), ["setContentView", p.setContentView, 6, 39, [["type", 20, 0], ["container", HTMLElement, 1], ["success", System.Action$1(System.IViewController, 33388), 2], ["failure", System.Action$1(System.Exception, 1439), 3, 4096, null], ["parameter", 1, 4, 4096, null]]], ["setContentViewAsync", p.setContentViewAsync, 6, System.Threading.Tasks.Task$1(System.IViewController, 33388), [["type", 20, 0], ["container", HTMLElement, 1], ["exception", System.Action$1(System.Exception, 1439), 2, 4096, null], ["parameter", 1, 3, 4096, null]]], ["createContentView", p.createContentView, 3, 39, [["type", 20, 0], ["container", HTMLElement, 1], ["url", 20, 2], ["page", 39, 3], ["root", 39, 4], ["parameter", 1, 5], ["animation", System.PageAnimation, 6], ["success", System.Action$1(System.IViewController, 33388), 7], ["failure", System.Action$1(System.Exception, 1439), 8, 4096, null]]], ["createContentViewAsync", p.createContentViewAsync, 3, System.Threading.Tasks.Task$1(System.IViewController, 33388), [["type", 20, 0], ["container", HTMLElement, 1], ["url", 20, 2], ["page", 39, 3], ["root", 39, 4], ["parameter", 1, 5], ["animation", System.PageAnimation, 6], ["exception", System.Action$1(System.Exception, 1439), 7, 4096, null]]]], [["ctor", t.ctor, 6]], [["onAlertMessage", System.UIManager.AlertDelegate, 0, 1], ["onRenderMarkup", System.UIManager.MarkupDeleagte, 2, 3], ["onSplashContainer", System.UIManager.SplashDelegate, 4, 5], ["onUnsplashContainer", System.Action, 6, 7], ["dialog", System.PageDialog, 8, 9], ["splasher", HTMLDivElement, 13, 14]]]; };
    $t.cctor = function() {
        $t.ROOT_CONTAINER = "root";
        $t.VIEWPORT_CLASS = "viewport";
        $t.CONTENT_VIEW = "ct-view";
        $t.CONTENT_VIEW_ONTOP = "ct-view-ontop";
        $t.CONTENT_VIEW_CURRENT = "ct-view-current";
        $t.CONTENT_VIEW_PERSPECTIVE = "ct-perspective";
        $t.MODAL_SHOW = "md-show";
        $t.MODAL_DIALOG = "md-modal";
        $t.MODAL_DIALOG_CONTENT = "md-content";
        $t.MODAL_DIALOG_CONTENT_SELECT = ".md-content";
        $t.MODAL_DIALOG_CONTENT_SCALED = "md-scaled";
        $t.MODAL_DIALOG_OVERLAY = "md-overlay";
        $t.MODAL_DIALOG_OVERLAY_SELECT = ".md-overlay";
        $t.MODAL_DIALOG_PERSPECTIVE = "md-perspective";
        $t.splasher = null;
    };
    $t.$ator = function() {
        this.autoSplash = true;
        this.onAlertMessage = null;
        this.onRenderMarkup = null;
        this.onSplashContainer = null;
        this.onUnsplashContainer = null;
        this.dialog = null;
    };
    $p.get_onAlertMessage = function UIManager_get_onAlertMessage() { return this.onAlertMessage; };
    $p.set_onAlertMessage = function UIManager_set_onAlertMessage(value) { this.onAlertMessage = value;return value; };
    $t.AlertDelegate = $d.type("AlertDelegate", 65, $t, function($t, $p) {
        $t.$typeInfo = function(t, p) { return [258, null, [["Invoke", p.Invoke, 6, 38, [["message", 20, 0], ["type", 20, 1, 4096, null], ["caption", 20, 2, 4096, null], ["callback", 4, 3, 4096, null]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
    });
    $p.get_onRenderMarkup = function UIManager_get_onRenderMarkup() { return this.onRenderMarkup; };
    $p.set_onRenderMarkup = function UIManager_set_onRenderMarkup(value) { this.onRenderMarkup = value;return value; };
    $t.MarkupDeleagte = $d.type("MarkupDeleagte", 65, $t, function($t, $p) {
        $t.$typeInfo = function(t, p) { return [258, null, [["Invoke", p.Invoke, 6, 38, [["element", HTMLElement, 0], ["html", 20, 1]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
    });
    $p.get_onSplashContainer = function UIManager_get_onSplashContainer() { return this.onSplashContainer; };
    $p.set_onSplashContainer = function UIManager_set_onSplashContainer(value) { this.onSplashContainer = value;return value; };
    $t.SplashDelegate = $d.type("SplashDelegate", 65, $t, function($t, $p) {
        $t.$typeInfo = function(t, p) { return [258, null, [["Invoke", p.Invoke, 6, 38, [["container", HTMLElement, 0, 4096, null], ["clear", 39, 1, 4096, false]]]], [["ctor", t.ctor, 6, [["object", 1, 0], ["method", 53, 1]]]]]; };
    });
    $p.get_onUnsplashContainer = function UIManager_get_onUnsplashContainer() { return this.onUnsplashContainer; };
    $p.set_onUnsplashContainer = function UIManager_set_onUnsplashContainer(value) { this.onUnsplashContainer = value;return value; };
    $p.get_dialog = function UIManager_get_dialog() { return this.dialog; };
    $p.set_dialog = function UIManager_set_dialog(value) { this.dialog = value;return value; };
    $t.ctor = function UIManager() {
        $t.$baseType.ctor.call(this);
        this.set_dialog(new System.PageDialog.ctor());
    };
    $p.alert = function UIManager_alert(message, type, caption, callback) {
        if (this.get_onAlertMessage() != null) {
            this.get_onAlertMessage()(message, type, caption, callback);
        }
        else {
            window.alert(message);
        }
    };
    $p.markup$1 = function UIManager_markup(html, element, context, options, exec, id) {
        if (context != null) {
            var template = System.Template.create(id, html, exec, null);
            template.set_options(options);
            var parsed = template.render(context);
            if (this.get_onRenderMarkup() != null) {
                this.get_onRenderMarkup()(element, parsed);
            }
            else {
                System.Root.setContent(element, parsed);
            }
        }
        else {
            if (this.get_onRenderMarkup() != null) {
                this.get_onRenderMarkup()(element, html);
            }
            else {
                System.Root.setContent(element, html);
            }
        }
    };
    $p.markup = function UIManager_markup(template, element, context) {
        var parsed = template.render(context);
        if (this.get_onRenderMarkup() != null) {
            this.get_onRenderMarkup()(element, parsed);
        }
        else {
            System.Root.setContent(element, parsed);
        }
    };
    $t.get_splasher = function UIManager_get_splasher() { return $t().splasher; };
    $t.set_splasher = function UIManager_set_splasher(value) { $t().splasher = value;return value; };
    $p.splash = function UIManager_splash(container, clear) {
        if (this.get_onSplashContainer() != null) {
            this.get_onSplashContainer()(container, clear);
        }
        else {
            var splash_classname = "splash";
            if (System.UIManager().get_splasher() == null) {
                System.UIManager().set_splasher(System.Root.create$1(HTMLDivElement, "div"));
                System.UIManager().get_splasher().classList.add(splash_classname);
            }
            var parent = container || document.body;
            if (clear) {
                System.Root.emptyContent(parent);
            }
            parent.appendChild(System.UIManager().get_splasher());
        }
    };
    $p.unsplash = function UIManager_unsplash() {
        if (this.get_onUnsplashContainer() != null) {
            this.get_onUnsplashContainer()();
        }
        else {
            if (System.UIManager().get_splasher() != null) {
                System.Root.removeElement(System.UIManager().get_splasher());
                System.UIManager().set_splasher(null);
            }
        }
    };
    $p.setContentView$3 = function UIManager_setContentView(T, container_id, success, failure, parameter) {
        return this.createContentView($d.typeOf(T).get_FullName(), System.Root.get$4(HTMLElement, container_id), 
            null, false, false, parameter, -10, success, failure);
    };
    $p.setContentViewAsync$3 = function UIManager_setContentViewAsync(T, container_id, exception, parameter) {
        return this.createContentViewAsync($d.typeOf(T).get_FullName(), System.Root.get$4(HTMLElement, 
            container_id), null, false, false, parameter, -10, exception);
    };
    $p.setContentView$1 = function UIManager_setContentView(type, container_id, success, failure, parameter) {
        return this.createContentView(type, System.Root.get$4(HTMLElement, container_id), null, false, 
            false, parameter, -10, success, failure);
    };
    $p.setContentViewAsync$1 = function UIManager_setContentViewAsync(type, container_id, exception, parameter) {
        return this.createContentViewAsync(type, System.Root.get$4(HTMLElement, container_id), null, 
            false, false, parameter, -10, exception);
    };
    $p.setContentView$2 = function UIManager_setContentView(T, container, success, failure, parameter) {
        return this.createContentView($d.typeOf(T).get_FullName(), container, null, false, false, parameter, 
            -10, success, failure);
    };
    $p.setContentViewAsync$2 = function UIManager_setContentViewAsync(T, container, exception, parameter) {
        return this.createContentViewAsync($d.typeOf(T).get_FullName(), container, null, false, false, 
            parameter, -10, exception);
    };
    $p.setContentView = function UIManager_setContentView(type, container, success, failure, parameter) {
        return this.createContentView(type, container, null, false, false, parameter, -10, success, failure);
    };
    $p.setContentViewAsync = function UIManager_setContentViewAsync(type, container, exception, parameter) {
        return this.createContentViewAsync(type, container, null, false, false, parameter, -10, exception);
    };
    $p.createContentView = function UIManager_createContentView(type, container, url, page, root, parameter, animation, success, failure) {
        try {
            var view = System.Type.GetType(type);
            if (view == null) {
                throw new System.Exception.ctor$1("Failed to locate class view type: " + type);
            }
            var i_view = null;
            var obj = System.Activator.CreateInstance(view);
            if (obj != null && $d.is(obj, System.IViewController)) {
                i_view = $d.cast(obj, System.ViewController);
                var content_callback = $d.delegate(function(data) {
                    if (i_view.get_template() != null && !i_view.get_template().compiled()) {
                        i_view.get_template().compile(data.get_Content());
                    }
                    var global_animation = System.UIManagerExtensions.getDefaultPageAnimation(System.Root().get_ui());
                    if (animation == -10 || global_animation == -10) {
                        System.PageView.init(page, root, -10, i_view, container, parameter, false);
                    }
                    else {
                        var v_animation = (animation != -100) ? animation : global_animation;
                        System.PageView.init(page, root, v_animation, i_view, container, parameter, false);
                    }
                    if (success != null) {
                        success(i_view);
                    }
                }, this);
                var view_content = new System.Gateway.TextContent.ctor();
                if (i_view.get_template() != null && !i_view.get_template().compiled()) {
                    if (i_view.get_template().mode == 1) {
                        var script_view = i_view;
                        if (String.IsNullOrEmpty(script_view.get_template().get_id())) {
                            throw new System.Exception.ctor$1("Null script view controller template id property for view: " + view.get_Name());
                        }
                        var script_element_content = System.Root.get$4(HTMLScriptElement, script_view.get_template().get_id());
                        if (script_element_content != null && script_element_content.tagName.toLowerCase() == "script") {
                            view_content.set_Content(script_element_content.innerHTML || String.Empty);
                            content_callback(view_content);
                        }
                        else {
                            throw new System.Exception.ctor$1("Null or invalid template id specfied for view: " + view.get_Name());
                        }
                    }
                    else if (i_view.get_template().mode == 2) {
                        var ajax_script_view = i_view;
                        if (String.IsNullOrEmpty(ajax_script_view.get_template().get_id())) {
                            throw new System.Exception.ctor$1("Null ajax script view controller template id property for view: " + view.get_Name());
                        }
                        if (String.IsNullOrEmpty(ajax_script_view.get_template().get_doc())) {
                            throw new System.Exception.ctor$1("Null ajax script view controller document id property for view: " + view.get_Name());
                        }
                        if (String.IsNullOrEmpty(ajax_script_view.get_template().get_src())) {
                            throw new System.Exception.ctor$1("Null ajax script view controller src property for view: " + view.get_Name());
                        }
                        var ajax_script_element = System.Root.get$4(HTMLObjectElement, ajax_script_view.get_template().get_doc());
                        if (ajax_script_element != null) {
                            var ajax_script_document = ajax_script_element.contentDocument;
                            if (ajax_script_document != null) {
                                var ajax_script_element_content = System.Root.get$5(HTMLScriptElement, 
                                    ajax_script_document, ajax_script_view.get_template().get_id());
                                if (ajax_script_element_content != null && ajax_script_element_content.tagName.toLowerCase() == "script") {
                                    view_content.set_Content(ajax_script_element_content.innerHTML || String.Empty);
                                    content_callback(view_content);
                                }
                                else {
                                    throw new System.Exception.ctor$1("Null or invalid template id specfied for view: " + view.get_Name());
                                }
                            }
                            else {
                                throw new System.Exception.ctor$1("Null or invalid HTMLObjectElement.contentDocument property specfied for view: " + view.get_Name());
                            }
                        }
                        else {
                            if (this.autoSplash) {
                                this.splash(container, false);
                            }
                            System.Root.injectDocument$1(ajax_script_view.get_template().get_doc(), ajax_script_view.get_template().get_src(), 
                                $d.delegate(function(e1) {
                                    if (this.autoSplash) {
                                        this.unsplash();
                                    }
                                    var injected_ajax_script_element = System.Root.get$4(HTMLObjectElement, 
                                        ajax_script_view.get_template().get_doc());
                                    if (injected_ajax_script_element != null) {
                                        var injected_ajax_script_document = injected_ajax_script_element.contentDocument;
                                        if (injected_ajax_script_document != null) {
                                            var injected_ajax_script_element_content = System.Root.get$5(HTMLScriptElement, 
                                                injected_ajax_script_document, ajax_script_view.get_template().get_id());
                                            if (injected_ajax_script_element_content != null && injected_ajax_script_element_content.tagName.toLowerCase() == "script") {
                                                view_content.set_Content(injected_ajax_script_element_content.innerHTML || String.Empty);
                                                content_callback(view_content);
                                            }
                                            else {
                                                throw new System.Exception.ctor$1("Null or invalid injected template id specfied for view: " + view.get_Name());
                                            }
                                        }
                                        else {
                                            throw new System.Exception.ctor$1("Null or invalid injected HTMLObjectElement.contentDocument property specfied for view: " + view.get_Name());
                                        }
                                    }
                                }, this), $d.delegate(function(error) {
                                    if (this.autoSplash) {
                                        this.unsplash();
                                    }
                                    if (failure != null) {
                                        failure(error);
                                    }
                                    else if (System.Errors().DefaultException != null) {
                                        System.Errors().DefaultException(error);
                                    }
                                    else {
                                        throw $d.signEx(error);
                                    }
                                }, this));
                        }
                    }
                    else {
                        view_content.set_Content(String.Empty);
                        content_callback(view_content);
                    }
                }
                else {
                    view_content.set_Content(String.Empty);
                    content_callback(view_content);
                }
            }
            else {
                throw new System.Exception.ctor$1("Failed to create IViewController type: " + view.get_Name());
            }
        }
        catch ($e) {
            $e = System.Exception.Wrap($e);
            if (this.autoSplash) {
                this.unsplash();
            }
            if (failure != null) {
                failure($e);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException($e);
            }
            else {
                throw $d.signEx($e);
            }
        }
        return true;
    };
    $p.createContentViewAsync = function UIManager_createContentViewAsync(type, container, url, page, root, parameter, animation, exception) {
        var tasker = new (System.Threading.Tasks.TaskCompletionSource$1(System.IViewController, 33388).ctor)();
        var success = $d.delegate(function(result) {
            if (!tasker.TrySetResult(result)) {
                var failed = new System.Exception.ctor$1("Failed to set task result object.");
                if (exception != null) {
                    exception(failed);
                }
                else {
                    if (!tasker.TrySetException$1(failed)) {
                        console.error(failed.get_Message());
                    }
                }
            }
        }, this);
        var failure = $d.delegate(function(error) {
            if (exception != null) {
                exception(error);
            }
            else if (System.Errors().DefaultException != null) {
                System.Errors().DefaultException(error);
            }
            else {
                if (!tasker.TrySetException$1(error)) {
                    console.error(error.get_Message());
                }
            }
        }, this);
        this.createContentView(type, container, url, page, root, parameter, animation, success, failure);
        return tasker.get_Task();
    };
});
$d.define(System.ComponentModel.ChangeListener, null, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [129, [["_propertyName", 20, 4]], [["Unsubscribe", null, 4], ["add_PropertyChanged", p.add_PropertyChanged, 6, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["remove_PropertyChanged", p.remove_PropertyChanged, 6, 38, [["value", System.ComponentModel.PropertyChangedEventHandler, 0]]], ["RaisePropertyChanged", p.RaisePropertyChanged, 4, 38, [["propertyName", 20, 0]]], ["Dispose", p.Dispose, 6], ["OnDispose", p.OnDispose, 4], ["Create", t.Create, 22, System.ComponentModel.ChangeListener, [["value", System.ComponentModel.INotifyPropertyChanged, 0]]], ["Create", t.Create$1, 22, System.ComponentModel.ChangeListener, [["value", System.ComponentModel.INotifyPropertyChanged, 0], ["propertyName", 20, 1]]]], [["ctor", t.ctor, 4]], null, [["PropertyChanged", System.ComponentModel.PropertyChangedEventHandler, 1, 2]]]; };
    $t.$ator = function() {
        this._propertyName = null;
        this.PropertyChanged = null;
    };
    $t.ctor = function ChangeListener() {
        $t.$baseType.ctor.call(this);
    };
    $p.add_PropertyChanged = function ChangeListener_add_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Combine(this.PropertyChanged, value);
    };
    $p.remove_PropertyChanged = function ChangeListener_remove_PropertyChanged(value) {
        this.PropertyChanged = System.Delegate.Remove(this.PropertyChanged, value);
    };
    $p.RaisePropertyChanged = function ChangeListener_RaisePropertyChanged(propertyName) {
        var temp = this.PropertyChanged;
        if (temp != null) {
            temp(this, new System.ComponentModel.PropertyChangedEventArgs.ctor(propertyName));
        }
    };
    $p.Dispose = function ChangeListener_Dispose() {
        this.OnDispose();
    };
    $p.OnDispose = function ChangeListener_OnDispose() {
        this.Unsubscribe();
    };
    $t.Create = function ChangeListener_Create(value) {
        return $t.Create$1(value, null);
    };
    $t.Create$1 = function ChangeListener_Create(value, propertyName) {
        if ($d.is(value, System.Collections.Specialized.INotifyCollectionChanged)) {
            return new System.ComponentModel.CollectionChangeListener.ctor($d.as(value, System.Collections.Specialized.INotifyCollectionChanged), 
                propertyName);
        }
        else if ($d.is(value, System.ComponentModel.INotifyPropertyChanged)) {
            return new System.ComponentModel.ChildChangeListener.ctor$1($d.as(value, System.ComponentModel.INotifyPropertyChanged), 
                propertyName);
        }
        else
            return null;
    };
    $p.System$ComponentModel$INotifyPropertyChanged$add_PropertyChanged = $p.add_PropertyChanged;
    $p.System$ComponentModel$INotifyPropertyChanged$remove_PropertyChanged = $p.remove_PropertyChanged;
    $p.System$IDisposable$Dispose = $p.Dispose;
});
$d.define(System.ComponentModel.ChildChangeListener, System.ComponentModel.ChangeListener, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["_inotifyType", 27, 52], ["_value", System.ComponentModel.INotifyPropertyChanged, 33], ["_type", 27, 33], ["_childListeners", System.Collections.Generic.Dictionary$2(String, System.ComponentModel.ChangeListener, 31050), 33]], [["Subscribe", p.Subscribe, 1], ["ResetChildListener", p.ResetChildListener, 1, 38, [["propertyName", 20, 0]]], ["child_PropertyChanged", p.child_PropertyChanged, 1, 38, [["sender", 1, 0], ["e", System.ComponentModel.PropertyChangedEventArgs, 1]]], ["value_PropertyChanged", p.value_PropertyChanged, 1, 38, [["sender", 1, 0], ["e", System.ComponentModel.PropertyChangedEventArgs, 1]]], ["RaisePropertyChanged", p.RaisePropertyChanged, 4, 38, [["propertyName", 20, 0]]], ["Unsubscribe", p.Unsubscribe, 4], [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6, [["instance", System.ComponentModel.INotifyPropertyChanged, 0]]], ["ctor$1", t.ctor$1, 6, [["instance", System.ComponentModel.INotifyPropertyChanged, 0], ["propertyName", 20, 1]]]]]; };
    $t.cctor = function() {
        $t._inotifyType = $d.typeOf(System.ComponentModel.INotifyPropertyChanged);
    };
    $t.$ator = function() {
        this._value = null;
        this._type = null;
        this._childListeners = new (System.Collections.Generic.Dictionary$2(String, System.ComponentModel.ChangeListener, 
            31050).ctor)();
    };
    $t.ctor = function ChildChangeListener(instance) {
        $t.$baseType.ctor.call(this);
        if (instance == null) {
            throw new System.ArgumentNullException.ctor$1("instance");
        }
        if ($d.is(instance, System.ComponentModel.INotifyPropertyChanged)) {
            this._value = instance;
            this._type = $d.getTypeFromInst(this._value);
            this.Subscribe();
        }
    };
    $t.ctor$1 = function ChildChangeListener(instance, propertyName) {
        $t.ctor.call(this, instance);
        if ($d.is(instance, System.ComponentModel.INotifyPropertyChanged)) {
            this._propertyName = propertyName;
        }
    };
    $p.Subscribe = function ChildChangeListener_Subscribe() {
        if (this._value != null) {
            this._value.add_PropertyChanged($d.delegate(this.value_PropertyChanged, this));
        }
        if (this._type != null) {
            var query = System.Linq.Enumerable.Where(System.Reflection.PropertyInfo, this._type.GetProperties(), 
                $d.delegate(function(p) {
                    return $t._inotifyType.IsAssignableFrom(p.get_PropertyType());
                }, this));
            if (query != null) {
                var $iter = query;
                var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                    var property = $enumerator.System$Collections$IEnumerator$get_Current();
                    this._childListeners.Add$1(property.get_Name(), null);
                    this.ResetChildListener(property.get_Name());
                }
            }
        }
    };
    $p.ResetChildListener = function ChildChangeListener_ResetChildListener(propertyName) {
        if (this._childListeners.ContainsKey(propertyName)) {
            if (this._childListeners.get_Item(propertyName) != null) {
                this._childListeners.get_Item(propertyName).remove_PropertyChanged($d.delegate(this.child_PropertyChanged, 
                    this));
                this._childListeners.get_Item(propertyName).Dispose();
                this._childListeners.set_Item(propertyName, null);
            }
            var property = this._type.GetProperty(propertyName);
            if (property == null)
                throw new System.InvalidOperationException.ctor$1(String.Format("Was unable to get '{0}' property information from Type '{1}'", 
                    $d.array(System.Object, [propertyName, this._type.get_Name()])));
            var newValue = property.GetValue$1(this._value, null);
            if (newValue != null) {
                if ($d.is(newValue, System.ComponentModel.INotifyPropertyChanged) || $d.is(newValue, 
                    System.Collections.Specialized.INotifyCollectionChanged)) {
                    if ($d.is(newValue, System.Collections.Specialized.INotifyCollectionChanged)) {
                        this._childListeners.set_Item(propertyName, new System.ComponentModel.CollectionChangeListener.ctor($d.as(newValue, 
                            System.Collections.Specialized.INotifyCollectionChanged), propertyName));
                    }
                    else if ($d.is(newValue, System.ComponentModel.INotifyPropertyChanged)) {
                        this._childListeners.set_Item(propertyName, new System.ComponentModel.ChildChangeListener.ctor$1($d.as(newValue, 
                            System.ComponentModel.INotifyPropertyChanged), propertyName));
                    }
                    if (this._childListeners.get_Item(propertyName) != null) {
                        this._childListeners.get_Item(propertyName).add_PropertyChanged($d.delegate(this.child_PropertyChanged, 
                            this));
                    }
                }
            }
        }
    };
    $p.child_PropertyChanged = function ChildChangeListener_child_PropertyChanged(sender, e) {
        this.RaisePropertyChanged(e.get_PropertyName());
    };
    $p.value_PropertyChanged = function ChildChangeListener_value_PropertyChanged(sender, e) {
        this.ResetChildListener(e.get_PropertyName());
        this.RaisePropertyChanged(e.get_PropertyName());
    };
    $p.RaisePropertyChanged = function ChildChangeListener_RaisePropertyChanged(propertyName) {
        $t.$baseType.prototype.RaisePropertyChanged.call(this, String.Format("{0}{1}{2}", $d.array(System.Object, 
            [this._propertyName, this._propertyName != null ? "." : null, propertyName])));
    };
    $p.Unsubscribe = function ChildChangeListener_Unsubscribe() {
        if (this._value != null) {
            this._value.remove_PropertyChanged($d.delegate(this.value_PropertyChanged, this));
        }
        var $iter = this._childListeners.get_Keys();
        var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
        while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
            var binderKey = $enumerator.System$Collections$IEnumerator$get_Current();
            if (this._childListeners.get_Item(binderKey) != null)
                this._childListeners.get_Item(binderKey).Dispose();
        }
        this._childListeners.Clear();
    };
});
$d.define(System.ComponentModel.CollectionChangeListener, System.ComponentModel.ChangeListener, function($t, $p) {
    $t.$intfs = [System.ComponentModel.INotifyPropertyChanged, System.IDisposable];
    $t.$typeInfo = function(t, p) { return [1, [["_value", System.Collections.Specialized.INotifyCollectionChanged, 33], ["_collectionListeners", System.Collections.Generic.Dictionary$2(System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.ChangeListener, 28374), 33]], [["Subscribe", p.Subscribe, 1], ["ResetChildListener", p.ResetChildListener, 1, 38, [["item", System.ComponentModel.INotifyPropertyChanged, 0]]], ["RemoveItem", p.RemoveItem, 1, 38, [["item", System.ComponentModel.INotifyPropertyChanged, 0]]], ["ClearCollection", p.ClearCollection, 1], ["value_CollectionChanged", p.value_CollectionChanged, 1, 38, [["sender", 1, 0], ["e", System.Collections.Specialized.NotifyCollectionChangedEventArgs, 1]]], ["listener_PropertyChanged", p.listener_PropertyChanged, 1, 38, [["sender", 1, 0], ["e", System.ComponentModel.PropertyChangedEventArgs, 1]]], ["Unsubscribe", p.Unsubscribe, 4]], [["ctor", t.ctor, 6, [["collection", System.Collections.Specialized.INotifyCollectionChanged, 0], ["propertyName", 20, 1]]]]]; };
    $t.$ator = function() {
        this._value = null;
        this._collectionListeners = new (System.Collections.Generic.Dictionary$2(System.ComponentModel.INotifyPropertyChanged, 
            System.ComponentModel.ChangeListener, 28374).ctor)();
    };
    $t.ctor = function CollectionChangeListener(collection, propertyName) {
        $t.$baseType.ctor.call(this);
        if ($d.is(collection, System.Collections.Specialized.INotifyCollectionChanged)) {
            this._value = collection;
            this._propertyName = propertyName;
            this.Subscribe();
        }
    };
    $p.Subscribe = function CollectionChangeListener_Subscribe() {
        if (this._value != null) {
            this._value.add_CollectionChanged($d.delegate(this.value_CollectionChanged, this));
            var $iter = $d.cast(this._value, System.Collections.IEnumerable);
            var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
            while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                var item = $enumerator.System$Collections$IEnumerator$get_Current();
                if ($d.is(item, System.Collections.Specialized.INotifyCollectionChanged) || $d.is(item, 
                    System.ComponentModel.INotifyPropertyChanged)) {
                    this.ResetChildListener(item);
                }
            }
        }
    };
    $p.ResetChildListener = function CollectionChangeListener_ResetChildListener(item) {
        if (item == null) {
            throw new System.ArgumentNullException.ctor$1("item");
        }
        if ($d.is(item, System.Collections.Specialized.INotifyCollectionChanged) || $d.is(item, System.ComponentModel.INotifyPropertyChanged)) {
            this.RemoveItem(item);
            var listener = null;
            if ($d.is(item, System.Collections.Specialized.INotifyCollectionChanged))
                listener = new System.ComponentModel.CollectionChangeListener.ctor($d.as(item, System.Collections.Specialized.INotifyCollectionChanged), 
                    this._propertyName);
            else if ($d.is(item, System.ComponentModel.INotifyPropertyChanged))
                listener = new System.ComponentModel.ChildChangeListener.ctor($d.as(item, System.ComponentModel.INotifyPropertyChanged));
            else
                throw new System.Exception.ctor$1("Collection reset child listener has invalid item type.");
            listener.add_PropertyChanged($d.delegate(this.listener_PropertyChanged, this));
            this._collectionListeners.Add$1(item, listener);
        }
    };
    $p.RemoveItem = function CollectionChangeListener_RemoveItem(item) {
        if (this._collectionListeners.ContainsKey(item)) {
            this._collectionListeners.get_Item(item).remove_PropertyChanged($d.delegate(this.listener_PropertyChanged, 
                this));
            this._collectionListeners.get_Item(item).Dispose();
            this._collectionListeners.Remove(item);
        }
    };
    $p.ClearCollection = function CollectionChangeListener_ClearCollection() {
        var $iter = this._collectionListeners.get_Keys();
        var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
        while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
            var key = $enumerator.System$Collections$IEnumerator$get_Current();
            this._collectionListeners.get_Item(key).Dispose();
        }
        this._collectionListeners.Clear();
    };
    $p.value_CollectionChanged = function CollectionChangeListener_value_CollectionChanged(sender, e) {
        if (e.get_Action() == 4) {
            this.ClearCollection();
        }
        else {
            if (e.get_OldItems() != null) {
                var $iter = $d.cast(e.get_OldItems(), System.Collections.IEnumerable);
                var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
                    var item = $enumerator.System$Collections$IEnumerator$get_Current();
                    if ($d.is(item, System.Collections.Specialized.INotifyCollectionChanged) || $d.is(item, 
                        System.ComponentModel.INotifyPropertyChanged)) {
                        this.RemoveItem(item);
                    }
                }
            }
            if (e.get_NewItems() != null) {
                var $iter1 = $d.cast(e.get_NewItems(), System.Collections.IEnumerable);
                var $enumerator1 = $iter1.System$Collections$IEnumerable$GetEnumerator();
                while ($enumerator1.System$Collections$IEnumerator$MoveNext()) {
                    var item = $enumerator1.System$Collections$IEnumerator$get_Current();
                    if ($d.is(item, System.Collections.Specialized.INotifyCollectionChanged) || $d.is(item, 
                        System.ComponentModel.INotifyPropertyChanged)) {
                        this.ResetChildListener(item);
                    }
                }
            }
        }
        this.RaisePropertyChanged(String.Format("{0}[]", $d.array(System.Object, [this._propertyName])));
    };
    $p.listener_PropertyChanged = function CollectionChangeListener_listener_PropertyChanged(sender, e) {
        this.RaisePropertyChanged(String.Format("{0}[]", $d.array(System.Object, [this._propertyName])));
    };
    $p.Unsubscribe = function CollectionChangeListener_Unsubscribe() {
        this.ClearCollection();
        if (this._value != null) {
            this._value.remove_CollectionChanged($d.delegate(this.value_CollectionChanged, this));
        }
    };
});
System.PageAnimation = $d.typeEnum("System.PageAnimation", 45, $asm, 257, ["None", "Disable", "Custom", "Default", "MoveFromRight", "MoveFromLeft", "MoveFromBottom", "MoveFromTop", "FadeFromRight", "FadeFromLeft", "FadeFromBottom", "FadeFromTop", "FadeLeftRight", "FadeRightLeft", "FadeTopBottom", "FadeBottomTop", "EasingFromRight", "EasingFromLeft", "EasingFromBottom", "EasingFromTop", "ScaleDownFromRight", "ScaleDownFromLeft", "ScaleDownFromBottom", "ScaleDownFromTop", "ScaleDownScaleDown", "ScaleUpScaleUp", "MoveToLeftScaleUp", "MoveToRightScaleUp", "MoveToTopScaleUp", "MoveToBottomScaleUp", "ScaleDownScaleUp", "GlueLeftFromRight", "GlueRightFromLeft", "GlueBottomFromTop", "GlueTopFromBottom", "FlipToRight", "FlipToLeft", "FlipToTop", "FlipToBottom", "Falling", "Newspaper", "PushLeftFromRight", "PushRightFromLeft", "PushTopFromBottom", "PushBottomFromTop", "PushLeftPullRight", "PushRightPullLeft", "PushTopPullBottom", "PushBottomPullTop", "FoldLeftFromRight", "FoldRightFromLeft", "FoldTopFromBottom", "FoldBottomFromTop", "MoveToRightUnfoldLeft", "MoveToLeftUnfoldRight", "MoveToBottomUnfoldTop", "MoveToTopUnfoldBottom", "RoomToLeft", "RoomToRight", "RoomToTop", "RoomToBottom", "CubeToLeft", "CubeToRight", "CubeToTop", "CubeToBottom", "CarouselToLeft", "CarouselToRight", "CarouselToTop", "CarouselToBottom", "RotateSlide"], [-100, -10, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]);
$d.define(System.PageAnimationSet, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["maxAnimations", 45, 86, 67], ["outClass", 20, 1], ["inClass", 20, 1], ["isPerspective", 39, 1], ["duration", 45, 1], ["cssClasses", $d.arrayType(System.PageAnimationSet), 22], ["cssSelectors", System.Collections.Generic.List$1(String, 54783), 22], ["cssDurations", System.Collections.Generic.List$1(String, 54783), 22], ["valid", 45, 1]], [["get_outClass", p.get_outClass, 6, 20], ["set_outClass", p.set_outClass, 1, 38, [["value", 20, 0]]], ["get_inClass", p.get_inClass, 6, 20], ["set_inClass", p.set_inClass, 1, 38, [["value", 20, 0]]], ["get_isPerspective", p.get_isPerspective, 6, 39], ["set_isPerspective", p.set_isPerspective, 1, 38, [["value", 39, 0]]], ["get_duration", p.get_duration, 6, 45], ["set_duration", p.set_duration, 1, 38, [["value", 45, 0]]], ["get_isValid", p.get_isValid, 6, 39], ["parseSelectors", t.parseSelectors, 22], ["hasSelector", t.hasSelector, 22, 39, [["selector", 20, 0]]], ["getDuration", t.getDuration, 22, 45, [["selector", 20, 0]]], [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6, [["outClass", 20, 0], ["inClass", 20, 1], ["isPerspective", 39, 2], ["cssDuration", 45, 3, 4096, 500]]]], [["outClass", 20, 0, 1], ["inClass", 20, 2, 3], ["isPerspective", 39, 4, 5], ["duration", 45, 6, 7], ["isValid", 39, 8]]]; };
    $t.cctor = function() {
        $t.maxAnimations = 67;
        $t.cssClasses = $d.array(System.PageAnimationSet, 67);
        $t.cssSelectors = new (System.Collections.Generic.List$1(String, 54783).ctor)();
        $t.cssDurations = new (System.Collections.Generic.List$1(String, 54783).ctor)();
    };
    $t.$ator = function() {
        this.valid = -1;
        this.outClass = null;
        this.inClass = null;
        this.isPerspective = false;
        this.duration = 0;
    };
    $p.get_outClass = function PageAnimationSet_get_outClass() { return this.outClass; };
    $p.set_outClass = function PageAnimationSet_set_outClass(value) { this.outClass = value;return value; };
    $p.get_inClass = function PageAnimationSet_get_inClass() { return this.inClass; };
    $p.set_inClass = function PageAnimationSet_set_inClass(value) { this.inClass = value;return value; };
    $p.get_isPerspective = function PageAnimationSet_get_isPerspective() { return this.isPerspective; };
    $p.set_isPerspective = function PageAnimationSet_set_isPerspective(value) { this.isPerspective = value;return value; };
    $p.get_duration = function PageAnimationSet_get_duration() { return this.duration; };
    $p.set_duration = function PageAnimationSet_set_duration(value) { this.duration = value;return value; };
    $t.ctor = function PageAnimationSet(outClass, inClass, isPerspective, cssDuration) {
        $t.$baseType.ctor.call(this);
        this.set_outClass(outClass);
        this.set_inClass(inClass);
        this.set_isPerspective(isPerspective);
        this.set_duration(cssDuration);
        this.valid = -1;
    };
    $p.get_isValid = function PageAnimationSet_get_isValid() {
        if (this.valid == -1) {
            if (!String.IsNullOrEmpty(this.get_outClass()) && !String.IsNullOrEmpty(this.get_inClass())) {
                var outClassList = (this.get_outClass().indexOf(" ") >= 0) ? this.get_outClass().Split($d.array(System.Char, 
                    [32 /*' '*/])) : $d.array(String, [this.get_outClass()]);
                var firstOutClass = (outClassList != null && outClassList.length > 0) ? outClassList[0] : String.Empty;
                var inClassList = (this.get_inClass().indexOf(" ") >= 0) ? this.get_inClass().Split($d.array(System.Char, 
                    [32 /*' '*/])) : $d.array(String, [this.get_inClass()]);
                var firstInClass = (inClassList != null && inClassList.length > 0) ? inClassList[0] : String.Empty;
                if (!String.IsNullOrEmpty(firstOutClass) && !String.IsNullOrEmpty(firstInClass)) {
                    var hasOutClass = $t.hasSelector(firstOutClass);
                    var hasInClass = $t.hasSelector(firstInClass);
                    this.valid = (hasOutClass && hasInClass) ? 1 : 0;
                }
                else {
                    this.valid = 0;
                }
            }
            else {
                this.valid = 0;
            }
        }
        return (this.valid == 1);
    };
    $t.parseSelectors = function PageAnimationSet_parseSelectors() {
        $t().cssSelectors = new (System.Collections.Generic.List$1(String, 54783).ctor)();
        $t().cssDurations = new (System.Collections.Generic.List$1(String, 54783).ctor)();
        var sheetsLength = document.styleSheets.length;
        if (sheetsLength > 0) {
            for (var i = 0; i < sheetsLength; i++) {
                var currentSheet = document.styleSheets[i];
                if (currentSheet != null) {
                    var currentRulesSheet = (currentSheet.cssRules != null) ? currentSheet.cssRules : (currentSheet.rules != null) ? currentSheet.rules : null;
                    if (currentRulesSheet != null) {
                        var rulesLength = currentRulesSheet.length;
                        if (rulesLength > 0) {
                            for (var j = 0; j < rulesLength; j++) {
                                var ruleSelector = currentRulesSheet[j];
                                if (ruleSelector != null && ruleSelector.selectorText != null) {
                                    var ruleSelectorText = ruleSelector.selectorText;
                                    if (!String.IsNullOrEmpty(ruleSelectorText)) {
                                        var pt_selector_text = ruleSelectorText.toLowerCase().trim();
                                        if (pt_selector_text.indexOf(".ct-") >= 0 || pt_selector_text.indexOf(".md-") >= 0) {
                                            var pt_buffer = pt_selector_text.Replace$1(".", "").Replace$1(",", 
                                                "");
                                            $t().cssSelectors.Add(pt_buffer);
                                            if (pt_selector_text.indexOf(".ct-effect-duration-") >= 0 || pt_selector_text.indexOf(".md-effect-duration-") >= 0) {
                                                var style_object = ruleSelector.style;
                                                if (style_object != null && !String.IsNullOrEmpty(style_object.transitionDuration)) {
                                                    var pt_duration = style_object.transitionDuration.toLowerCase().trim();
                                                    var pt_value = String.Empty;
                                                    if (pt_duration.EndsWith("ms")) {
                                                        var pt_milliseconds = pt_duration.Replace$1("ms", 
                                                            "");
                                                        var pt_milliseconds_value = { value: 0 };
                                                        System.Double.TryParse(pt_milliseconds, pt_milliseconds_value);
                                                        pt_value = String.Format("{0}", $d.array(System.Object, 
                                                            [pt_milliseconds_value.value]));
                                                    }
                                                    else if (pt_duration.EndsWith("s")) {
                                                        var pt_seconds = pt_duration.Replace$1("s", "");
                                                        var pt_seconds_value = { value: 0 };
                                                        System.Double.TryParse(pt_seconds, pt_seconds_value);
                                                        pt_value = String.Format("{0}", $d.array(System.Object, 
                                                            [(pt_seconds_value.value * 1000)]));
                                                    }
                                                    if (!String.IsNullOrEmpty(pt_buffer)) {
                                                        if (pt_buffer.indexOf(" ") >= 0) {
                                                            var pt_buffers = pt_buffer.Split($d.array(System.Char, 
                                                                [32 /*' '*/]));
                                                            for (var $i = 0, $length = pt_buffers.length; $i < $length; $i++) {
                                                                var pt_data = pt_buffers[$i];
                                                                var pt_item_a = String.Format("{0}-{1}", 
                                                                    $d.array(System.Object, [pt_data, 
                                                                        pt_value]));
                                                                $t().cssDurations.Add(pt_item_a);
                                                            }
                                                        }
                                                        else {
                                                            var pt_item_b = String.Format("{0}-{1}", 
                                                                $d.array(System.Object, [pt_buffer, pt_value]));
                                                            $t().cssDurations.Add(pt_item_b);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    $t.hasSelector = function PageAnimationSet_hasSelector(selector) {
        var result = false;
        if (!String.IsNullOrEmpty(selector)) {
            var cssSearch = selector.toLowerCase().trim();
            var cssResult = System.Linq.Enumerable.FirstOrDefault(String, System.Linq.Enumerable.Where(String, 
                System.PageAnimationSet().cssSelectors, $d.delegate(function(x) {
                    return (x.indexOf(cssSearch) >= 0);
                }, this)));
            result = !String.IsNullOrEmpty(cssResult);
        }
        return result;
    };
    $t.getDuration = function PageAnimationSet_getDuration(selector) {
        var result = { value: 0 };
        if (!String.IsNullOrEmpty(selector)) {
            var cssSearch = selector.toLowerCase().trim();
            var rx = System.Linq.Enumerable.FirstOrDefault(String, System.Linq.Enumerable.Where(String, 
                System.PageAnimationSet().cssDurations, $d.delegate(function(x) {
                    return (x.indexOf(cssSearch) >= 0);
                }, this)));
            if (!String.IsNullOrEmpty(rx)) {
                if (rx.StartsWith("ct-effect-duration-")) {
                    var ct_buffer = rx.Replace$1(selector, "").Replace$1("-", "");
                    System.Int32.TryParse(ct_buffer, result);
                }
                else if (rx.StartsWith("md-effect-duration-")) {
                    var md_buffer = rx.Replace$1(selector, "").Replace$1("-", "");
                    System.Int32.TryParse(md_buffer, result);
                }
            }
        }
        return result.value;
    };
});
System.ModalAnimation = $d.typeEnum("System.ModalAnimation", 45, $asm, 257, ["None", "Disable", "Custom", "Default", "FadeIn", "SlideRight", "SlideBottom", "Newspaper", "Fall", "SideFall", "StickyUp", "FlipHorizontal", "FlipVertical", "Sign", "SuperScaled", "Popup", "Slit", "RotateBottom", "RotateLeft", "Blur", "Reveal", "SneakUnder", "SlipOver", "MakeWay", "ContentScale", "WindowStack"], [-100, -10, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]);
$d.define(System.ModalAnimationSet, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["maxTransitions", 45, 86, 23], ["effect", 20, 1], ["isWindow", 39, 1], ["isScaled", 39, 1], ["isPerspective", 39, 1], ["duration", 45, 1], ["cssTransitions", $d.arrayType(System.ModalAnimationSet), 22]], [["get_effect", p.get_effect, 6, 20], ["set_effect", p.set_effect, 1, 38, [["value", 20, 0]]], ["get_isWindow", p.get_isWindow, 6, 39], ["set_isWindow", p.set_isWindow, 1, 38, [["value", 39, 0]]], ["get_isScaled", p.get_isScaled, 6, 39], ["set_isScaled", p.set_isScaled, 1, 38, [["value", 39, 0]]], ["get_isPerspective", p.get_isPerspective, 6, 39], ["set_isPerspective", p.set_isPerspective, 1, 38, [["value", 39, 0]]], ["get_duration", p.get_duration, 6, 45], ["set_duration", p.set_duration, 1, 38, [["value", 45, 0]]], [".cctor", t.cctor, 17]], [["ctor", t.ctor, 6, [["effect", 20, 0], ["cssDuration", 45, 1, 4096, 300], ["isScaled", 39, 2, 4096, false], ["isPerspective", 39, 3, 4096, false], ["isWindow", 39, 4, 4096, false]]]], [["effect", 20, 0, 1], ["isWindow", 39, 2, 3], ["isScaled", 39, 4, 5], ["isPerspective", 39, 6, 7], ["duration", 45, 8, 9]]]; };
    $t.cctor = function() {
        $t.maxTransitions = 23;
        $t.cssTransitions = $d.array(System.ModalAnimationSet, 23);
    };
    $t.$ator = function() {
        this.effect = null;
        this.isWindow = false;
        this.isScaled = false;
        this.isPerspective = false;
        this.duration = 0;
    };
    $p.get_effect = function ModalAnimationSet_get_effect() { return this.effect; };
    $p.set_effect = function ModalAnimationSet_set_effect(value) { this.effect = value;return value; };
    $p.get_isWindow = function ModalAnimationSet_get_isWindow() { return this.isWindow; };
    $p.set_isWindow = function ModalAnimationSet_set_isWindow(value) { this.isWindow = value;return value; };
    $p.get_isScaled = function ModalAnimationSet_get_isScaled() { return this.isScaled; };
    $p.set_isScaled = function ModalAnimationSet_set_isScaled(value) { this.isScaled = value;return value; };
    $p.get_isPerspective = function ModalAnimationSet_get_isPerspective() { return this.isPerspective; };
    $p.set_isPerspective = function ModalAnimationSet_set_isPerspective(value) { this.isPerspective = value;return value; };
    $p.get_duration = function ModalAnimationSet_get_duration() { return this.duration; };
    $p.set_duration = function ModalAnimationSet_set_duration(value) { this.duration = value;return value; };
    $t.ctor = function ModalAnimationSet(effect, cssDuration, isScaled, isPerspective, isWindow) {
        $t.$baseType.ctor.call(this);
        this.set_effect(effect);
        this.set_isWindow(isWindow);
        this.set_isScaled(isScaled);
        this.set_isPerspective(isPerspective);
        this.set_duration(cssDuration);
    };
});
System.DialogSize = $d.typeEnum("System.DialogSize", 45, $asm, 257, ["Default", "ExtraSmall", "Small", "Medium", "Large", "ExtraLarge", "HighDefinition", "LongExtraSmall", "LongSmall", "LongMedium", "Custom"], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);
$d.define(System.PageView, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, [["isInitialized", 39, 22], ["isAnimating", 39, 22], ["supportviews", 39, 22], ["supportmodal", 39, 22], ["DATA_TOGGLE", 20, 86, "data-toggle"], ["DATA_TARGET", 20, 86, "data-target"], ["DATA_TWOWAY", 20, 86, "data-twoway"], ["DATA_CONTENT", 20, 86, "data-content"], ["DATA_BINDING", 20, 86, "data-binding"], ["DATA_COMMAND", 20, 86, "data-command"], ["DATA_DISMISS", 20, 86, "data-dismiss"], ["DATA_PARAMETER", 20, 86, "data-parameter"], ["DATA_ANIMATION", 20, 86, "data-animation"], ["DATA_DIRECTIVE", 20, 86, "data-directive"], ["DATA_EXECUTE", 20, 86, "data-execute"], ["DATA_OPTIONS", 20, 86, "data-options"], ["RESET_NODES", 39, 22]], [["init", t.init, 22, 39, [["page", 39, 0], ["root", 39, 1], ["animation", System.PageAnimation, 2], ["view", System.IViewController, 3], ["container", HTMLElement, 4], ["parameter", 1, 5], ["dialog", 39, 6, 4096, false]]], ["resetNodes", t.resetNodes, 17, 38, [["parent", HTMLElement, 0]]], ["onEndAnimation", t.onEndAnimation, 17, 38, [["ct_view", 20, 0], ["ct_view_current", 20, 1], ["outpage", HTMLElement, 2], ["inpage", HTMLElement, 3], ["perspective", 39, 4]]], ["getCurrentPage", t.getCurrentPage, 17, HTMLElement, [["ct_view", 20, 0], ["ct_view_current", 20, 1], ["container", HTMLElement, 2]]], ["getAnimationSet", t.getAnimationSet, 17, System.PageAnimationSet, [["transition", 45, 0]]], ["createAnimationSet", t.createAnimationSet, 17, System.PageAnimationSet, [["transition", 45, 0]]], ["createModalAnimationSet", t.createModalAnimationSet, 17, System.ModalAnimationSet, [["transition", 45, 0]]], ["getModalAnimationSet", t.getModalAnimationSet, 22, System.ModalAnimationSet, [["animation", System.ModalAnimation, 0]]], ["getModalDialogSize", t.getModalDialogSize, 22, 20, [["sizes", System.DialogSize, 0]]], [".cctor", t.cctor, 17]]]; };
    $t.cctor = function() {
        $t.isInitialized = false;
        $t.isAnimating = false;
        $t.supportviews = false;
        $t.supportmodal = false;
        $t.DATA_TOGGLE = "data-toggle";
        $t.DATA_TARGET = "data-target";
        $t.DATA_TWOWAY = "data-twoway";
        $t.DATA_CONTENT = "data-content";
        $t.DATA_BINDING = "data-binding";
        $t.DATA_COMMAND = "data-command";
        $t.DATA_DISMISS = "data-dismiss";
        $t.DATA_PARAMETER = "data-parameter";
        $t.DATA_ANIMATION = "data-animation";
        $t.DATA_DIRECTIVE = "data-directive";
        $t.DATA_EXECUTE = "data-execute";
        $t.DATA_OPTIONS = "data-options";
        $t.RESET_NODES = true;
    };
    $t.init = function PageView_init(page, root, animation, view, container, parameter, dialog) {
        if (container != null) {
            if (!System.PageView().isInitialized) {
                System.PageAnimationSet.parseSelectors();
                for (var ii = 0; ii < 67; ii++) {
                    System.PageAnimationSet().cssClasses[ii] = $t.createAnimationSet(ii);
                }
                for (var iii = 0; iii < 23; iii++) {
                    System.ModalAnimationSet().cssTransitions[iii] = $t.createModalAnimationSet(iii);
                }
                System.PageView().supportviews = System.UIManagerExtensions.hasRequired(System.Root().get_ui());
                System.PageView().supportmodal = System.UIManagerExtensions.hasDialog(System.Root().get_ui());
                System.PageView().isInitialized = true;
            }
            if (view == null && dialog == true) {
                return true;
            }
            if (page) {
                if (System.PageView().isAnimating)
                    return false;
                if (System.PageView().supportviews) {
                    if (animation != -100 && animation != -10) {
                        var currPage = $t.getCurrentPage(System.UIManager().CONTENT_VIEW, System.UIManager().CONTENT_VIEW_CURRENT, 
                            container);
                        if (currPage != null) {
                            if (System.PageView().RESET_NODES) {
                                $t.resetNodes(currPage);
                            }
                            var nextPage = System.Root.create("div");
                            System.Root.setClasses(nextPage, System.UIManager().CONTENT_VIEW);
                            container.appendChild(nextPage);
                            view.System$IViewController$Initialize(nextPage, parameter, root);
                            var transition = (animation | 0);
                            var animations = $t.getAnimationSet(transition);
                            if (animations != null && animations.get_duration() > 99) {
                                if (animations != null && animations.get_isValid()) {
                                    System.PageView().isAnimating = true;
                                    if (animations.get_isPerspective()) {
                                        System.UIManagerExtensions.setPerspectiveBackdrop(System.Root().get_ui());
                                    }
                                    var dynamic_curr_element = currPage;
                                    var dynamic_next_element = nextPage;
                                    System.Root.delay(50, $d.delegate(function() {
                                        System.Root.addClass(nextPage, System.UIManager().CONTENT_VIEW_CURRENT);
                                        var nextClass = System.Root.getClasses(nextPage);
                                        var newNextClass = !String.IsNullOrEmpty(nextClass) ? (nextClass.trim() + " " + animations.get_inClass()) : animations.get_inClass();
                                        System.Root.setClasses(nextPage, newNextClass);
                                        var currClass = System.Root.getClasses(currPage);
                                        var newCurrClass = !String.IsNullOrEmpty(currClass) ? (currClass.trim() + " " + animations.get_outClass()) : animations.get_outClass();
                                        System.Root.setClasses(currPage, newCurrClass);
                                        System.Root.delay(animations.get_duration(), $d.delegate(function() {
                                            $t.onEndAnimation(System.UIManager().CONTENT_VIEW, System.UIManager().CONTENT_VIEW_CURRENT, 
                                                currPage, nextPage, animations.get_isPerspective());
                                        }, this));
                                    }, this));
                                }
                                else {
                                    System.Trace.Info("===> Warning: Gateway.css (pxcorlib) - Page animation set null or invalid. View transitions disabled.");
                                    System.Root.emptyContent(container);
                                    var bufferPage1 = System.Root.create("div");
                                    System.Root.setClasses(bufferPage1, System.UIManager().CONTENT_VIEW);
                                    container.appendChild(bufferPage1);
                                    view.System$IViewController$Initialize(bufferPage1, parameter, root);
                                    System.Root.addClass(bufferPage1, System.UIManager().CONTENT_VIEW_CURRENT);
                                }
                            }
                            else {
                                System.Trace.Info("===> Warning: Gateway.css (pxcorlib) - Page animation duration must be at least 100ms. View transitions disabled.");
                                System.Root.emptyContent(container);
                                var bufferPage2 = System.Root.create("div");
                                System.Root.setClasses(bufferPage2, System.UIManager().CONTENT_VIEW);
                                container.appendChild(bufferPage2);
                                view.System$IViewController$Initialize(bufferPage2, parameter, root);
                                System.Root.addClass(bufferPage2, System.UIManager().CONTENT_VIEW_CURRENT);
                            }
                        }
                        else {
                            System.Root.emptyContent(container);
                            var bufferPage4 = System.Root.create("div");
                            System.Root.setClasses(bufferPage4, System.UIManager().CONTENT_VIEW);
                            container.appendChild(bufferPage4);
                            view.System$IViewController$Initialize(bufferPage4, parameter, root);
                            System.Root.addClass(bufferPage4, System.UIManager().CONTENT_VIEW_CURRENT);
                        }
                    }
                    else {
                        System.Root.emptyContent(container);
                        var bufferPage5 = System.Root.create("div");
                        System.Root.setClasses(bufferPage5, System.UIManager().CONTENT_VIEW);
                        container.appendChild(bufferPage5);
                        view.System$IViewController$Initialize(bufferPage5, parameter, root);
                        System.Root.addClass(bufferPage5, System.UIManager().CONTENT_VIEW_CURRENT);
                    }
                }
                else {
                    System.Trace.Info("===> Wanring: Gateway.css (pxcorlib) - Content view classes not found. View transitions disabled.");
                    view.System$IViewController$Initialize(container, parameter, root);
                }
            }
            else {
                view.System$IViewController$Initialize(container, parameter, root);
            }
        }
        return true;
    };
    $t.resetNodes = function PageView_resetNodes(parent) {
        if (parent != null) {
            DuoCode.Dom.HtmlDuoExtensions.iterateNodes(parent, $d.delegate(function(node) {
                if (node != null && $d.is(node, HTMLElement)) {
                    var el = node;
                    if (el != null) {
                        if (!String.IsNullOrEmpty(el.id)) {
                            try {
                                el.id = null;
                            }
                            catch ($e) {
                                $e = System.Exception.Wrap($e);
                                System.Trace.Info$1("RESET ERROR: {0}", $e.get_Message());
                            }
                        }
                    }
                }
            }, this));
        }
    };
    $t.onEndAnimation = function PageView_onEndAnimation(ct_view, ct_view_current, outpage, inpage, perspective) {
        if (System.PageView().isAnimating) {
            if (outpage != null) {
                System.Root.removeElement(outpage);
            }
            if (inpage != null) {
                System.Root.setClasses(inpage, (ct_view + " " + ct_view_current));
            }
        }
        System.PageView().isAnimating = false;
        if (perspective) {
            System.UIManagerExtensions.removePerspectiveBackdrop(System.Root().get_ui());
        }
        var complete = System.UIManagerExtensions.getAnimationEndEvent(System.Root().get_ui());
        if (complete != null) {
            try {
                complete();
            }
            catch ($e) {
                $e = System.Exception.Wrap($e);
                System.Trace.Info$1("===> Error: AnimationEndEvent: {0}", $e.get_Message());
            }
        }
    };
    $t.getCurrentPage = function PageView_getCurrentPage(ct_view, ct_view_current, container) {
        var result = null;
        var items = new (System.Collections.Generic.List$1(HTMLElement, 22430).ctor)();
        if (container != null) {
            DuoCode.Dom.HtmlDuoExtensions.iterateNodes(container, $d.delegate(function(node) {
                if (node != null && $d.is(node, HTMLElement)) {
                    var el = node;
                    if (el != null) {
                        if (el.tagName.toLowerCase() == "div" && System.Root.hasClass(el, ct_view)) {
                            items.Add(el);
                        }
                    }
                }
            }, this));
        }
        if (items.get_Count() == 1) {
            var current = items.get_Item(0);
            if (System.Root.hasClass(current, ct_view_current)) {
                result = current;
            }
        }
        items.Clear();
        return result;
    };
    $t.getAnimationSet = function PageView_getAnimationSet(transition) {
        var result = null;
        if (transition == -1) {
            result = System.UIManagerExtensions.getCusomtPageAnimation(System.Root().get_ui());
        }
        else if (transition >= 0 && transition <= 66) {
            result = System.PageAnimationSet().cssClasses[transition];
        }
        return result;
    };
    $t.createAnimationSet = function PageView_createAnimationSet(transition) {
        var isPerspective = false;
        var outClass = "ct-view-defaultOut", inClass = "ct-view-defaultIn";
        switch (transition) {
            case 0:
                outClass = "ct-view-defaultOut";
                inClass = "ct-view-defaultIn";
                break;
            case 1:
                outClass = "ct-view-moveToLeft";
                inClass = "ct-view-moveFromRight";
                break;
            case 2:
                outClass = "ct-view-moveToRight";
                inClass = "ct-view-moveFromLeft";
                break;
            case 3:
                outClass = "ct-view-moveToTop";
                inClass = "ct-view-moveFromBottom";
                break;
            case 4:
                outClass = "ct-view-moveToBottom";
                inClass = "ct-view-moveFromTop";
                break;
            case 5:
                outClass = "ct-view-fade";
                inClass = "ct-view-moveFromRight ct-view-ontop";
                break;
            case 6:
                outClass = "ct-view-fade";
                inClass = "ct-view-moveFromLeft ct-view-ontop";
                break;
            case 7:
                outClass = "ct-view-fade";
                inClass = "ct-view-moveFromBottom ct-view-ontop";
                break;
            case 8:
                outClass = "ct-view-fade";
                inClass = "ct-view-moveFromTop ct-view-ontop";
                break;
            case 9:
                outClass = "ct-view-moveToLeftFade";
                inClass = "ct-view-moveFromRightFade";
                break;
            case 10:
                outClass = "ct-view-moveToRightFade";
                inClass = "ct-view-moveFromLeftFade";
                break;
            case 11:
                outClass = "ct-view-moveToTopFade";
                inClass = "ct-view-moveFromBottomFade";
                break;
            case 12:
                outClass = "ct-view-moveToBottomFade";
                inClass = "ct-view-moveFromTopFade";
                break;
            case 13:
                outClass = "ct-view-moveToLeftEasing ct-view-ontop";
                inClass = "ct-view-moveFromRight";
                break;
            case 14:
                outClass = "ct-view-moveToRightEasing ct-view-ontop";
                inClass = "ct-view-moveFromLeft";
                break;
            case 15:
                outClass = "ct-view-moveToTopEasing ct-view-ontop";
                inClass = "ct-view-moveFromBottom";
                break;
            case 16:
                outClass = "ct-view-moveToBottomEasing ct-view-ontop";
                inClass = "ct-view-moveFromTop";
                break;
            case 17:
                outClass = "ct-view-scaleDown";
                inClass = "ct-view-moveFromRight ct-view-ontop";
                isPerspective = true;
                break;
            case 18:
                outClass = "ct-view-scaleDown";
                inClass = "ct-view-moveFromLeft ct-view-ontop";
                isPerspective = true;
                break;
            case 19:
                outClass = "ct-view-scaleDown";
                inClass = "ct-view-moveFromBottom ct-view-ontop";
                isPerspective = true;
                break;
            case 20:
                outClass = "ct-view-scaleDown";
                inClass = "ct-view-moveFromTop ct-view-ontop";
                isPerspective = true;
                break;
            case 21:
                outClass = "ct-view-scaleDown";
                inClass = "ct-view-scaleUpDown ct-view-delay300";
                isPerspective = true;
                break;
            case 22:
                outClass = "ct-view-scaleDownUp";
                inClass = "ct-view-scaleUp ct-view-delay300";
                isPerspective = true;
                break;
            case 23:
                outClass = "ct-view-moveToLeft ct-view-ontop";
                inClass = "ct-view-scaleUp";
                isPerspective = true;
                break;
            case 24:
                outClass = "ct-view-moveToRight ct-view-ontop";
                inClass = "ct-view-scaleUp";
                isPerspective = true;
                break;
            case 25:
                outClass = "ct-view-moveToTop ct-view-ontop";
                inClass = "ct-view-scaleUp";
                isPerspective = true;
                break;
            case 26:
                outClass = "ct-view-moveToBottom ct-view-ontop";
                inClass = "ct-view-scaleUp";
                isPerspective = true;
                break;
            case 27:
                outClass = "ct-view-scaleDownCenter";
                inClass = "ct-view-scaleUpCenter ct-view-delay400";
                isPerspective = true;
                break;
            case 28:
                outClass = "ct-view-rotateRightSideFirst";
                inClass = "ct-view-moveFromRight ct-view-delay200 ct-view-ontop";
                isPerspective = true;
                break;
            case 29:
                outClass = "ct-view-rotateLeftSideFirst";
                inClass = "ct-view-moveFromLeft ct-view-delay200 ct-view-ontop";
                isPerspective = true;
                break;
            case 30:
                outClass = "ct-view-rotateTopSideFirst";
                inClass = "ct-view-moveFromTop ct-view-delay200 ct-view-ontop";
                isPerspective = true;
                break;
            case 31:
                outClass = "ct-view-rotateBottomSideFirst";
                inClass = "ct-view-moveFromBottom ct-view-delay200 ct-view-ontop";
                isPerspective = true;
                break;
            case 32:
                outClass = "ct-view-flipOutRight";
                inClass = "ct-view-flipInLeft ct-view-delay500";
                isPerspective = true;
                break;
            case 33:
                outClass = "ct-view-flipOutLeft";
                inClass = "ct-view-flipInRight ct-view-delay500";
                isPerspective = true;
                break;
            case 34:
                outClass = "ct-view-flipOutTop";
                inClass = "ct-view-flipInBottom ct-view-delay500";
                isPerspective = true;
                break;
            case 35:
                outClass = "ct-view-flipOutBottom";
                inClass = "ct-view-flipInTop ct-view-delay500";
                isPerspective = true;
                break;
            case 36:
                outClass = "ct-view-rotateFall ct-view-ontop";
                inClass = "ct-view-scaleUp";
                isPerspective = true;
                break;
            case 37:
                outClass = "ct-view-rotateOutNewspaper";
                inClass = "ct-view-rotateInNewspaper ct-view-delay500";
                isPerspective = true;
                break;
            case 38:
                outClass = "ct-view-rotatePushLeft";
                inClass = "ct-view-moveFromRight";
                isPerspective = true;
                break;
            case 39:
                outClass = "ct-view-rotatePushRight";
                inClass = "ct-view-moveFromLeft";
                isPerspective = true;
                break;
            case 40:
                outClass = "ct-view-rotatePushTop";
                inClass = "ct-view-moveFromBottom";
                isPerspective = true;
                break;
            case 41:
                outClass = "ct-view-rotatePushBottom";
                inClass = "ct-view-moveFromTop";
                isPerspective = true;
                break;
            case 42:
                outClass = "ct-view-rotatePushLeft";
                inClass = "ct-view-rotatePullRight ct-view-delay180";
                isPerspective = true;
                break;
            case 43:
                outClass = "ct-view-rotatePushRight";
                inClass = "ct-view-rotatePullLeft ct-view-delay180";
                isPerspective = true;
                break;
            case 44:
                outClass = "ct-view-rotatePushTop";
                inClass = "ct-view-rotatePullBottom ct-view-delay180";
                isPerspective = true;
                break;
            case 45:
                outClass = "ct-view-rotatePushBottom";
                inClass = "ct-view-rotatePullTop ct-view-delay180";
                isPerspective = true;
                break;
            case 46:
                outClass = "ct-view-rotateFoldLeft";
                inClass = "ct-view-moveFromRightFade";
                isPerspective = true;
                break;
            case 47:
                outClass = "ct-view-rotateFoldRight";
                inClass = "ct-view-moveFromLeftFade";
                isPerspective = true;
                break;
            case 48:
                outClass = "ct-view-rotateFoldTop";
                inClass = "ct-view-moveFromBottomFade";
                isPerspective = true;
                break;
            case 49:
                outClass = "ct-view-rotateFoldBottom";
                inClass = "ct-view-moveFromTopFade";
                isPerspective = true;
                break;
            case 50:
                outClass = "ct-view-moveToRightFade";
                inClass = "ct-view-rotateUnfoldLeft";
                isPerspective = true;
                break;
            case 51:
                outClass = "ct-view-moveToLeftFade";
                inClass = "ct-view-rotateUnfoldRight";
                isPerspective = true;
                break;
            case 52:
                outClass = "ct-view-moveToBottomFade";
                inClass = "ct-view-rotateUnfoldTop";
                isPerspective = true;
                break;
            case 53:
                outClass = "ct-view-moveToTopFade";
                inClass = "ct-view-rotateUnfoldBottom";
                isPerspective = true;
                break;
            case 54:
                outClass = "ct-view-rotateRoomLeftOut ct-view-ontop";
                inClass = "ct-view-rotateRoomLeftIn";
                break;
            case 55:
                outClass = "ct-view-rotateRoomRightOut ct-view-ontop";
                inClass = "ct-view-rotateRoomRightIn";
                break;
            case 56:
                outClass = "ct-view-rotateRoomTopOut ct-view-ontop";
                inClass = "ct-view-rotateRoomTopIn";
                break;
            case 57:
                outClass = "ct-view-rotateRoomBottomOut ct-view-ontop";
                inClass = "ct-view-rotateRoomBottomIn";
                break;
            case 58:
                outClass = "ct-view-rotateCubeLeftOut ct-view-ontop";
                inClass = "ct-view-rotateCubeLeftIn";
                isPerspective = true;
                break;
            case 59:
                outClass = "ct-view-rotateCubeRightOut ct-view-ontop";
                inClass = "ct-view-rotateCubeRightIn";
                isPerspective = true;
                break;
            case 60:
                outClass = "ct-view-rotateCubeTopOut ct-view-ontop";
                inClass = "ct-view-rotateCubeTopIn";
                isPerspective = true;
                break;
            case 61:
                outClass = "ct-view-rotateCubeBottomOut ct-view-ontop";
                inClass = "ct-view-rotateCubeBottomIn";
                isPerspective = true;
                break;
            case 62:
                outClass = "ct-view-rotateCarouselLeftOut ct-view-ontop";
                inClass = "ct-view-rotateCarouselLeftIn";
                isPerspective = true;
                break;
            case 63:
                outClass = "ct-view-rotateCarouselRightOut ct-view-ontop";
                inClass = "ct-view-rotateCarouselRightIn";
                isPerspective = true;
                break;
            case 64:
                outClass = "ct-view-rotateCarouselTopOut ct-view-ontop";
                inClass = "ct-view-rotateCarouselTopIn";
                isPerspective = true;
                break;
            case 65:
                outClass = "ct-view-rotateCarouselBottomOut ct-view-ontop";
                inClass = "ct-view-rotateCarouselBottomIn";
                isPerspective = true;
                break;
            case 66:
                outClass = "ct-view-rotateSlideOut";
                inClass = "ct-view-rotateSlideIn";
                isPerspective = true;
                break;
        }
        var cssEffect = String.Format("ct-effect-duration-{0}", $d.array(System.Object, [transition]));
        var cssDuration = System.PageAnimationSet.getDuration(cssEffect);
        return new System.PageAnimationSet.ctor(outClass, inClass, isPerspective, cssDuration);
    };
    $t.createModalAnimationSet = function PageView_createModalAnimationSet(transition) {
        var isPerspective = false, isScaled = false, isWindow = false;
        var effectClass = "md-effect-" + transition.toString();
        if (transition == 18 || transition == 19 || transition == 20) {
            isPerspective = true;
        }
        if (transition == 21) {
            isScaled = true;
        }
        if (transition == 22) {
            isWindow = true;
        }
        var cssEffect = String.Format("md-effect-duration-{0}", $d.array(System.Object, [transition]));
        var cssDuration = System.PageAnimationSet.getDuration(cssEffect);
        return new System.ModalAnimationSet.ctor(effectClass, cssDuration, isScaled, isPerspective, isWindow);
    };
    $t.getModalAnimationSet = function PageView_getModalAnimationSet(animation) {
        var min_effect = 12;
        var result = System.ModalAnimationSet().cssTransitions[12];
        if (animation == -100 || animation == -10) {
            result = System.ModalAnimationSet().cssTransitions[12];
        }
        else if (animation == 0) {
            result = System.ModalAnimationSet().cssTransitions[1];
        }
        else if (animation == -1) {
            result = System.UIManagerExtensions.getCusomtModalEffect(System.Root().get_ui()) || System.ModalAnimationSet().cssTransitions[12];
        }
        else {
            var index = (animation | 0);
            var maximum = 22;
            if (index >= 1 && index <= 22) {
                result = System.ModalAnimationSet().cssTransitions[index];
            }
            else {
                result = System.ModalAnimationSet().cssTransitions[12];
            }
        }
        return result;
    };
    $t.getModalDialogSize = function PageView_getModalDialogSize(sizes) {
        var dialog_size = "md-modal-size-md";
        var sizes_index = (sizes | 0);
        switch (sizes_index) {
            case 0:
                dialog_size = "md-modal-size-md";
                break;
            case 1:
                dialog_size = "md-modal-size-xs";
                break;
            case 2:
                dialog_size = "md-modal-size-sm";
                break;
            case 3:
                dialog_size = "md-modal-size-md";
                break;
            case 4:
                dialog_size = "md-modal-size-lg";
                break;
            case 5:
                dialog_size = "md-modal-size-xl";
                break;
            case 6:
                dialog_size = "md-modal-size-hd";
                break;
            case 7:
                dialog_size = "md-modal-long-xs";
                break;
            case 8:
                dialog_size = "md-modal-long-sm";
                break;
            case 9:
                dialog_size = "md-modal-long-md";
                break;
            case 10:
                dialog_size = "md-modal-size-cs";
                break;
        }
        return dialog_size;
    };
});
DuoCode.Runtime.Color = $d.type("DuoCode.Runtime.Color", 62, $asm, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [257, [["R", 51, 38], ["G", 51, 38], ["B", 51, 38], ["Violet", DuoCode.Runtime.Color, 22], ["White", DuoCode.Runtime.Color, 22], ["Grey", DuoCode.Runtime.Color, 22], ["Black", DuoCode.Runtime.Color, 22], ["Background", DuoCode.Runtime.Color, 22], ["DefaultColor", DuoCode.Runtime.Color, 22]], [["op_Multiply", t.op_Multiply$1, 22, DuoCode.Runtime.Color, [["k", 51, 0], ["v", DuoCode.Runtime.Color, 1]]], ["op_Addition", t.op_Addition, 22, DuoCode.Runtime.Color, [["v1", DuoCode.Runtime.Color, 0], ["v2", DuoCode.Runtime.Color, 1]]], ["op_Multiply", t.op_Multiply, 22, DuoCode.Runtime.Color, [["v1", DuoCode.Runtime.Color, 0], ["v2", DuoCode.Runtime.Color, 1]]], ["ToByte", t.ToByte, 17, 45, [["value", 51, 0]]], ["FromByte", t.FromByte, 17, 51, [["value", 45, 0]]], ["ToString", p.ToString, 6, 20], [".cctor", t.cctor, 17]], [["ctor$1", t.ctor$1, 6, [["r", 51, 0], ["g", 51, 1], ["b", 51, 2]]], ["ctor$2", t.ctor$2, 6, [["r", 45, 0], ["g", 45, 1], ["b", 45, 2]]], ["ctor", t.ctor, 6]]]; };
    $t.cctor = function() {
        $t.Violet = new DuoCode.Runtime.Color.ctor$2(204, 50, 206);
        $t.White = new DuoCode.Runtime.Color.ctor$1(1, 1, 1);
        $t.Grey = new DuoCode.Runtime.Color.ctor$1(0.5, 0.5, 0.5);
        $t.Black = new DuoCode.Runtime.Color.ctor$1(0, 0, 0);
        $t.Background = $t().Black;
        $t.DefaultColor = $t().Black;
    };
    $t.ctor = function Color() {
        this.R = 0;
        this.G = 0;
        this.B = 0;
    };
    $t.ctor$1 = function Color(r, g, b) {
        this.R = r;
        this.G = g;
        this.B = b;
    };
    $t.ctor$2 = function Color(r, g, b) {
        $t.ctor$1.call(this, $t.FromByte(r), $t.FromByte(g), $t.FromByte(b));
    };
    $t.op_Multiply$1 = function Color_op_Multiply$1(k, v) {
        return new DuoCode.Runtime.Color.ctor$1(k * v.R, k * v.G, k * v.B);
    };
    $t.op_Addition = function Color_op_Addition(v1, v2) {
        return new DuoCode.Runtime.Color.ctor$1(v1.R + v2.R, v1.G + v2.G, v1.B + v2.B);
    };
    $t.op_Multiply = function Color_op_Multiply(v1, v2) {
        return new DuoCode.Runtime.Color.ctor$1(v1.R * v2.R, v1.G * v2.G, v1.B * v2.B);
    };
    $t.ToByte = function Color_ToByte(value) {
        value = value > 1 ? 1 : value;
        return (System.Math.Floor$1(value * 255) | 0);
    };
    $t.FromByte = function Color_FromByte(value) {
        if (value > 255)
            value = 255;
        if (value < 0)
            value = 0;
        return value / 255;
    };
    $p.ToString = function Color_ToString() {
        return String.Format("rgb({0},{1},{2})", $d.array(System.Object, [$t.ToByte(this.R), $t.ToByte(this.G), 
            $t.ToByte(this.B)]));
    };
});
DuoCode.Runtime.Method = $d.typeEnum("DuoCode.Runtime.Method", 45, $asm, 257, ["OPTIONS", "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "TRACE", "CONNECT"], [0, 1, 2, 3, 4, 5, 6, 7, 8]);
$d.define(DuoCode.Runtime.DateTimeExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["ToLogString", t.ToLogString, 22, 20, [["dateTime", 57, 0]]], ["ToMonthShortName", t.ToMonthShortName, 22, 20, [["dateTime", 57, 0]]]]]; };
    $t.ToLogString = function DateTimeExtensions_ToLogString(dateTime) {
        var milliecondsString = dateTime.get_Millisecond().toString();
        while (milliecondsString.length <= 2) {
            milliecondsString = "0" + milliecondsString;
        }
        return String.Format("{0} {1} {2}:{3}:{4}.{5}", $d.array(System.Object, [dateTime.get_Day(), 
            DuoCode.Runtime.DateTimeExtensions.ToMonthShortName(dateTime), dateTime.get_Hour(), dateTime.get_Minute(), 
            dateTime.get_Second(), milliecondsString]));
    };
    $t.ToMonthShortName = function DateTimeExtensions_ToMonthShortName(dateTime) {
        return dateTime.get_JsDate().toDateString().split(" ")[1];
    };
});
$d.define(DuoCode.Runtime.JsArrayExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [(function(T) { return ["ToList", t.ToList, 22, System.Collections.Generic.List$1(T), [["source", Array, 0]], null, [T]]; }).call(this, $d.typeParam("T")), (function(T) { return ["Count", t.Count, 22, 45, [["source", System.Collections.Generic.List$1(T), 0]], null, [T]]; }).call(this, $d.typeParam("T"))]]; };
    $t.ToList = function JsArrayExtensions_ToList(T, source) {
        return System.Linq.Enumerable.ToList(T, source);
    };
    $t.Count = function JsArrayExtensions_Count(T, source) {
        return System.Linq.Enumerable.Count(T, source);
    };
});
$d.define(System.StringExtensions, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [(function(T) { return ["TryGet", t.TryGet, 22, System.Nullable$1(T), [["source", 20, 0]], null, [T]]; }).call(this, $d.typeParam("T"))]]; };
    $t.TryGet = function StringExtensions_TryGet(T, source) {
        if (!$d.typeOf(T).IsAssignableFrom($d.typeOf(System.Enum)))
            throw new System.InvalidOperationException.ctor$1(String.Format("Type \"{0}\" is not assignable from Enum", 
                $d.array(System.Object, [$d.typeOf(T).get_Name()])));
        var result = {};
        if (System.Enum.TryParse(T, source, result))
            return result.value;
        return null;
    };
});
$d.define(System.TypeHelperExtension, null, function($t, $p) {
    $t.$typeInfo = function(t, p) { return [1, null, [["IsXmlDocumentType", t.IsXmlDocumentType, 22, 39, [["t", 27, 0]]], ["IsDataSetType", t.IsDataSetType, 22, 39, [["t", 27, 0]]], ["IsDataTableType", t.IsDataTableType, 22, 39, [["t", 27, 0]]], ["IsStreamType", t.IsStreamType, 22, 39, [["t", 27, 0]]], ["IsMemoryStreamType", t.IsMemoryStreamType, 22, 39, [["t", 27, 0]]], ["IsByteArrayType", t.IsByteArrayType, 22, 39, [["t", 27, 0]]], ["IsBlobType", t.IsBlobType, 22, 39, [["t", 27, 0]]], ["IsDateTimeType", t.IsDateTimeType, 22, 39, [["t", 27, 0]]], ["IsSimpleType", t.IsSimpleType, 22, 39, [["t", 27, 0]]]]]; };
    $t.IsXmlDocumentType = function TypeHelperExtension_IsXmlDocumentType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.Xml.XmlDocument).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsDataSetType = function TypeHelperExtension_IsDataSetType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.Data.DataSet).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsDataTableType = function TypeHelperExtension_IsDataTableType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.Data.DataTable).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsStreamType = function TypeHelperExtension_IsStreamType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.IO.Stream).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsMemoryStreamType = function TypeHelperExtension_IsMemoryStreamType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.IO.MemoryStream).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsByteArrayType = function TypeHelperExtension_IsByteArrayType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf($d.arrayType(System.Byte)).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsBlobType = function TypeHelperExtension_IsBlobType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.BlobData).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsDateTimeType = function TypeHelperExtension_IsDateTimeType(t) {
        var result = false;
        if (t != $d.typeOf(System.Void)) {
            if ($d.typeOf(System.DateTime).IsAssignableFrom(t)) {
                result = true;
            }
        }
        return result;
    };
    $t.IsSimpleType = function TypeHelperExtension_IsSimpleType(t) {
        var result = true;
        var name = t.get_FullName().toLowerCase();
        if (name.indexOf("newtonsoft") >= 0) {
            result = true;
        }
        else if (name == "system.sbyte" || name == "system.byte" || name == "system.int16" || name == "system.uint16" || name == "system.int32" || name == "system.uint32" || name == "system.int64" || name == "system.uint64" || name == "system.char" || name == "system.single" || name == "system.double" || name == "system.boolean" || name == "system.decimal" || name == "system.float" || name == "system.numeric" || name == "system.money" || name == "system.string" || name == "system.object" || name == "system.type" || name == "system.reflection.membertypes") {
            result = true;
        }
        else if (System.TypeHelperExtension.IsDateTimeType(t)) {
            result = true;
        }
        return result;
    };
});
System.Gateway.AjaxRuntime();
return $asm;
})();
//# sourceMappingURL=axcorlib.js.map
